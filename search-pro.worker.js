const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;q(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&q(e.slice(0,-1),n,u)}},q=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",$="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:$,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":57,\"nextId\":57,\"documentIds\":{\"0\":\"v-7990101c\",\"1\":\"v-7990101c#_1-快速入门\",\"2\":\"v-7990101c#_1-1-部署-mysql\",\"3\":\"v-7990101c#_1-2-命令解读\",\"4\":\"v-7990101c#_2-docker-基础\",\"5\":\"v-7990101c#_2-1-常见命令\",\"6\":\"v-7990101c#_2-1-1-命令介绍\",\"7\":\"v-7990101c#_2-1-2-演示\",\"8\":\"v-7990101c#_2-1-3-命令别名\",\"9\":\"v-7990101c#_2-1-4-将容器生成新的镜像\",\"10\":\"v-7990101c#_2-1-5-将新的镜像推送到dockerhub\",\"11\":\"v-7990101c#_2-2-数据卷\",\"12\":\"v-7990101c#_2-2-1-什么是数据卷\",\"13\":\"v-7990101c#_2-2-2-数据卷命令\",\"14\":\"v-7990101c#_2-2-3-挂载本地目录或文件\",\"15\":\"v-7990101c#_2-3-镜像\",\"16\":\"v-7990101c#_2-3-1-镜像结构\",\"17\":\"v-7990101c#_2-3-2-dockerfile\",\"18\":\"v-7990101c#_2-3-3-构建镜像\",\"19\":\"v-7990101c#_2-3-4-直接指定-dockerfile-目录\",\"20\":\"v-7990101c#_2-4-网络\",\"21\":\"v-7990101c#_2-4-1-常见命令\",\"22\":\"v-7990101c#_2-4-2-教学演示-自定义网络\",\"23\":\"v-7990101c#_2-4-3-总结\",\"24\":\"v-7990101c#_3-dockercompose\",\"25\":\"v-7990101c#_3-1-基本语法\",\"26\":\"v-7990101c#_3-2-基础命令\",\"27\":\"v-7990101c@1\",\"28\":\"v-763bb5a6\",\"29\":\"v-763bb5a6#java调用\",\"30\":\"v-763bb5a6@1\",\"31\":\"v-6f3a1290\",\"32\":\"v-6f3a1290#certbot-简介\",\"33\":\"v-6f3a1290#_1-准备\",\"34\":\"v-6f3a1290#_2-使用docker安装\",\"35\":\"v-6f3a1290#_3-运行命令后按照提示操作\",\"36\":\"v-6f3a1290#_4-生成文件\",\"37\":\"v-6f3a1290#最后-邮箱验证\",\"38\":\"v-6f3a1290#_5-基于docker环境下给nginx进行配置\",\"39\":\"v-6f3a1290@0\",\"40\":\"v-6f3a1290@1\",\"41\":\"v-6d93f0b9\",\"42\":\"v-6d93f0b9#_1-安装必备的一些插件\",\"43\":\"v-6d93f0b9#_2-ideavim配置文件-ideavimrc\",\"44\":\"v-6d93f0b9@1\",\"45\":\"v-b38e0540\",\"46\":\"v-b38e0540#_1-拉取xiaoya镜像\",\"47\":\"v-b38e0540#_2-创建一个存放配置文件的本地文件夹如d-xiaoya-alist\",\"48\":\"v-b38e0540#_3-启动容器\",\"49\":\"v-b38e0540#_4-查看启动日志-如有报错-查看官网解决\",\"50\":\"v-b38e0540#_5-访问-本机ip加端口号5678\",\"51\":\"v-b38e0540@1\",\"52\":\"v-06795f94\",\"53\":\"v-06795f94#_1-添加脱敏拦截器\",\"54\":\"v-06795f94#_2-注册拦截器bean到mybatisplus的配置类中\",\"55\":\"v-06795f94@1\",\"56\":\"v-e1e3da16\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[2,12],\"2\":[3,129],\"3\":[3,81],\"4\":[3,8],\"5\":[3,5],\"6\":[3,62],\"7\":[3,86],\"8\":[4,50],\"9\":[4,34],\"10\":[4,15],\"11\":[2,22],\"12\":[3,58],\"13\":[2,152],\"14\":[3,211],\"15\":[3,6],\"16\":[4,80],\"17\":[3,170],\"18\":[3,40],\"19\":[6,67],\"20\":[3,90],\"21\":[4,21],\"22\":[4,79],\"23\":[5,5],\"24\":[2,30],\"25\":[3,86],\"26\":[3,186],\"27\":[null,null,1],\"28\":[1],\"29\":[1,94],\"30\":[null,null,2],\"31\":[1],\"32\":[2,23],\"33\":[2,2],\"34\":[2,15],\"35\":[2],\"36\":[2,15],\"37\":[2],\"38\":[2,115],\"39\":[null,null,1],\"40\":[null,null,3],\"41\":[1],\"42\":[2,8],\"43\":[3,474],\"44\":[null,null,5],\"45\":[1,15],\"46\":[2,5],\"47\":[5,53],\"48\":[2,15],\"49\":[4,5],\"50\":[3],\"51\":[null,null,5],\"52\":[2],\"53\":[2,173],\"54\":[2,59],\"55\":[null,null,4],\"56\":[1]},\"averageFieldLength\":[2.684971510983957,67.28146167935259,0.4535464324929875],\"storedFields\":{\"0\":{\"h\":\"Docker笔记\"},\"1\":{\"h\":\"1.快速入门\",\"t\":[\"要想让 Docker 帮我们安装和部署软件，肯定要保证你的机器上有 Docker. 由于大家的操作系统各不相同，安装方式也不同。为了便于大家学习，我们统一在 CentOS 的虚拟机中安装 Docker，统一学习环境。\"]},\"2\":{\"h\":\"1.1.部署 MySQL\",\"t\":[\"首先，我们利用 Docker 来安装一个 MySQL 软件，大家可以对比一下之前传统的安装方式，看看哪个效率更高一些。\",\"如果是利用传统方式部署 MySQL，大概的步骤有：\",\"搜索并下载 MySQL 安装包\",\"上传至 Linux 环境\",\"编译和配置环境\",\"安装\",\"而使用 Docker 安装，仅仅需要一步即可，在命令行输入下面的命令（建议采用 CV 大法）：\",\"docker run -d \\\\ --name mysql \\\\ -p 3306:3306 \\\\ -e TZ=Asia/Shanghai \\\\ -e MYSQL_ROOT_PASSWORD=123 \\\\ mysql \",\"运行效果如图：\",\"MySQL 安装完毕！通过任意客户端工具即可连接到 MySQL.\",\"大家可以发现，当我们执行命令后，Docker 做的第一件事情，是去自动搜索并下载了 MySQL，然后会自动运行 MySQL，我们完全不用插手，是不是非常方便。\",\"而且，这种安装方式你完全不用考虑运行的操作系统环境，它不仅仅在 CentOS 系统是这样，在 Ubuntu 系统、macOS 系统、甚至是装了 WSL 的 Windows 下，都可以使用这条命令来安装 MySQL。\",\"要知道，不同操作系统下其安装包、运行环境是都不相同的！如果是手动安装，必须手动解决安装包不同、环境不同的、配置不同的问题！\",\"而使用 Docker，这些完全不用考虑。就是因为 Docker 会自动搜索并下载 MySQL。注意：这里下载的不是安装包，而是镜像。镜像中不仅包含了 MySQL 本身，还包含了其运行所需要的环境、配置、系统级函数库。因此它在运行时就有自己独立的环境，就可以跨系统运行，也不需要手动再次配置环境了。这套独立运行的隔离环境我们称为容器。\",\"说明：\",\"镜像：英文是 image\",\"容器：英文是 container\",\"Docker 会根据命令中的镜像名称自动搜索并下载镜像，那么问题来了，它是去哪里搜索和下载镜像的呢？这些镜像又是谁制作的呢？\",\"Docker 官方提供了一个专门管理、存储镜像的网站，并对外开放了镜像上传、下载的权利。Docker 官方提供了一些基础镜像，然后各大软件公司又在基础镜像基础上，制作了自家软件的镜像，全部都存放在这个网站。这个网站就成了 Docker 镜像交流的社区：\",\"基本上我们常用的各种软件都能在这个网站上找到，我们甚至可以自己制作镜像上传上去。\",\"像这种提供存储、管理 Docker 镜像的服务器，被称为 DockerRegistry，可以翻译为镜像仓库。DockerHub 网站是官方仓库，阿里云、华为云会提供一些第三方仓库，我们也可以自己搭建私有的镜像仓库。\",\"官方仓库在国外，下载速度较慢，一般我们都会使用第三方仓库提供的镜像加速功能，提高下载速度。而企业内部的机密项目，往往会采用私有镜像仓库。\",\"总之，镜像的来源有两种：\",\"基于官方基础镜像自己制作\",\"直接去 DockerRegistry 下载\",\"用一幅图标示如下：\"]},\"3\":{\"h\":\"1.2.命令解读\",\"t\":[\"利用 Docker 快速的安装了 MySQL，非常的方便，不过我们执行的命令到底是什么意思呢？\",\"docker run -d \\\\ --name mysql \\\\ -p 3306:3306 \\\\ -e TZ=Asia/Shanghai \\\\ -e MYSQL_ROOT_PASSWORD=123 \\\\ mysql \",\"解读：\",\"docker run -d ：创建并运行一个容器，-d 则是让容器以后台进程运行\",\"--name mysql : 给容器起个名字叫 mysql，你可以叫别的\",\"-p 3306:3306 : 设置端口映射。 \",\"容器是隔离环境，外界不可访问。但是可以将宿主机端口****映射容器内到端口，当访问宿主机指定端口时，就是在访问容器内的端口了。\",\"容器内端口往往是由容器内的进程决定，例如 MySQL 进程默认端口是 3306，因此容器内端口一定是 3306；而宿主机端口则可以任意指定，一般与容器内保持一致。\",\"格式： -p 宿主机端口:容器内端口，示例中就是将宿主机的 3306 映射到容器内的 3306 端口\",\"-e TZ=Asia/Shanghai : 配置容器内进程运行时的一些参数 \",\"格式：-e KEY=VALUE，KEY 和 VALUE 都由容器内进程决定\",\"案例中，TZ=Asia/Shanghai 是设置时区；MYSQL_ROOT_PASSWORD=123 是设置 MySQL 默认密码\",\"mysql : 设置镜像名称，Docker 会根据这个名字搜索并下载镜像 \",\"格式：REPOSITORY:TAG，例如 mysql:8.0，其中 REPOSITORY 可以理解为镜像名，TAG 是版本号\",\"在未指定 TAG 的情况下，默认是最新版本，也就是 mysql:latest\",\"镜像的名称不是随意的，而是要到 DockerRegistry 中寻找，镜像运行时的配置也不是随意的，要参考镜像的帮助文档，这些在 DockerHub 网站或者软件的官方网站中都能找到。\",\"如果我们要安装其它软件，也可以到 DockerRegistry 中寻找对应的镜像名称和版本，阅读相关配置即可。\"]},\"4\":{\"h\":\"2.Docker 基础\",\"t\":[\"接下来，我们一起来学习 Docker 使用的一些基础知识，为将来部署项目打下基础。具体用法可以参考 Docker 官方文档：\"]},\"5\":{\"h\":\"2.1.常见命令\",\"t\":[\"首先我们来学习 Docker 中的常见命令，可以参考官方文档：\"]},\"6\":{\"h\":\"2.1.1.命令介绍\",\"t\":[\"其中，比较常见的命令有：\",\"命令\",\"说明\",\"文档地址\",\"docker search\",\"寻找镜像\",\"docker search\",\"docker pull\",\"拉取镜像\",\"docker pull\",\"docker login\",\"登录DockerHub\",\"docker login\",\"docker push\",\"推送镜像到 DockerRegistry\",\"docker push\",\"docker images\",\"查看本地镜像\",\"docker images\",\"docker rmi\",\"删除本地镜像\",\"docker rmi\",\"docker run\",\"创建并运行容器（不能重复创建）\",\"docker run\",\"docker stop\",\"停止指定容器\",\"docker stop\",\"docker start\",\"启动指定容器\",\"docker start\",\"docker restart\",\"重新启动容器\",\"docker restart\",\"docker rm\",\"删除指定容器\",\"docs.docker.com\",\"docker ps\",\"查看容器\",\"docker ps\",\"docker logs\",\"查看容器运行日志\",\"docker logs\",\"docker exec\",\"进入容器\",\"docker exec\",\"docker cp\",\"容器和宿主机文件拷贝\",\"docker cp\",\"docker save\",\"保存镜像到本地压缩文件\",\"docker save\",\"docker load\",\"加载本地压缩文件到镜像\",\"docker load\",\"docker inspect\",\"查看容器详细信息\",\"docker inspect\",\"补充：\",\"默认情况下，每次重启虚拟机我们都需要手动启动 Docker 和 Docker 中的容器。通过命令可以实现开机自启：\",\"# Docker开机自启 systemctl enable docker # Docker容器开机自启 docker update --restart=always [容器名/容器id] \"]},\"7\":{\"h\":\"2.1.2.演示\",\"t\":[\"教学环节说明：我们以 Nginx 为例给大家演示上述命令。\",\"# 第1步，去DockerHub查看nginx镜像仓库及相关信息 # 第2步，拉取Nginx镜像 docker pull nginx # 第3步，查看镜像 docker images # 结果如下： _REPOSITORY TAG IMAGE ID CREATED SIZE_ _nginx latest 605c77e624dd 16 months ago 141MB_ _mysql latest 3218b38490ce 17 months ago 516MB_ # 第4步，创建并允许Nginx容器 docker run -d --name nginx -p 80:80 nginx # 第5步，查看运行中容器 docker ps # 也可以加格式化方式访问，格式会更加清爽 docker ps --format \\\"table {{.ID}}\\\\t{{.Image}}\\\\t{{.Ports}}\\\\t{{.Status}}\\\\t{{.Names}}\\\" # 第6步，访问网页，地址：http://虚拟机地址 # 第7步，停止容器 docker stop nginx # 第8步，查看所有容器 docker ps -a --format \\\"table {{.ID}}\\\\t{{.Image}}\\\\t{{.Ports}}\\\\t{{.Status}}\\\\t{{.Names}}\\\" # 第9步，再次启动nginx容器 docker start nginx # 第10步，再次查看容器 docker ps --format \\\"table {{.ID}}\\\\t{{.Image}}\\\\t{{.Ports}}\\\\t{{.Status}}\\\\t{{.Names}}\\\" # 第11步，查看容器详细信息 docker inspect nginx # 第12步，进入容器,查看容器内目录 docker exec -it nginx bash # 或者，可以进入MySQL docker exec -it mysql mysql -uroot -p # 第13步，删除容器 docker rm nginx # 发现无法删除，因为容器运行中，强制删除容器 docker rm -f nginx \"]},\"8\":{\"h\":\"2.1.3.命令别名\",\"t\":[\"给常用 Docker 命令起别名，方便我们访问：\",\"# 修改/root/.bashrc文件 vi /root/.bashrc 内容如下： # .bashrc # User specific aliases and functions _alias rm='rm -i'_ _alias cp='cp -i'_ _alias mv='mv -i'_ _alias dps='docker ps --format \\\"table {{.ID}}\\\\t{{.Image}}\\\\t{{.Ports}}\\\\t{{.Status}}\\\\t{{.Names}}\\\"'_ _alias dis='docker images'_ # Source global definitions _if [ -f /etc/bashrc ]; then_ _ . /etc/bashrc_ _fi_ \",\"然后，执行命令使别名生效\",\"source /root/.bashrc \",\"接下来，试试看新的命令吧。\"]},\"9\":{\"h\":\"2.1.4.将容器生成新的镜像\",\"t\":[\"docker 启动一个镜像容器后， 可以在里面执行一些命令操作，然后使用docker commit将新的这个容器快照生成一个镜像。\",\"docker commit -m=\\\"提交的描述信息\\\" -a=\\\"作者\\\" 容器ID 要创建的目标镜像名:[tag] \",\"Docker挂载主机目录，可能会出现报错：cannot open directory .: Perission denied。\",\"解决方案：在命令中加入参数 --privileged=true。\",\"CentOS7安全模块比之前系统版本加强，不安全的会先禁止，目录挂载的情况被默认为不安全的行为，在SELinux里面挂载目录被禁止掉了。如果要开启，一般使用 --privileged=true，扩大容器的权限解决挂载没有权限的问题。也即使用该参数，容器内的root才拥有真正的root权限，否则容器内的root只是外部的一个普通用户权限。\"]},\"10\":{\"h\":\"2.1.5.将新的镜像推送到DockerHub\",\"t\":[\"登录DockerHub\",\"docker login\",\"给本地的镜像打上Tag\",\"docker tag <local_image_id> dockerhub_username/my-repo:latest\",\"将打上Tag的镜像上传到DockerHub\",\"docker push dockerhub_username/my-repo:latest\"]},\"11\":{\"h\":\"2.2.数据卷\",\"t\":[\"容器是隔离环境，容器内程序的文件、配置、运行时产生的容器都在容器内部，我们要读写容器内的文件非常不方便。大家思考几个问题：\",\"如果要升级 MySQL 版本，需要销毁旧容器，那么数据岂不是跟着被销毁了？\",\"MySQL、Nginx 容器运行后，如果我要修改其中的某些配置该怎么办？\",\"我想要让 Nginx 代理我的静态资源怎么办？\",\"因此，容器提供程序的运行环境，但是程序运行产生的数据、程序运行依赖的配置都应该与容器****解耦。\"]},\"12\":{\"h\":\"2.2.1.什么是数据卷\",\"t\":[\"数据卷（volume）是一个虚拟目录，是容器内目录与宿主机****目录之间映射的桥梁。\",\"以 Nginx 为例，我们知道 Nginx 中有两个关键的目录：\",\"html：放置一些静态资源\",\"conf：放置配置文件\",\"如果我们要让 Nginx 代理我们的静态资源，最好是放到 html 目录；如果我们要修改 Nginx 的配置，最好是找到 conf 下的 nginx.conf 文件。\",\"但遗憾的是，容器运行的 Nginx 所有的文件都在容器内部。所以我们必须利用数据卷将两个目录与宿主机目录关联，方便我们操作。如图：\",\"在上图中：\",\"我们创建了两个数据卷：conf、html\",\"Nginx 容器内部的 conf 目录和 html 目录分别与两个数据卷关联。\",\"而数据卷 conf 和 html 分别指向了宿主机的 /var/lib/docker/volumes/conf/_data 目录和 /var/lib/docker/volumes/html/_data 目录\",\"这样以来，容器内的 conf 和 html 目录就 与宿主机的 conf 和 html 目录关联起来，我们称为挂载。此时，我们操作宿主机的 /var/lib/docker/volumes/html/_data 就是在操作容器内的 /usr/share/nginx/html/_data 目录。只要我们将静态资源放入宿主机对应目录，就可以被 Nginx 代理了。\"]},\"13\":{\"h\":\"2.2.2.数据卷命令\",\"t\":[\"数据卷的相关命令有：\",\"命令\",\"说明\",\"文档地址\",\"docker volume create\",\"创建数据卷\",\"docker volume create\",\"docker volume ls\",\"查看所有数据卷\",\"docs.docker.com\",\"docker volume rm\",\"删除指定数据卷\",\"docs.docker.com\",\"docker volume inspect\",\"查看某个数据卷的详情\",\"docs.docker.com\",\"docker volume prune\",\"清除数据卷\",\"docker volume prune\",\"注意：容器与数据卷的挂载要在创建容器时配置，对于创建好的容器，是不能设置数据卷的。而且创建容器的过程中，数据卷会自动创建。\",\"教学演示环节：演示一下 nginx 的 html 目录挂载\",\"# 1.首先创建容器并指定数据卷，注意通过 -v 参数来指定数据卷 docker run -d --name nginx -p 80:80 -v html:/usr/share/nginx/html nginx # 2.然后查看数据卷 docker volume ls # 结果 _DRIVER VOLUME NAME_ _local 29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f_ _local html_ # 3.查看数据卷详情 docker volume inspect html # 结果 _[_ _ {_ _ \\\"CreatedAt\\\": \\\"2024-05-17T19:57:08+08:00\\\",_ _ \\\"Driver\\\": \\\"local\\\",_ _ \\\"Labels\\\": null,_ _ \\\"Mountpoint\\\": \\\"/var/lib/docker/volumes/html/_data\\\",_ _ \\\"Name\\\": \\\"html\\\",_ _ \\\"Options\\\": null,_ _ \\\"Scope\\\": \\\"local\\\"_ _ }_ _]_ # 4.查看/var/lib/docker/volumes/html/_data目录 ll /var/lib/docker/volumes/html/_data # 可以看到与nginx的html目录内容一样，结果如下： _总用量 __8_ _-rw-r--r--. 1 root root 497 12月 28 2021 50x.html_ _-rw-r--r--. 1 root root 615 12月 28 2021 index.html_ # 5.进入该目录，并随意修改index.html内容 cd /var/lib/docker/volumes/html/_data vi index.html # 6.打开页面，查看效果 # 7.进入容器内部，查看/usr/share/nginx/html目录内的文件是否变化 docker exec -it nginx bash \",\"教学演示环节：演示一下 MySQL 的匿名数据卷\",\"# 1.查看MySQL容器详细信息 docker inspect mysql # 关注其中.Config.Volumes部分和.Mounts部分 \",\"我们关注两部分内容，第一是 .Config.Volumes 部分：\",\"{ \\\"Config\\\": { // ... 略 \\\"Volumes\\\": { \\\"/var/lib/mysql\\\": {} } // ... 略 } } \",\"可以发现这个容器声明了一个本地目录，需要挂载数据卷，但是数据卷未定义。这就是匿名卷。\",\"然后，我们再看结果中的 .Mounts 部分：\",\"{ \\\"Mounts\\\": [ { \\\"Type\\\": \\\"volume\\\", \\\"Name\\\": \\\"29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f\\\", \\\"Source\\\": \\\"/var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data\\\", \\\"Destination\\\": \\\"/var/lib/mysql\\\", \\\"Driver\\\": \\\"local\\\", } ] } \",\"可以发现，其中有几个关键属性：\",\"Name：数据卷名称。由于定义容器未设置容器名，这里的就是匿名卷自动生成的名字，一串 hash 值。\",\"Source：宿主机目录\",\"Destination : 容器内的目录\",\"上述配置是将容器内的 /var/lib/mysql 这个目录，与数据卷 29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f 挂载。于是在宿主机中就有了 /var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data 这个目录。这就是匿名数据卷对应的目录，其使用方式与普通数据卷没有差别。\",\"接下来，可以查看该目录下的 MySQL 的 data 文件：\",\"ls -l /var/lib/docker/volumes/29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f/_data \",\"注意：每一个不同的镜像，将来创建容器后内部有哪些目录可以挂载，可以参考 DockerHub 对应的页面\"]},\"14\":{\"h\":\"2.2.3.挂载本地目录或文件\",\"t\":[\"可以发现，数据卷的目录结构较深，如果我们去操作数据卷目录会不太方便。在很多情况下，我们会直接将容器目录与宿主机指定目录挂载。挂载语法与数据卷类似：\",\"# 挂载本地目录 -v 本地目录:容器内目录 # 挂载本地文件 -v 本地文件:容器内文件 \",\"注意：本地目录或文件必须以 / 或 ./ 开头，如果直接以名字开头，会被识别为数据卷名而非本地目录名。\",\"例如：\",\"-v mysql:/var/lib/mysql # 会被识别为一个数据卷叫mysql，运行时会自动创建这个数据卷 -v ./mysql:/var/lib/mysql # 会被识别为当前目录下的mysql目录，运行时如果不存在会创建目录 \",\"教学演示，删除并重新创建 mysql 容器，并完成本地目录挂载：\",\"挂载 /root/mysql/data 到容器内的 /var/lib/mysql 目录\",\"挂载 /root/mysql/init 到容器内的 /docker-entrypoint-initdb.d 目录（初始化的 SQL 脚本目录）\",\"挂载 /root/mysql/conf 到容器内的 /etc/mysql/conf.d 目录（这个是 MySQL 配置文件目录）\",\"在课前资料中已经准备好了 mysql 的 init 目录和 conf 目录：\",\"以及对应的初始化 SQL 脚本和配置文件：\",\"其中，hm.cnf 主要是配置了 MySQL 的默认编码，改为 utf8mb4；而 hmall.sql 则是后面我们要用到的黑马商城项目的初始化 SQL 脚本。\",\"我们直接将整个 mysql 目录上传至虚拟机的 /root 目录下：\",\"接下来，我们演示本地目录挂载：\",\"# 1.删除原来的MySQL容器 docker rm -f mysql # 2.进入root目录 cd ~ # 3.创建并运行新mysql容器，挂载本地目录 docker run -d \\\\ --name mysql \\\\ -p 3306:3306 \\\\ -e TZ=Asia/Shanghai \\\\ -e MYSQL_ROOT_PASSWORD=123 \\\\ -v ./mysql/data:/var/lib/mysql \\\\ -v ./mysql/conf:/etc/mysql/conf.d \\\\ -v ./mysql/init:/docker-entrypoint-initdb.d \\\\ mysql # 4.查看root目录，可以发现~/mysql/data目录已经自动创建好了 ls -l mysql # 结果： _总用量 4_ _drwxr-xr-x. 2 root root 20 5月 19 15:11 conf_ _drwxr-xr-x. 7 polkitd root 4096 5月 19 15:11 data_ _drwxr-xr-x. 2 root root 23 5月 19 15:11 init_ # 查看data目录，会发现里面有大量数据库数据，说明数据库完成了初始化 ls -l data # 5.查看MySQL容器内数据 # 5.1.进入MySQL docker exec -it mysql mysql -uroot -p123 # 5.2.查看编码表 show variables like \\\"%char%\\\"; # 5.3.结果，发现编码是utf8mb4没有问题 _+--------------------------+--------------------------------+_ _| Variable_name | Value |_ _+--------------------------+--------------------------------+_ _| character_set_client | utf8mb4 |_ _| character_set_connection | utf8mb4 |_ _| character_set_database | utf8mb4 |_ _| character_set_filesystem | binary |_ _| character_set_results | utf8mb4 |_ _| character_set_server | utf8mb4 |_ _| character_set_system | utf8mb3 |_ _| character_sets_dir | /usr/share/mysql-8.0/charsets/ |_ +--------------------------+--------------------------------+ # 6.查看数据 # 6.1.查看数据库 show databases; # 结果，hmall是黑马商城数据库 _+--------------------+_ _| Database |_ _+--------------------+_ _| hmall |_ _| information_schema |_ _| mysql |_ _| performance_schema |_ _| sys |_ _+--------------------+_ 5 rows in set (0.00 sec) # 6.2.切换到hmall数据库 use hmall; # 6.3.查看表 show tables; # 结果： _+-----------------+_ _| Tables_in_hmall |_ _+-----------------+_ _| address |_ _| cart |_ _| item |_ _| order |_ _| order_detail |_ _| order_logistics |_ _| pay_order |_ _| user |_ _+-----------------+_ # 6.4.查看address表数据 _+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+_ _| id | user_id | province | city | town | mobile | street | contact | is_default | notes |_ _+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+_ _| 59 | 1 | 北京 | 北京 | 朝阳区 | 13900112222 | 金燕龙办公楼 | 李佳诚 | 0 | NULL |_ _| 60 | 1 | 北京 | 北京 | 朝阳区 | 13700221122 | 修正大厦 | 李佳红 | 0 | NULL |_ _| 61 | 1 | 上海 | 上海 | 浦东新区 | 13301212233 | 航头镇航头路 | 李佳星 | 1 | NULL |_ _| 63 | 1 | 广东 | 佛山 | 永春 | 13301212233 | 永春武馆 | 李晓龙 | 0 | NULL |_ _+----+---------+----------+--------+----------+-------------+---------------+-----------+------------+-------+_ _4 rows in set (0.00 sec)_ \"]},\"15\":{\"h\":\"2.3.镜像\",\"t\":[\"前面我们一直在使用别人准备好的镜像，那如果我要部署一个 Java 项目，把它打包为一个镜像该怎么做呢？\"]},\"16\":{\"h\":\"2.3.1.镜像结构\",\"t\":[\"要想自己构建镜像，必须先了解镜像的结构。\",\"之前我们说过，镜像之所以能让我们快速跨操作系统部署应用而忽略其运行环境、配置，就是因为镜像中包含了程序运行需要的系统函数库、环境、配置、依赖。\",\"因此，自定义镜像本质就是依次准备好程序运行的基础环境、依赖、应用本身、运行配置等文件，并且打包而成。\",\"举个例子，我们要从 0 部署一个 Java 应用，大概流程是这样：\",\"准备一个 linux 服务（CentOS 或者 Ubuntu 均可）\",\"安装并配置 JDK\",\"上传 Jar 包\",\"运行 jar 包\",\"那因此，我们打包镜像也是分成这么几步：\",\"准备 Linux 运行环境（java 项目并不需要完整的操作系统，仅仅是基础运行环境即可）\",\"安装并配置 JDK\",\"拷贝 jar 包\",\"配置启动脚本\",\"上述步骤中的每一次操作其实都是在生产一些文件（系统运行环境、函数库、配置最终都是磁盘文件），所以镜像就是一堆文件的集合。\",\"但需要注意的是，镜像文件不是随意堆放的，而是按照操作的步骤分层叠加而成，每一层形成的文件都会单独打包并标记一个唯一 id，称为 Layer（层）。这样，如果我们构建时用到的某些层其他人已经制作过，就可以直接拷贝使用这些层，而不用重复制作。\",\"例如，第一步中需要的 Linux 运行环境，通用性就很强，所以 Docker 官方就制作了这样的只包含 Linux 运行环境的镜像。我们在制作 java 镜像时，就无需重复制作，直接使用 Docker 官方提供的 CentOS 或 Ubuntu 镜像作为基础镜像。然后再搭建其它层即可，这样逐层搭建，最终整个 Java 项目的镜像结构如图所示：\"]},\"17\":{\"h\":\"2.3.2.Dockerfile\",\"t\":[\"由于制作镜像的过程中，需要逐层处理和打包，比较复杂，所以 Docker 就提供了自动打包镜像的功能。我们只需要将打包的过程，每一层要做的事情用固定的语法写下来，交给 Docker 去执行即可。\",\"而这种记录镜像结构的文件就称为 Dockerfile，其对应的语法可以参考官方文档：\",\"https://docs.docker.com/engine/reference/builder/\",\"其中的语法比较多，比较常用的有：\",\"指令\",\"说明\",\"示例\",\"MAINTAINER\",\"镜像维护者的姓名和邮箱地址（非必须）\",\"MAINTAINER sufeng admin@xf233.io\",\"FROM\",\"指定基础镜像\",\"FROM centos:6\",\"WORKDIR\",\"指定在创建容器后， 终端默认登录进来的工作目录\",\"WORKDIR $CATALINA_HOMEENV CATALINA_HOME /usr/local/tomcat \",\"ENV\",\"设置环境变量，可在后面指令使用\",\"ENV key value\",\"COPY\",\"拷贝本地文件到镜像的指定目录\",\"COPY ./xx.jar /tmp/app.jar\",\"ADD\",\"将宿主机目录下（或远程文件）的文件拷贝进镜像，且会自动处理URL和解压tar压缩包。\",\"RUN\",\"执行 Linux 的 shell 命令，一般是安装过程的命令\",\"RUN yum install gcc\",\"EXPOSE\",\"指定容器运行时监听的端口，是给镜像使用者看的\",\"EXPOSE 8080\",\"USER\",\"指定该镜像以用户去执行，如果不指定，默认是root\",\"（一般不修改该配置）\",\"ENTRYPOINT\",\"镜像中应用的启动命令，容器运行时调用\",\"ENTRYPOINT java -jar xx.ja\",\"CMD\",\"指定容器启动后要干的事情\",\"CMD echo \\\"hello world\\\"\",\"例如，要基于 Ubuntu 镜像来构建一个 Java 应用，其 Dockerfile 内容如下：\",\"# 指定基础镜像 FROM ubuntu:16.04 # 配置环境变量，JDK的安装目录、容器内时区 ENV JAVA_DIR=/usr/local ENV TZ=Asia/Shanghai # 拷贝jdk和java项目的包 COPY ./jdk8.tar.gz $JAVA_DIR/ COPY ./docker-demo.jar /tmp/app.jar # 设定时区 RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone # 安装JDK RUN cd $JAVA_DIR \\\\ && tar -xf ./jdk8.tar.gz \\\\ && mv ./jdk1.8.0_144 ./java8 # 配置环境变量 ENV JAVA_HOME=$JAVA_DIR/java8 ENV PATH=$PATH:$JAVA_HOME/bin # 指定项目监听的端口 EXPOSE 8080 # 入口，java项目的启动命令 ENTRYPOINT [\\\"java\\\", \\\"-jar\\\", \\\"/app.jar\\\"] \",\"同学们思考一下：以后我们会有很多很多 java 项目需要打包为镜像，他们都需要 Linux 系统环境、JDK 环境这两层，只有上面的 3 层不同（因为 jar 包不同）。如果每次制作 java 镜像都重复制作前两层镜像，是不是很麻烦。\",\"所以，就有人提供了基础的系统加 JDK 环境，我们在此基础上制作 java 镜像，就可以省去 JDK 的配置了：\",\"# 基础镜像 FROM openjdk:11.0-jre-buster # 设定时区 ENV TZ=Asia/Shanghai RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone # 拷贝jar包 COPY docker-demo.jar /app.jar # 入口 ENTRYPOINT [\\\"java\\\", \\\"-jar\\\", \\\"/app.jar\\\"] \",\"是不是简单多了。\"]},\"18\":{\"h\":\"2.3.3.构建镜像\",\"t\":[\"当 Dockerfile 文件写好以后，就可以利用命令来构建镜像了。\",\"在课前资料中，我们准备好了一个 demo 项目及对应的 Dockerfile：\",\"首先，我们将课前资料提供的 docker-demo.jar 包以及 Dockerfile 拷贝到虚拟机的 /root/demo 目录：\",\"然后，执行命令，构建镜像：\",\"# 进入镜像目录 cd /root/demo # 开始构建 docker build -t docker-demo:1.0 . \",\"命令说明：\",\"docker build : 就是构建一个 docker 镜像\",\"-t docker-demo:1.0 ：-t 参数是指定镜像的名称（repository 和 tag）\",\". : 最后的点是指构建时 Dockerfile 所在路径，由于我们进入了 demo 目录，所以指定的是 . 代表当前目录，也可以直接指定 Dockerfile 目录：\"]},\"19\":{\"h\":\"2.3.4.直接指定 Dockerfile 目录\",\"t\":[\" docker build -t docker-demo:1.0 /root/demo \",\"结果：\",\"查看镜像列表：\",\"## 查看镜像列表： docker images ## 结果 _REPOSITORY TAG IMAGE ID CREATED SIZE_ _docker-demo 1.0 d6ab0b9e64b9 27 minutes ago 327MB_ _nginx latest 605c77e624dd 16 months ago 141MB_ _mysql latest 3218b38490ce 17 months ago 516MB_ \",\"然后尝试运行该镜像：\",\"## 1.创建并运行容器 docker run -d --name dd -p 8090:8090 docker-demo:1.0 ## 2.查看容器 dps _# 结果_ _CONTAINER ID IMAGE PORTS STATUS NAMES_ _78a000447b49 docker-demo:1.0 0.0.0.0:8080->8080/tcp, :::8090->8090/tcp Up 2 seconds dd_ _f63cfead8502 mysql 0.0.0.0:3306->3306/tcp, :::3306->3306/tcp, 33060/tcp Up 2 hours mysql_ ## 3.访问 curl localhost:8080/hello/count _# 结果：_ _<h5>欢迎访问黑马商城, 这是您第1次访问<h5>_ \"]},\"20\":{\"h\":\"2.4.网络\",\"t\":[\"上节课我们创建了一个 Java 项目的容器，而 Java 项目往往需要访问其它各种中间件，例如 MySQL、Redis 等。现在，我们的容器之间能否互相访问呢？我们来测试一下\",\"首先，我们查看下 MySQL 容器的详细信息，重点关注其中的网络 IP 地址：\",\"# 1.用基本命令，寻找Networks.bridge.IPAddress属性 docker inspect mysql # 也可以使用format过滤结果 docker inspect --format='{{range .NetworkSettings.Networks}}{{println .IPAddress}}{{end}}' mysql # 得到IP地址如下： 172.17.0.2 # 2.然后通过命令进入dd容器 docker exec -it dd bash # 3.在容器内，通过ping命令测试网络 ping 172.17.0.2 _# 结果_ _PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data._ _64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.053 ms_ _64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.059 ms_ _64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.058 ms_ \",\"发现可以互联，没有问题。\",\"但是，容器的网络 IP 其实是一个虚拟的 IP，其值并不固定与某一个容器绑定，如果我们在开发时写死某个 IP，而在部署时很可能 MySQL 容器的 IP 会发生变化，连接会失败。\",\"所以，我们必须借助于 docker 的网络功能来解决这个问题，官方文档：\",\"https://docs.docker.com/engine/reference/commandline/network/\"]},\"21\":{\"h\":\"2.4.1.常见命令\",\"t\":[\"命令\",\"说明\",\"文档地址\",\"docker network create\",\"创建一个网络\",\"docker network create\",\"docker network ls\",\"查看所有网络\",\"docs.docker.com\",\"docker network rm\",\"删除指定网络\",\"docs.docker.com\",\"docker network prune\",\"清除未使用的网络\",\"docs.docker.com\",\"docker network connect\",\"使指定容器连接加入某网络\",\"docs.docker.com\",\"docker network disconnect\",\"使指定容器连接离开某网络\",\"docker network disconnect\",\"docker network inspect\",\"查看网络详细信息\",\"docker network inspect\"]},\"22\":{\"h\":\"2.4.2.教学演示：自定义网络\",\"t\":[\"## 1.首先通过命令创建一个网络 docker network create hmall ## 2.然后查看网络 docker network ls ## 结果： _NETWORK ID NAME DRIVER SCOPE_ _639bc44d0a87 bridge bridge local_ _403f16ec62a2 hmall bridge local_ _0dc0f72a0fbb host host local_ _cd8d3e8df47b none null local_ ## 其中，除了hmall以外，其它都是默认的网络 ## 3.让dd和mysql都加入该网络，注意，在加入网络时可以通过--alias给容器起别名 ## 这样该网络内的其它容器可以用别名互相访问！ ## 3.1.mysql容器，指定别名为db，另外每一个容器都有一个别名是容器名 docker network connect hmall mysql --alias db ## 3.2.db容器，也就是我们的java项目 docker network connect hmall dd ## 4.进入dd容器，尝试利用别名访问db ## 4.1.进入容器 docker exec -it dd bash ## 4.2.用db别名访问 ping db ## 结果 _PING db (172.18.0.2) 56(84) bytes of data._ _64 bytes from mysql.hmall (172.18.0.2): icmp_seq=1 ttl=64 time=0.070 ms_ _64 bytes from mysql.hmall (172.18.0.2): icmp_seq=2 ttl=64 time=0.056 ms_ ## 4.3.用容器名访问 ping mysql ## 结果： _PING mysql (172.18.0.2) 56(84) bytes of data._ _64 bytes from mysql.hmall (172.18.0.2): icmp_seq=1 ttl=64 time=0.044 ms_ _64 bytes from mysql.hmall (172.18.0.2): icmp_seq=2 ttl=64 time=0.054 ms_ \",\"OK，现在无需记住 IP 地址也可以实现容器互联了。\"]},\"23\":{\"h\":\"2.4.3.总结：\",\"t\":[\"在自定义网络中，可以给容器起多个别名，默认的别名是容器名本身\",\"在同一个自定义网络中的容器，可以通过别名互相访问\"]},\"24\":{\"h\":\"3.DockerCompose\",\"t\":[\"大家可以看到，我们部署一个简单的 java 项目，其中包含 3 个容器：\",\"MySQL\",\"Nginx\",\"Java 项目\",\"而稍微复杂的项目，其中还会有各种各样的其它中间件，需要部署的东西远不止 3 个。如果还像之前那样手动的逐一部署，就太麻烦了。\",\"而 Docker Compose 就可以帮助我们实现多个相互关联的 Docker 容器的快速部署。它允许用户通过一个单独的 docker-compose.yml 模板文件（YAML 格式）来定义一组相关联的应用容器。\"]},\"25\":{\"h\":\"3.1.基本语法\",\"t\":[\"docker-compose.yml 文件的基本语法可以参考官方文档：\",\"docker-compose 文件中可以定义多个相互关联的应用容器，每一个应用容器被称为一个服务（service）。由于 service 就是在定义某个应用的运行时参数，因此与 docker run 参数非常相似。\",\"举例来说，用 docker run 部署 MySQL 的命令如下：\",\"docker run -d \\\\ --name mysql \\\\ -p 3306:3306 \\\\ -e TZ=Asia/Shanghai \\\\ -e MYSQL_ROOT_PASSWORD=123 \\\\ -v ./mysql/data:/var/lib/mysql \\\\ -v ./mysql/conf:/etc/mysql/conf.d \\\\ -v ./mysql/init:/docker-entrypoint-initdb.d \\\\ --network hmall mysql \",\"如果用 docker-compose.yml 文件来定义，就是这样：\",\"version: \\\"3.8\\\" services: mysql: image: mysql container_name: mysql ports: - \\\"3306:3306\\\" environment: TZ: Asia/Shanghai MYSQL_ROOT_PASSWORD: 123 volumes: - \\\"./mysql/conf:/etc/mysql/conf.d\\\" - \\\"./mysql/data:/var/lib/mysql\\\" networks: - new networks: new: name: hmall \",\"对比如下：\",\"docker run 参数\",\"docker compose 指令\",\"说明\",\"--name\",\"container_name\",\"容器名称\",\"-p\",\"ports\",\"端口映射\",\"-e\",\"environment\",\"环境变量\",\"-v\",\"volumes\",\"数据卷配置\",\"--network\",\"networks\",\"网络\",\"明白了其中的对应关系，相信编写 docker-compose 文件应该难不倒大家。\",\"黑马商城部署文件：\",\"version: \\\"3.8\\\" services: mysql: image: mysql container_name: mysql ports: - \\\"3306:3306\\\" environment: TZ: Asia/Shanghai MYSQL_ROOT_PASSWORD: 123 volumes: - \\\"./mysql/conf:/etc/mysql/conf.d\\\" - \\\"./mysql/data:/var/lib/mysql\\\" - \\\"./mysql/init:/docker-entrypoint-initdb.d\\\" networks: - hm-net hmall: build: context: . dockerfile: Dockerfile container_name: hmall ports: - \\\"8080:8080\\\" networks: - hm-net depends_on: - mysql nginx: image: nginx container_name: nginx ports: - \\\"18080:18080\\\" - \\\"18081:18081\\\" volumes: - \\\"./nginx/nginx.conf:/etc/nginx/nginx.conf\\\" - \\\"./nginx/html:/usr/share/nginx/html\\\" depends_on: - hmall networks: - hm-net networks: hm-net: name: hmall \"]},\"26\":{\"h\":\"3.2.基础命令\",\"t\":[\"编写好 docker-compose.yml 文件，就可以部署项目了。常见的命令：\",\"基本语法如下：\",\"docker compose [OPTIONS] [COMMAND] \",\"其中，OPTIONS 和 COMMAND 都是可选参数，比较常见的有：\",\"类型\",\"参数或指令\",\"说明\",\"Options\",\"-f\",\"指定 compose 文件的路径和名称\",\"-p\",\"指定 project 名称。project 就是当前 compose 文件中设置的多个 service 的集合，是逻辑概念\",\"Commands\",\"up\",\"创建并启动所有 service 容器\",\"down\",\"停止并移除所有容器、网络\",\"ps\",\"列出所有启动的容器\",\"logs\",\"查看指定容器的日志\",\"stop\",\"停止容器\",\"start\",\"启动容器\",\"restart\",\"重启容器\",\"top\",\"查看运行的进程\",\"exec\",\"在指定的运行中容器中执行命令\",\"教学演示：\",\"## 1.进入root目录 cd /root ## 2.删除旧容器 docker rm -f $(docker ps -qa) ## 3.删除hmall镜像 docker rmi hmall ## 4.清空MySQL数据 rm -rf mysql/data ## 5.启动所有, -d 参数是后台启动 docker compose up -d ## 结果： _[+] Building 15.5s (8/8) FINISHED_ _ => [internal] load build definition from Dockerfile 0.0s_ _ => => transferring dockerfile: 358B 0.0s_ _ => [internal] load .dockerignore 0.0s_ _ => => transferring context: 2B 0.0s_ _ => [internal] load metadata for docker.io/library/openjdk:11.0-jre-buster 15.4s_ _ => [1/3] FROM docker.io/library/openjdk:11.0-jre-buster@sha256:3546a17e6fb4ff4fa681c3 0.0s_ _ => [internal] load build context 0.0s_ _ => => transferring context: 98B 0.0s_ _ => CACHED [2/3] RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 0.0s_ _ => CACHED [3/3] COPY hm-service.jar /app.jar 0.0s_ _ => exporting to image 0.0s_ _ => => exporting layers 0.0s_ _ => => writing image sha256:32eebee16acde22550232f2eb80c69d2ce813ed099640e4cfed2193f71 0.0s_ _ => => naming to docker.io/library/root-hmall 0.0s_ _[+] Running 4/4_ _ ✔ Network hmall Created 0.2s_ _ ✔ Container mysql Started 0.5s_ _ ✔ Container hmall Started 0.9s_ _ ✔ Container nginx Started _ 1.5s ## 6.查看镜像 docker compose images ## 结果 _CONTAINER REPOSITORY TAG IMAGE ID SIZE_ _hmall root-hmall latest 32eebee16acd 362MB_ _mysql mysql latest 3218b38490ce 516MB_ _nginx nginx latest 605c77e624dd 141MB_ ## 7.查看容器 docker compose ps ## 结果 _NAME IMAGE COMMAND SERVICE CREATED STATUS PORTS_ _hmall root-hmall \\\"java -jar /app.jar\\\" hmall 54 seconds ago Up 52 seconds 0.0.0.0:8080->8080/tcp, :::8080->8080/tcp_ _mysql mysql \\\"docker-entrypoint.s…\\\" mysql 54 seconds ago Up 53 seconds 0.0.0.0:3306->3306/tcp, :::3306->3306/tcp, 33060/tcp_ _nginx nginx \\\"/docker-entrypoint.…\\\" nginx 54 seconds ago Up 52 seconds 80/tcp, 0.0.0.0:18080-18081->18080-18081/tcp, :::18080-18081->18080-18081/tcp_ \",\"打开浏览器，访问：http://yourIp:8080\"]},\"27\":{\"c\":[\"Docker\"]},\"28\":{\"h\":\"flask服务注册到nacos\"},\"29\":{\"h\":\"Java调用\",\"t\":[\"1.添加pom依赖\",\"<dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-openfeign</artifactId> </dependency> \",\"2.添加接口\",\" import org.springframework.cloud.openfeign.FeignClient; import org.springframework.http.MediaType; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestPart; import org.springframework.web.multipart.MultipartFile; /** * AI预测远程调用-python-flask服务 * * @author leijiahao * @date 2023-10-19 */ //@FeignClient(value = \\\"ai-predict-service\\\",url = \\\"${feign.client.url.ai}\\\") @FeignClient(value = \\\"${feign.client.url.name}\\\",url = \\\"${feign.client.url.address}\\\") public interface AiPredictFeignClient { /** * 模型列表 * * @return 结果 */ @GetMapping(\\\"/model_list\\\") AjaxResult modelList(); /** * 数据集列表 * * @return 结果 */ @GetMapping(\\\"/result_list\\\") AjaxResult resultList(); @PostMapping(value = \\\"/predict\\\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE) AjaxResult predict(@RequestBody PredictionReq predictionReq); @PostMapping(value = \\\"uploader\\\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE) AjaxResult uploader(@RequestPart(\\\"file\\\") MultipartFile file); @PostMapping(value = \\\"/predict\\\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE) ResponseEntity<byte[]> predict( @RequestPart(\\\"projectId\\\") String projectId, @RequestPart(\\\"modelName\\\") String modelName, @RequestPart(\\\"dataIndex\\\") Integer dataIndex, @RequestPart(\\\"modelPath\\\") String modelPath, @RequestPart(\\\"dataSavePath\\\") String dataSavePath, @RequestPart(\\\"resultPath\\\") String resultPath, @RequestPart(\\\"file\\\") MultipartFile file, @RequestPart(\\\"numFuturePoints\\\") Integer numFuturePoints ); @PostMapping(value = \\\"/predict\\\", consumes = MediaType.MULTIPART_FORM_DATA_VALUE) AjaxResult train( @RequestPart(\\\"projectId\\\") String projectId, @RequestPart(\\\"modelName\\\") String modelName, @RequestPart(\\\"dataIndex\\\") Integer dataIndex, @RequestPart(\\\"modelPath\\\") String modelPath, @RequestPart(\\\"dataSavePath\\\") String dataSavePath, @RequestPart(\\\"resultPath\\\") String resultPath, @RequestPart(\\\"file\\\") MultipartFile file, @RequestPart(\\\"numFuturePoints\\\") Integer numFuturePoints ); } \",\"3.python代码\",\"https://github.com/lei1024/python-nacos-server\"]},\"30\":{\"c\":[\"python\",\"nacos\"]},\"31\":{\"h\":\"免费申请SSL证书\"},\"32\":{\"h\":\"Certbot 简介\",\"t\":[\"Github 地址：https://github.com/certbot/certbot 本质上来说，certbot 就是一个 ACME client，这也是 Let’s Encrypt 官网推荐的签发证书的方式，适用于对自己的 domain 具有 shell 访问能力的情况，使用所谓的 ACME 协议来自动化的签发证书，很大程度上简化了证书签发的步骤\"]},\"33\":{\"h\":\"1.准备\",\"t\":[\"拥有一个可以访问的域名\",\"拥有一台云服务器\"]},\"34\":{\"h\":\"2.使用Docker安装\",\"t\":[\"docker run -it --rm --name certbot -v \\\"/etc/letsencrypt:/etc/letsencrypt\\\" -v \\\"/var/lib/letsencrypt:/var/lib/letsencrypt\\\" -p 80:80 certbot/certbot certonly \"]},\"35\":{\"h\":\"3.运行命令后按照提示操作\"},\"36\":{\"h\":\"4.生成文件\",\"t\":[\"Successfully received certificate. Certificate is saved at: ** Key is saved at: ** This certificate expires on 2024-03-21. \"]},\"37\":{\"h\":\"最后，邮箱验证\"},\"38\":{\"h\":\"5.基于Docker环境下给Nginx进行配置\",\"t\":[\"docker安装Nginx\",\"docker run --restart always --name Nginx -d -p 80:80 nginx \",\"访问界面测试\",\"挂载后重启\",\"docker run --restart always --name Nginx -d -p 80:80 -v /home/nginx/html:/usr/share/nginx/html -v /home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf nginx \",\"添加SSL证书\",\"server { listen 80; listen [::]:80; server_name www.flashdiko.top; rewrite ^(.*) https://$server_name$1 permanent; } server { listen 443 ssl; server_name www.flashdiko.top; ssl_certificate /home/nginx/ssl/fullchain.pem; ssl_certificate_key /home/nginx/ssl/privkey.pem; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / { proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $http_host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; root /usr/share/nginx/html; index index.html index.htm; } error_page 500 502 503 504 /50x.html; location = /50x.html { root /usr/share/nginx/html; } } \",\"重新挂载重启\",\"docker run --name Nginx -p 443:443 -p 80:80 -v /home/nginx/logs:/var/log/nginx -v/home/nginx/html:/usr/share/nginx/html -v /home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -d --restart=always nginx \",\"进入nginx容器\",\"在外部编写好default.conf后copy到容器内，包括生成的pem文件\",\"docker cp default.conf Nginx:/etc/nginx/conf.d/ \",\"重启\",\"docker restart Nginx \",\"重新访问，已经是https了\",\"用这种方式生成的短期证书有效期是 90 天，在过期之后我们还需要对其进行更新（renew）操作，只需要将上面的命令 certonly 改为 renew 即可，该命令会自动更新 /etc/letsencrypt/live/ 目录下有效期少于 30 天的证书.然后使用docker cp命令拷贝到Nginx容器中，最后重启\"]},\"39\":{\"c\":[\"SSL\"]},\"40\":{\"c\":[\"SSL\",\"https\",\"建站\"]},\"41\":{\"h\":\"在Jetbrains全家桶中使用ideavim\"},\"42\":{\"h\":\"1.安装必备的一些插件\",\"t\":[\"AceJump\",\"IdeaVim-EasyMotion、IdeaVim-Quickscope、IdeaVim-Sneak、IdeaVimExtension、Which-Key\"]},\"43\":{\"h\":\"2.ideavim配置文件 .ideavimrc\",\"t\":[\"\\\":actionlist 可以查询所有的命令 let mapleader=',' Plug 'easymotion/vim-easymotion' set file encodings=utf-8,gb2312,gbk,gb18030 set term encoding=utf-8 \\\" Plugins set ignorecase set smartcase set easymotion set sneak set quickscope set encoding=prc inoremap <c-e> <c-o>$ inoremap <c-a> <c-o>^ nmap <Space>jn i<CR><Esc> nmap <Space>jo i<CR><Esc>k$ nmap <Space>sv :vsp<CR> nmap <Space>sg :sp<CR> nmap <Space>sq :q<CR> nmap <Space>sQ :qa<CR> nmap <Space>sa ggVG nmap <Leader><Space> :nohl<CR> nmap <Space><CR> o<Esc> nmap <c-h> <c-w>h nmap <c-j> <c-w>j nmap <c-k> <c-w>k nmap <c-l> <c-w>l set clipboard=unnamed map Y y$ map D d$ \\\"vmap p \\\"_dp \\\"set nu \\\"set rnu set ideajoin set surround set matchit \\\" 突出显示当前行 set cursorline \\\" 在状态栏显示正在输入的命令 set showcmd \\\"set multiple-cursors set commentary set ReplaceWithRegister set exchange set argtextobj set highlightedyank set which-key \\\" -- which key -- set notimeout \\\"let g:WhichKey_ShowVimActions = \\\"true\\\" set timeoutlen = 5000 \\\" 相对当前行行数显示 \\\" set relativenumber set scrolloff=3 set history=100000 set relativenumber set hlsearch set incsearch \\\" 去掉搜索高亮 nnoremap <leader>/ :nohls<CR> \\\" clear the highlighted search result nnoremap <Leader>sc :nohlsearch<CR> \\\"set vim-paragraph-motion set NERDTree nmap <Leader>ed <Action>(ShowErrorDescription) nmap <Leader>me <Action>(ShowPopupMenu) \\\" 选择模式扩大选择范围 vmap v <Action>(EditorSelectWord) \\\" 选择模式缩小选择范围 vmap V <Action>(EditorUnSelectWord) \\\" 多光标选中单词 nmap <Leader>va <Action>(SelectAllOccurrences) vmap <Leader>va <Action>(SelectAllOccurrences) set showmode \\\"set vim-textobj-entire set clipboard+=ideaputset ideajoinset clipboard+=ideaput nmap H :action PreviousTab<CR> nmap L :action NextTab<CR> \\\"nmap <C-m> :action SelectNextOccurrence<cr> \\\"xmap <C-m> :action SelectNextOccurrence<cr> nmap <C-s> :action FindNext<cr> xmap <C-s> :action FindNext<cr> \\\"FindPrevious nmap <C-o> :action UnselectPreviousOccurrence<cr> xmap <C-o> :action UnselectPreviousOccurrence<cr> nmap <S-C-m> :action SelectAllOccurrences<cr> xmap <S-C-m> :action SelectAllOccurrences<cr> \\\" Do incremental searching. nnoremap [[ :action MethodUp<CR> nnoremap ]] :action MethodDown<CR> \\\" 清除当前行,撤销重写 “ 输入模式下，dd映射两个命令，返回普通模式，光标移动到最开始，C命令 \\\"inoremap dd <ESC>:normal ddO<CR>i \\\"inoremap dw <esc>diw<CR>i \\\"输入模式下左右移动字符 inoremap <C-h> <Left> inoremap <C-l> <Right> \\\"Move code up and down inoremap <c-j> <Esc>:action MoveStatementDown<CR>i inoremap <c-k> <Esc>:action MoveStatementUp<CR>i inoremap <c-q> <Esc>:action QuickJavaDocL<CR>i vnoremap J :action MoveStatementDown<CR> vnoremap K :action MoveStatementUp<CR> nnoremap <C-w> viw inoremap <c-l> <Esc>:action EditorCompleteStatement<CR> nnoremap <Space>t :action Refactorings.QuickListPopupAction<CR> vnoremap <Space>t :action Refactorings.QuickListPopupAction<CR> nnoremap <leader>t :action ActivateTerminalToolWindow<CR> \\\"nnoremap <leader>t :action TerminalOpenInTerminal<CR> nnoremap <Space>q :action HideActiveWindow<CR> \\\"nnoremap <leader>e :e ~/.ideavimrc<CR> \\\"nnoremap <leader>kr :action IdeaVim.ReloadVimRc.reload<CR> nnoremap <leader>n :action ContextRun<CR> nnoremap <leader>b :action ShowNavBar<CR> nnoremap <leader>p :action Back<CR> nnoremap <leader>c :action ChooseRunConfiguration<CR> nnoremap <leader>d :action ChooseDebugConfiguration<CR> nnoremap <leader>s :action FileStructurePopup<CR> nnoremap <Space>kr :action RunAnything<CR> nnoremap <Space>kn :action ContextRun<CR> nnoremap <Space>kl :action Git.Pull<CR> nnoremap <Space>kc :action RunClass<CR> nnoremap <Space>f :action GotoFile<CR> nnoremap <leader>a :action GotoAction<CR> nnoremap <leader>h :action HideAllWindows<CR> nnoremap <Space>kf :action RerunFailedTests<CR> nnoremap <Space>w :action GotoNextError<CR> nnoremap <c-f> :action GotoNextError<CR> nnoremap <Space>b :action GotoPreviousError<CR> nnoremap <c-b> :action GotoPreviousError<CR> nnoremap <Space>u :action FindUsages<CR> nnoremap <c-z> :action ToggleDistractionFreeMode<CR> \\\" 搜索文件相关 nnoremap <leader>zc :action GotoClass<CR> nnoremap <leader>za :action GotoAction<CR> nnoremap <leader>zh :action RecentChangedFiles<CR> nnoremap <leader>zf :action GotoFile<CR> nnoremap <leader>zd :action ActivateDebugToolWindow<CR> nnoremap <leader>zr :action ActivateRunToolWindow<CR> nnoremap <leader>zs :action ShelvedChangesToolbar<CR> nnoremap <leader>zt :action ActivateTODOToolWindow<CR> nnoremap <leader>zv :action ActivateVersionControlToolWindow<CR> nnoremap <leader>zb :action ShowBookmarks<CR> nnoremap <leader>zp :action ActivateProjectToolWindow<CR> noremap <leader>zm <ESC>:action GotoSymbol<CR> \\\" 关闭当前标签页 nnoremap <leader>qq :q<CR> nnoremap <leader>qa :action CloseAllEditors<CR> nnoremap <leader>qu :action CloseAllUnmodifiedEditors<CR> nnoremap <leader>qo :action CloseAllEditorsButActive<CR> \\\" 代码跳转相关 \\\" 不用leader的话g没有任何意义，所以必须要加leader nnoremap <leader>gd :action GotoDeclaration<CR> nnoremap <leader>gi :action GotoImplementation<CR> nnoremap <leader>gf :action FileStructurePopup<CR> nnoremap <leader>gc :action EditorContextInfo<CR> nnoremap <leader>gh :action TypeHierarchy<CR> nnoremap <leader>gl :action Forward<CR> nnoremap <leader>ge :action RecentFiles<CR> nnoremap <leader>go :action RecentProjectListGroup<CR> nnoremap <leader>gs :action GotoSuperMethod<CR> nnoremap <leader>gt :action GotoTest<CR> noremap <leader>gj <ESC>:action SliceBackward<CR> noremap <leader>gk <ESC>:action SliceForward<CR> noremap <leader>gg <ESC>:action Generate<CR> noremap <leader>gq <ESC>:action CloseEditor<CR> nnoremap <leader>gn g* nnoremap <leader>gp g# \\\" 窗口管理相关 nnoremap <leader>wf :action HideAllWindows<CR> nnoremap <leader>wF :action ToggleFullScreen<CR> nnoremap <leader>wm :action VimWindowOnly<CR> nnoremap <leader>w- :action VimWindowSplitHorizontal<CR> nnoremap <leader>w/ :action VimWindowSplitVertical<CR> nnoremap <leader>wd :q<CR> nnoremap <leader>wq :q<CR> nnoremap <leader>wj :action VimWindowDown<CR> nnoremap <leader>wk :action VimWindowUp<CR> nnoremap <leader>wl :action VimWindowRight<CR> nnoremap <leader>wh :action VimWindowLeft<CR> nnoremap <leader>wn :action VimWindowNext<CR> nnoremap <leader>wp :action VimWindowPrev<CR> \\\" 运行相关 nnoremap <leader>eb :action ChooseRunConfiguration<CR> nnoremap <leader>ec :action CompileDirty<CR> nnoremap <leader>ed :action Debug<CR> nnoremap <leader>eD :action DebugClass<CR> nnoremap <leader>er :action Run<CR> nnoremap <leader>eR :action RunClass<CR> \\\" AceJump集成 nnoremap <leader>sj :action AceAction<CR> nnoremap <leader>sJ :action AceTargetAction<CR> nnoremap <leader>sg :action AceLineAction<CR> \\\" code代码修改相关 nnoremap <leader>js :action SurroundWith<CR> nnoremap <leader>jp :action SmartSplit<CR> nnoremap <leader>jt :action SurroundWithLiveTemplate<CR> nnoremap <leader>j= :action FormatElement<CR> nnoremap <leader>j+ :action ReformatCode<CR> \\\" 视野左右移动 nnoremap zh 50zh nnoremap zl 50zl \\\" 剪贴板 \\\" 删除不剪切 nnoremp d \\\"_d nnoremap dd \\\"_dd nnoremap D \\\"_D \\\" nnoremap <leader>d \\\"\\\"d \\\" nnoremap <leader>dd \\\"\\\"dd \\\" nnoremap <leader>D \\\"\\\"D nnoremap c \\\"_c nnoremap cc \\\"_cc nnoremap C \\\"_C \\\" nnoremap <leader>c \\\"\\\"c \\\" nnoremap <leader>cc \\\"\\\"cc \\\" nnoremap <leader>C \\\"\\\"C vnoremap d \\\"_d vnoremap D \\\"_D \\\" vnoremap <leader>d \\\"\\\"d \\\" vnoremap <leader>dd \\\"\\\"dd \\\" vnoremap <leader>D \\\"\\\"D vnoremap c \\\"_c vnoremap cc \\\"_cc vnoremap C \\\"_C \\\" vnoremap <leader>c \\\"\\\"c \\\" vnoremap <leader>cc \\\"\\\"cc \\\" vnoremap <leader>C \\\"\\\"C vnoremap p \\\"_dp vnoremap P \\\"_dP \\\" 删除不剪切 \\\" 组合命令删除不剪切 nnoremap diw \\\"_diw nnoremap di\\\" \\\"_di\\\" nnoremap di' \\\"_di' nnoremap di( \\\"_di( nnoremap di[ \\\"_di[ nnoremap di{ \\\"_di{ nnoremap di< \\\"_di< nnoremap daw \\\"_daw nnoremap da\\\" \\\"_da\\\" nnoremap da' \\\"_da' nnoremap da( \\\"_da( nnoremap da[ \\\"_da[ nnoremap da{ \\\"_da{ nnoremap da< \\\"_da< nnoremap ciw \\\"_ciw nnoremap ci\\\" \\\"_ci\\\" nnoremap ci' \\\"_ci' nnoremap ci( \\\"_ci( nnoremap ci[ \\\"_ci[ nnoremap ci{ \\\"_ci{ nnoremap ci< \\\"_ci< nnoremap caw \\\"_caw nnoremap ca\\\" \\\"_ca\\\" nnoremap ca' \\\"_ca' nnoremap ca( \\\"_ca( nnoremap ca[ \\\"_ca[ nnoremap ca{ \\\"_ca{ nnoremap ca< \\\"_ca< \\\" 快速跳转行首与行尾 nnoremap <C-l> $ nnoremap <C-h> ^ vnoremap <C-l> $ vnoremap <C-h> ^ \\\" 快速跳转行首与行尾 \\\" 移动多行 noremap <C-j> 5j noremap <C-k> 5k \\\" 保存行(不含换行符) nnoremap yir ^v$y nnoremap yar ^v$y \\\" 保存行(不含换行符) \\\" 删除行(不含换行符) nnoremap dir ^v$\\\"_d nnoremap dar ^v$\\\"_d \\\" 删除行(不含换行符) \\\" 删除行(不含换行符) nnoremap cir ^v\\\"_C nnoremap car ^v\\\"_C \\\" 删除行(不含换行符) \\\" 删除&复制行(不含换行符) nnoremap yxr ^v$x \\\" 删除&复制行(不含换行符) \\\" 选中行(不含换行符) nnoremap vir ^v$ nnoremap var ^v$ \\\" 选中行(不含换行符) \\\" 框选指定符号结束的多行 nnoremap vs( ^V/(<CR>% nnoremap vs{ ^V/{<CR>% nnoremap vs[ ^V/[<CR>% nnoremap vs) ^V% nnoremap vs} ^V% nnoremap vs] ^V% nnoremap vs; ^V/;<CR> inoremap jk <Esc> inoremap kj <Esc> \\\"inoremap <Space><Space> <Esc> \\\"nnoremap <Space>u :action ShowUsages<CR> \\\"gD可以替代这个 \\\"Refactor nnoremap <Space>n :action Inline<CR> vnoremap <Space>n :action Inline<CR> \\\"Extract Method nnoremap <Space>m :action ExtractMethod<CR> nnoremap <c-m> :action ExtractMethod<CR> vnoremap <Space>m :action ExtractMethod<CR> vnoremap <c-m> :action ExtractMethod<CR> nnoremap <Space>v :action IntroduceVariable<CR> vnoremap <Space>v :action IntroduceVariable<CR> nnoremap <Space>i :action ShowIntentionActions<CR> nnoremap <c-i> :action ShowIntentionActions<CR> nnoremap <Space>e :action ReformatCode<CR> nnoremap <Space>l :action ReformatCode<CR> nnoremap <Space>o :action Move<CR> noremap \\\\r <ESC>:source ~/.ideavimrc<CR> \\\"Rename nnoremap <Space>r :action RenameElement<CR> nnoremap <c-r> :action RenameElement<CR> \\\" g nmap U :action $Redo<CR> nnoremap <Space>p :action IntroduceParameter<CR> nnoremap <Space>c :action ExtractClass<CR> nnoremap <leader>v :action Vcs.QuickListPopupAction<CR> nnoremap <Space>kh :action TypeHierarchy<CR> \\\" l \\\"noremap gl <ESC>:action <CR> \\\"打断点 nnoremap <Leader>bb :action ToggleLineBreakpoint<CR> \\\"查看所有断点 nnoremap <Leader>br :action ViewBreakpoints<CR> \\\" z \\\"noremap gz <ESC>:action <CR> \\\" close all but this \\\" compile nnoremap <leader>r :action Maven.Reimport<CR> \\\" v \\\"noremap gv <ESC>:action <CR> \\\" b nnoremap <leader>f :action FindInPath<CR> \"]},\"44\":{\"c\":[\"Java\",\"开发工具\",\"Vim\",\"Jetbrains IDEA\"]},\"45\":{\"h\":\"在win10上使用dockerdesktop部署xiaoyaalist\",\"t\":[\"小雅alist的官网：https://xiaoyaliu.notion.site/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f\",\"Alist官网：https://alist.nn.ci/zh/\",\"因为本电脑使用curl命令拉取脚本无效，所以使用docker逐步构建\"]},\"46\":{\"h\":\"1.拉取xiaoya镜像\",\"t\":[\"docker pull xiaoyaliu/alist \"]},\"47\":{\"h\":\"2.创建一个存放配置文件的本地文件夹如D://xiaoya_alist/\",\"t\":[\"创建mytoken.txt必要的，获取方式：https://aliyuntoken.vercel.app/ 扫码后将内容填入txt文件\",\"创建myopentoken.txt必要的，获取方式：https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html 拿到token后将内容填入文件\",\"创建temp_transfer_folder_id.txt必要的，在阿里云盘中的资源库中创建一个文件夹，然后浏览器打开目录，浏览器的url https://www.aliyundrive.com/drive/file/resource/640xxxxxxxxxxxxxxxxxxxca8a 最后一串就是，记得这个目录不要删，里面的内容可以定期删除。将内容填入文件\",\"show_my_ali.txt，只要有这个文件夹就能查看到自己的云盘内容\",\"docker_address.txt ，配置tvbox使用，里面写服务地址，可以写本电脑ip加容器运行的端口，如：http://192.168.3.1:5678\"]},\"48\":{\"h\":\"3.启动容器\",\"t\":[\"docker run -itd --name xiaoya -p 5678:80 -v D://xiaoya_alist:/data --restart=always xiaoyaliu/alist \"]},\"49\":{\"h\":\"4.查看启动日志，如有报错，查看官网解决\",\"t\":[\"docker logs -f xiaoya \"]},\"50\":{\"h\":\"5.访问，本机IP加端口号5678\"},\"51\":{\"c\":[\"Win10\",\"Docker\",\"NAS\",\"Alist\",\"影视工具\"]},\"52\":{\"h\":\"数据脱敏-通过mybatis拦截器\"},\"53\":{\"h\":\"1. 添加脱敏拦截器\",\"t\":[\"package cn.cmcc.common.datasource.config; import cn.cmcc.common.utils.bean.ObjectUtils; import cn.hutool.crypto.digest.DigestUtil; import org.apache.ibatis.cache.CacheKey; import org.apache.ibatis.executor.Executor; import org.apache.ibatis.mapping.BoundSql; import org.apache.ibatis.mapping.MappedStatement; import org.apache.ibatis.plugin.Interceptor; import org.apache.ibatis.plugin.Intercepts; import org.apache.ibatis.plugin.Invocation; import org.apache.ibatis.plugin.Signature; import org.apache.ibatis.session.ResultHandler; import org.apache.ibatis.session.RowBounds; import javax.annotation.PostConstruct; import java.util.*; /** * @author leijiahao * @date 2023-11-07 */ @Intercepts({@Signature(type = Executor.class, method = \\\"query\\\", args = {MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class, CacheKey.class, BoundSql.class}),}) public class DataMasInterceptor implements Interceptor { private List<String> encryptionList; private Set<String> targetMappers; // 存储目标 Mapper 的集合 public DataMasInterceptor(Set<String> targetMappers) { this.targetMappers = targetMappers; } public static String maskChineseString(String input) { if (input == null || input.length() <= 2 || \\\"null\\\".equals(input)) { return input; } // 查找倒数两个汉字的索引 int lastIndex = -1; int count = 0; for (int i = input.length() - 1; i >= 0; i--) { char c = input.charAt(i); if (isChineseCharacter(c)) { count++; if (count == 2) { lastIndex = i; break; } } } // 使用 * 号替换前面的部分 StringBuilder sb = new StringBuilder(); for (int i = 0; i < lastIndex; i++) { sb.append(\\\"*\\\"); } // 保留倒数两个汉字及后面的部分 sb.append(input.substring(lastIndex)); return sb.toString(); } public static boolean isChineseCharacter(char c) { Character.UnicodeBlock block = Character.UnicodeBlock.of(c); return block == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS || block == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS || block == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A; } public static double maskLonLat(double value) { if (ObjectUtils.isEmpty(value)) { return value; } Random random = new Random(); double offset = random.nextDouble() * 0.0001 + 0.0001; return value + offset; } @PostConstruct public void init() { encryptionList = new ArrayList<>(); // TODO: 2023-11-08 设置加密字段 // encryptionList.add(\\\"cgi\\\"); // encryptionList.add(\\\"enb_id\\\"); // encryptionList.add(\\\"enb_name\\\"); // encryptionList.add(\\\"enodeb_name\\\"); // encryptionList.add(\\\"cell_name\\\"); // encryptionList.add(\\\"cell_id\\\"); // encryptionList.add(\\\"project_name\\\"); // encryptionList.add(\\\"project_id\\\"); // encryptionList.add(\\\"user_name\\\"); } @Override public Object intercept(Invocation invocation) throws Throwable { Object arg1 = invocation.getArgs()[0]; // 拦截通用查询,加密字段 if ((arg1 instanceof MappedStatement) // && targetMappers.contains(((MappedStatement) arg1).getId()) && !encryptionList.isEmpty() ) { Object result = invocation.proceed(); if (result instanceof ArrayList) { ArrayList resultList = (ArrayList) result; for (Object o : resultList) { if (o instanceof Map) { Map<String, Object> resultMap = (Map<String, Object>) o; for (String key : encryptionList) { if (resultMap.containsKey(key)) { if (key.endsWith(\\\"name\\\")) { resultMap.put(key, maskChineseString(String.valueOf(resultMap.get(key)))); } else if (key.endsWith(\\\"lon\\\") || key.endsWith(\\\"lat\\\")) { resultMap.put(key, maskLonLat(Double.parseDouble(String.valueOf(resultMap.get(key))))); } else { //MD5加密 resultMap.put(key, DigestUtil.md5Hex(String.valueOf(resultMap.get(key)) .getBytes())); } } } } } } return result; } else { return invocation.proceed(); } } } \"]},\"54\":{\"h\":\"2.注册拦截器Bean到MybatisPlus的配置类中\",\"t\":[\"package cn.cmcc.common.datasource.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; import java.util.HashSet; import java.util.Set; /** * Mybatis支持*匹配扫描包 * * @author xhxk */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.POSTGRE_SQL)); return interceptor; } @Bean public DataMasInterceptor dataMasInterceptor() { Set<String> targetMappers = new HashSet<>(); // 添加目标 Mapper 的 ID targetMappers.add(\\\"mapper_id\\\"); // 可以添加多个目标 Mapper return new DataMasInterceptor(targetMappers); } } \"]},\"55\":{\"c\":[\"Java\",\"Mybatis\",\"Spring\",\"安全\"]},\"56\":{\"h\":\"Posts\"}},\"dirtCount\":0,\"index\":[[\"安全\",{\"2\":{\"55\":1}}],[\"安装必备的一些插件\",{\"0\":{\"42\":1}}],[\"安装jdk\",{\"1\":{\"17\":1}}],[\"安装并配置\",{\"1\":{\"16\":2}}],[\"安装完毕\",{\"1\":{\"2\":1}}],[\"安装\",{\"1\":{\"2\":2}}],[\"安装包\",{\"1\":{\"2\":1}}],[\"安装方式也不同\",{\"1\":{\"1\":1}}],[\"匹配扫描包\",{\"1\":{\"54\":1}}],[\"注册拦截器bean到mybatisplus的配置类中\",{\"0\":{\"54\":1}}],[\"注意通过\",{\"1\":{\"13\":1}}],[\"注意\",{\"1\":{\"2\":1,\"13\":2,\"14\":1,\"22\":1}}],[\"加密字段\",{\"1\":{\"53\":1}}],[\"加载本地压缩文件到镜像\",{\"1\":{\"6\":1}}],[\"拦截通用查询\",{\"1\":{\"53\":1}}],[\"保留倒数两个汉字及后面的部分\",{\"1\":{\"53\":1}}],[\"保存行\",{\"1\":{\"43\":2}}],[\"保存镜像到本地压缩文件\",{\"1\":{\"6\":1}}],[\"号替换前面的部分\",{\"1\":{\"53\":1}}],[\"查找倒数两个汉字的索引\",{\"1\":{\"53\":1}}],[\"查看官网解决\",{\"0\":{\"49\":1}}],[\"查看启动日志\",{\"0\":{\"49\":1}}],[\"查看运行的进程\",{\"1\":{\"26\":1}}],[\"查看运行中容器\",{\"1\":{\"7\":1}}],[\"查看指定容器的日志\",{\"1\":{\"26\":1}}],[\"查看网络详细信息\",{\"1\":{\"21\":1}}],[\"查看address表数据\",{\"1\":{\"14\":1}}],[\"查看表\",{\"1\":{\"14\":1}}],[\"查看数据库\",{\"1\":{\"14\":1}}],[\"查看数据\",{\"1\":{\"14\":1}}],[\"查看数据卷详情\",{\"1\":{\"13\":1}}],[\"查看编码表\",{\"1\":{\"14\":1}}],[\"查看mysql容器内数据\",{\"1\":{\"14\":1}}],[\"查看mysql容器详细信息\",{\"1\":{\"13\":1}}],[\"查看data目录\",{\"1\":{\"14\":1}}],[\"查看root目录\",{\"1\":{\"14\":1}}],[\"查看效果\",{\"1\":{\"13\":1}}],[\"查看\",{\"1\":{\"13\":2}}],[\"查看某个数据卷的详情\",{\"1\":{\"13\":1}}],[\"查看所有断点\",{\"1\":{\"43\":1}}],[\"查看所有网络\",{\"1\":{\"21\":1}}],[\"查看所有数据卷\",{\"1\":{\"13\":1}}],[\"查看所有容器\",{\"1\":{\"7\":1}}],[\"查看镜像列表\",{\"1\":{\"19\":2}}],[\"查看镜像\",{\"1\":{\"7\":1,\"26\":1}}],[\"查看容器内目录\",{\"1\":{\"7\":1}}],[\"查看容器详细信息\",{\"1\":{\"6\":1,\"7\":1}}],[\"查看容器运行日志\",{\"1\":{\"6\":1}}],[\"查看容器\",{\"1\":{\"6\":1,\"19\":1,\"26\":1}}],[\"查看本地镜像\",{\"1\":{\"6\":1}}],[\"存储目标\",{\"1\":{\"53\":1}}],[\"存储镜像的网站\",{\"1\":{\"2\":1}}],[\"影视工具\",{\"2\":{\"51\":1}}],[\"里面写服务地址\",{\"1\":{\"47\":1}}],[\"里面的内容可以定期删除\",{\"1\":{\"47\":1}}],[\"记得这个目录不要删\",{\"1\":{\"47\":1}}],[\"浏览器的url\",{\"1\":{\"47\":1}}],[\"拿到token后将内容填入文件\",{\"1\":{\"47\":1}}],[\"扫码后将内容填入txt文件\",{\"1\":{\"47\":1}}],[\"获取方式\",{\"1\":{\"47\":2}}],[\"小雅alist的官网\",{\"1\":{\"45\":1}}],[\"打断点\",{\"1\":{\"43\":1}}],[\"打开浏览器\",{\"1\":{\"26\":1}}],[\"打开页面\",{\"1\":{\"13\":1}}],[\"框选指定符号结束的多行\",{\"1\":{\"43\":1}}],[\"选中行\",{\"1\":{\"43\":2}}],[\"选择模式缩小选择范围\",{\"1\":{\"43\":1}}],[\"选择模式扩大选择范围\",{\"1\":{\"43\":1}}],[\"复制行\",{\"1\":{\"43\":2}}],[\"移动多行\",{\"1\":{\"43\":1}}],[\"组合命令删除不剪切\",{\"1\":{\"43\":1}}],[\"剪贴板\",{\"1\":{\"43\":1}}],[\"视野左右移动\",{\"1\":{\"43\":1}}],[\"窗口管理相关\",{\"1\":{\"43\":1}}],[\"关闭当前标签页\",{\"1\":{\"43\":1}}],[\"关注其中\",{\"1\":{\"13\":1}}],[\"搜索文件相关\",{\"1\":{\"43\":1}}],[\"搜索并下载\",{\"1\":{\"2\":1}}],[\"z\",{\"1\":{\"43\":1}}],[\"zl\",{\"1\":{\"43\":1}}],[\"zh\",{\"1\":{\"43\":1,\"45\":1,\"47\":1}}],[\"z>\",{\"1\":{\"43\":1}}],[\"zoneinfo\",{\"1\":{\"17\":2,\"26\":1}}],[\"光标移动到最开始\",{\"1\":{\"43\":1}}],[\"返回普通模式\",{\"1\":{\"43\":1}}],[\"输入模式下左右移动字符\",{\"1\":{\"43\":1}}],[\"输入模式下\",{\"1\":{\"43\":1}}],[\"撤销重写\",{\"1\":{\"43\":1}}],[\"多光标选中单词\",{\"1\":{\"43\":1}}],[\"相对当前行行数显示\",{\"1\":{\"43\":1}}],[\"相信编写\",{\"1\":{\"25\":1}}],[\"突出显示当前行\",{\"1\":{\"43\":1}}],[\"kj\",{\"1\":{\"43\":1}}],[\"k\",{\"1\":{\"43\":1}}],[\"k>\",{\"1\":{\"43\":3}}],[\"key\",{\"1\":{\"3\":1,\"17\":1,\"36\":1,\"38\":1,\"42\":1,\"43\":2,\"53\":11}}],[\"key=value\",{\"1\":{\"3\":1}}],[\"query\",{\"1\":{\"53\":1}}],[\"quicklistpopupaction<cr>\",{\"1\":{\"43\":3}}],[\"quickjavadocl<cr>i\",{\"1\":{\"43\":1}}],[\"quickscope\",{\"1\":{\"42\":1,\"43\":1}}],[\"q>\",{\"1\":{\"43\":1}}],[\"q<cr>\",{\"1\":{\"43\":4}}],[\"qa<cr>\",{\"1\":{\"43\":1}}],[\"qa\",{\"1\":{\"26\":1}}],[\"建站\",{\"2\":{\"40\":1}}],[\"建议采用\",{\"1\":{\"2\":1}}],[\"该命令会自动更新\",{\"1\":{\"38\":1}}],[\"即可\",{\"1\":{\"38\":1}}],[\"操作\",{\"1\":{\"38\":1}}],[\"天的证书\",{\"1\":{\"38\":1}}],[\"天\",{\"1\":{\"38\":1}}],[\"已经是https了\",{\"1\":{\"38\":1}}],[\"^v\",{\"1\":{\"43\":9}}],[\"^v$x\",{\"1\":{\"43\":1}}],[\"^v$\",{\"1\":{\"43\":4}}],[\"^v$y\",{\"1\":{\"43\":2}}],[\"^\",{\"1\":{\"38\":1,\"43\":2}}],[\"邮箱验证\",{\"0\":{\"37\":1}}],[\"生成文件\",{\"0\":{\"36\":1}}],[\"拥有一台云服务器\",{\"1\":{\"33\":1}}],[\"拥有一个可以访问的域名\",{\"1\":{\"33\":1}}],[\"很大程度上简化了证书签发的步骤\",{\"1\":{\"32\":1}}],[\"协议来自动化的签发证书\",{\"1\":{\"32\":1}}],[\"具有\",{\"1\":{\"32\":1}}],[\"具体用法可以参考\",{\"1\":{\"4\":1}}],[\"适用于对自己的\",{\"1\":{\"32\":1}}],[\"官网推荐的签发证书的方式\",{\"1\":{\"32\":1}}],[\"官方提供的\",{\"1\":{\"16\":1}}],[\"官方提供了一些基础镜像\",{\"1\":{\"2\":1}}],[\"官方提供了一个专门管理\",{\"1\":{\"2\":1}}],[\"官方就制作了这样的只包含\",{\"1\":{\"16\":1}}],[\"官方文档\",{\"1\":{\"4\":1,\"20\":1}}],[\"官方仓库在国外\",{\"1\":{\"2\":1}}],[\"简介\",{\"0\":{\"32\":1}}],[\"免费申请ssl证书\",{\"0\":{\"31\":1}}],[\"数据脱敏\",{\"0\":{\"52\":1}}],[\"数据集列表\",{\"1\":{\"29\":1}}],[\"数据卷配置\",{\"1\":{\"25\":1}}],[\"数据卷的目录结构较深\",{\"1\":{\"14\":1}}],[\"数据卷的相关命令有\",{\"1\":{\"13\":1}}],[\"数据卷名称\",{\"1\":{\"13\":1}}],[\"数据卷会自动创建\",{\"1\":{\"13\":1}}],[\"数据卷命令\",{\"0\":{\"13\":1}}],[\"数据卷\",{\"0\":{\"11\":1},\"1\":{\"12\":1}}],[\"模型列表\",{\"1\":{\"29\":1}}],[\"模板文件\",{\"1\":{\"24\":1}}],[\"==\",{\"1\":{\"53\":5}}],[\"=\",{\"1\":{\"29\":12,\"38\":1,\"43\":2,\"53\":19,\"54\":3}}],[\"=>\",{\"1\":{\"26\":20}}],[\"添加目标\",{\"1\":{\"54\":1}}],[\"添加脱敏拦截器\",{\"0\":{\"53\":1}}],[\"添加ssl证书\",{\"1\":{\"38\":1}}],[\"添加接口\",{\"1\":{\"29\":1}}],[\"添加pom依赖\",{\"1\":{\"29\":1}}],[\"90\",{\"1\":{\"38\":1}}],[\"9s\",{\"1\":{\"26\":1}}],[\"98b\",{\"1\":{\"26\":1}}],[\"✔\",{\"1\":{\"26\":4}}],[\"清空mysql数据\",{\"1\":{\"26\":1}}],[\"清除当前行\",{\"1\":{\"43\":1}}],[\"清除未使用的网络\",{\"1\":{\"21\":1}}],[\"清除数据卷\",{\"1\":{\"13\":1}}],[\"列出所有启动的容器\",{\"1\":{\"26\":1}}],[\"名称\",{\"1\":{\"26\":1}}],[\"类型\",{\"1\":{\"26\":1}}],[\"常见的命令\",{\"1\":{\"26\":1}}],[\"常见命令\",{\"0\":{\"5\":1,\"21\":1}}],[\"编写好\",{\"1\":{\"26\":1}}],[\"编译和配置环境\",{\"1\":{\"2\":1}}],[\"黑马商城部署文件\",{\"1\":{\"25\":1}}],[\"明白了其中的对应关系\",{\"1\":{\"25\":1}}],[\"举例来说\",{\"1\":{\"25\":1}}],[\"举个例子\",{\"1\":{\"16\":1}}],[\"来定义一组相关联的应用容器\",{\"1\":{\"24\":1}}],[\"来安装一个\",{\"1\":{\"2\":1}}],[\"yxr\",{\"1\":{\"43\":1}}],[\"yar\",{\"1\":{\"43\":1}}],[\"yaml\",{\"1\":{\"24\":1}}],[\"yir\",{\"1\":{\"43\":1}}],[\"y$\",{\"1\":{\"43\":1}}],[\"y\",{\"1\":{\"43\":1}}],[\"yourip\",{\"1\":{\"26\":1}}],[\"yml\",{\"1\":{\"24\":1,\"25\":2,\"26\":1}}],[\"yum\",{\"1\":{\"17\":1}}],[\"个\",{\"1\":{\"24\":1}}],[\"个容器\",{\"1\":{\"24\":1}}],[\"尝试利用别名访问db\",{\"1\":{\"22\":1}}],[\"另外每一个容器都有一个别名是容器名\",{\"1\":{\"22\":1}}],[\"让dd和mysql都加入该网络\",{\"1\":{\"22\":1}}],[\"除了hmall以外\",{\"1\":{\"22\":1}}],[\"自定义网络\",{\"0\":{\"22\":1}}],[\"自定义镜像本质就是依次准备好程序运行的基础环境\",{\"1\":{\"16\":1}}],[\"使用\",{\"1\":{\"53\":1}}],[\"使用docker安装\",{\"0\":{\"34\":1}}],[\"使用所谓的\",{\"1\":{\"32\":1}}],[\"使用的一些基础知识\",{\"1\":{\"4\":1}}],[\"使指定容器连接离开某网络\",{\"1\":{\"21\":1}}],[\"使指定容器连接加入某网络\",{\"1\":{\"21\":1}}],[\"连接会失败\",{\"1\":{\"20\":1}}],[\"没有问题\",{\"1\":{\"20\":1}}],[\"得到ip地址如下\",{\"1\":{\"20\":1}}],[\"寻找networks\",{\"1\":{\"20\":1}}],[\"寻找镜像\",{\"1\":{\"6\":1}}],[\"用这种方式生成的短期证书有效期是\",{\"1\":{\"38\":1}}],[\"用\",{\"1\":{\"25\":1}}],[\"用容器名访问\",{\"1\":{\"22\":1}}],[\"用db别名访问\",{\"1\":{\"22\":1}}],[\"用基本命令\",{\"1\":{\"20\":1}}],[\"用一幅图标示如下\",{\"1\":{\"2\":1}}],[\"重启\",{\"1\":{\"38\":1}}],[\"重启容器\",{\"1\":{\"26\":1}}],[\"重新访问\",{\"1\":{\"38\":1}}],[\"重新挂载重启\",{\"1\":{\"38\":1}}],[\"重新启动容器\",{\"1\":{\"6\":1}}],[\"重点关注其中的网络\",{\"1\":{\"20\":1}}],[\"现在无需记住\",{\"1\":{\"22\":1}}],[\"现在\",{\"1\":{\"20\":1}}],[\"等\",{\"1\":{\"20\":1}}],[\"网络\",{\"0\":{\"20\":1},\"1\":{\"25\":1,\"26\":1}}],[\"网站或者软件的官方网站中都能找到\",{\"1\":{\"3\":1}}],[\"网站是官方仓库\",{\"1\":{\"2\":1}}],[\"<=\",{\"1\":{\"53\":1}}],[\"<right>\",{\"1\":{\"43\":1}}],[\"<esc>diw<cr>i\",{\"1\":{\"43\":1}}],[\"<esc>\",{\"1\":{\"43\":17}}],[\"<s\",{\"1\":{\"43\":2}}],[\"<space>c\",{\"1\":{\"43\":1}}],[\"<space>p\",{\"1\":{\"43\":1}}],[\"<space>r\",{\"1\":{\"43\":1}}],[\"<space>o\",{\"1\":{\"43\":1}}],[\"<space>l\",{\"1\":{\"43\":1}}],[\"<space>e\",{\"1\":{\"43\":1}}],[\"<space>i\",{\"1\":{\"43\":1}}],[\"<space>v\",{\"1\":{\"43\":2}}],[\"<space>m\",{\"1\":{\"43\":2}}],[\"<space>n\",{\"1\":{\"43\":2}}],[\"<space><space>\",{\"1\":{\"43\":1}}],[\"<space><cr>\",{\"1\":{\"43\":1}}],[\"<space>u\",{\"1\":{\"43\":2}}],[\"<space>b\",{\"1\":{\"43\":1}}],[\"<space>w\",{\"1\":{\"43\":1}}],[\"<space>f\",{\"1\":{\"43\":1}}],[\"<space>kh\",{\"1\":{\"43\":1}}],[\"<space>kf\",{\"1\":{\"43\":1}}],[\"<space>kc\",{\"1\":{\"43\":1}}],[\"<space>kl\",{\"1\":{\"43\":1}}],[\"<space>kn\",{\"1\":{\"43\":1}}],[\"<space>kr\",{\"1\":{\"43\":1}}],[\"<space>q\",{\"1\":{\"43\":1}}],[\"<space>t\",{\"1\":{\"43\":2}}],[\"<space>sa\",{\"1\":{\"43\":1}}],[\"<space>sq\",{\"1\":{\"43\":2}}],[\"<space>sg\",{\"1\":{\"43\":1}}],[\"<space>sv\",{\"1\":{\"43\":1}}],[\"<space>jo\",{\"1\":{\"43\":1}}],[\"<space>jn\",{\"1\":{\"43\":1}}],[\"<action>\",{\"1\":{\"43\":6}}],[\"<artifactid>spring\",{\"1\":{\"29\":1}}],[\"<left>\",{\"1\":{\"43\":1}}],[\"<leader>f\",{\"1\":{\"43\":1}}],[\"<leader>r\",{\"1\":{\"43\":1}}],[\"<leader>v\",{\"1\":{\"43\":1}}],[\"<leader>va\",{\"1\":{\"43\":2}}],[\"<leader>j+\",{\"1\":{\"43\":1}}],[\"<leader>j=\",{\"1\":{\"43\":1}}],[\"<leader>jt\",{\"1\":{\"43\":1}}],[\"<leader>jp\",{\"1\":{\"43\":1}}],[\"<leader>js\",{\"1\":{\"43\":1}}],[\"<leader>wp\",{\"1\":{\"43\":1}}],[\"<leader>wn\",{\"1\":{\"43\":1}}],[\"<leader>wh\",{\"1\":{\"43\":1}}],[\"<leader>wl\",{\"1\":{\"43\":1}}],[\"<leader>wk\",{\"1\":{\"43\":1}}],[\"<leader>wj\",{\"1\":{\"43\":1}}],[\"<leader>wq\",{\"1\":{\"43\":1}}],[\"<leader>wd\",{\"1\":{\"43\":1}}],[\"<leader>w\",{\"1\":{\"43\":2}}],[\"<leader>wm\",{\"1\":{\"43\":1}}],[\"<leader>wf\",{\"1\":{\"43\":2}}],[\"<leader>gp\",{\"1\":{\"43\":1}}],[\"<leader>gn\",{\"1\":{\"43\":1}}],[\"<leader>gq\",{\"1\":{\"43\":1}}],[\"<leader>gg\",{\"1\":{\"43\":1}}],[\"<leader>gk\",{\"1\":{\"43\":1}}],[\"<leader>gj\",{\"1\":{\"43\":1}}],[\"<leader>gt\",{\"1\":{\"43\":1}}],[\"<leader>gs\",{\"1\":{\"43\":1}}],[\"<leader>go\",{\"1\":{\"43\":1}}],[\"<leader>ge\",{\"1\":{\"43\":1}}],[\"<leader>gl\",{\"1\":{\"43\":1}}],[\"<leader>gh\",{\"1\":{\"43\":1}}],[\"<leader>gc\",{\"1\":{\"43\":1}}],[\"<leader>gf\",{\"1\":{\"43\":1}}],[\"<leader>gi\",{\"1\":{\"43\":1}}],[\"<leader>gd\",{\"1\":{\"43\":1}}],[\"<leader>qo\",{\"1\":{\"43\":1}}],[\"<leader>qu\",{\"1\":{\"43\":1}}],[\"<leader>qa\",{\"1\":{\"43\":1}}],[\"<leader>qq\",{\"1\":{\"43\":1}}],[\"<leader>zm\",{\"1\":{\"43\":1}}],[\"<leader>zp\",{\"1\":{\"43\":1}}],[\"<leader>zb\",{\"1\":{\"43\":1}}],[\"<leader>zv\",{\"1\":{\"43\":1}}],[\"<leader>zt\",{\"1\":{\"43\":1}}],[\"<leader>zs\",{\"1\":{\"43\":1}}],[\"<leader>zr\",{\"1\":{\"43\":1}}],[\"<leader>zd\",{\"1\":{\"43\":1}}],[\"<leader>zf\",{\"1\":{\"43\":1}}],[\"<leader>zh\",{\"1\":{\"43\":1}}],[\"<leader>za\",{\"1\":{\"43\":1}}],[\"<leader>zc\",{\"1\":{\"43\":1}}],[\"<leader>h\",{\"1\":{\"43\":1}}],[\"<leader>a\",{\"1\":{\"43\":1}}],[\"<leader>sg\",{\"1\":{\"43\":1}}],[\"<leader>sj\",{\"1\":{\"43\":2}}],[\"<leader>s\",{\"1\":{\"43\":1}}],[\"<leader>sc\",{\"1\":{\"43\":1}}],[\"<leader>dd\",{\"1\":{\"43\":2}}],[\"<leader>d\",{\"1\":{\"43\":5}}],[\"<leader>cc\",{\"1\":{\"43\":2}}],[\"<leader>c\",{\"1\":{\"43\":5}}],[\"<leader>p\",{\"1\":{\"43\":1}}],[\"<leader>br\",{\"1\":{\"43\":1}}],[\"<leader>bb\",{\"1\":{\"43\":1}}],[\"<leader>b\",{\"1\":{\"43\":1}}],[\"<leader>n\",{\"1\":{\"43\":1}}],[\"<leader>kr\",{\"1\":{\"43\":1}}],[\"<leader>er\",{\"1\":{\"43\":2}}],[\"<leader>ec\",{\"1\":{\"43\":1}}],[\"<leader>eb\",{\"1\":{\"43\":1}}],[\"<leader>e\",{\"1\":{\"43\":1}}],[\"<leader>ed\",{\"1\":{\"43\":3}}],[\"<leader>t\",{\"1\":{\"43\":2}}],[\"<leader>me\",{\"1\":{\"43\":1}}],[\"<leader>\",{\"1\":{\"43\":1}}],[\"<leader><space>\",{\"1\":{\"43\":1}}],[\"<local\",{\"1\":{\"10\":1}}],[\"<cr>\",{\"1\":{\"43\":7}}],[\"<c\",{\"1\":{\"43\":38}}],[\"<\",{\"1\":{\"29\":1,\"53\":1}}],[\"<groupid>org\",{\"1\":{\"29\":1}}],[\"<dependency>\",{\"1\":{\"29\":1}}],[\"<h5>欢迎访问黑马商城\",{\"1\":{\"19\":1}}],[\"访问界面测试\",{\"1\":{\"38\":1}}],[\"访问能力的情况\",{\"1\":{\"32\":1}}],[\"访问\",{\"0\":{\"50\":1},\"1\":{\"19\":1,\"26\":1}}],[\"访问网页\",{\"1\":{\"7\":1}}],[\"代码跳转相关\",{\"1\":{\"43\":1}}],[\"代表当前目录\",{\"1\":{\"18\":1}}],[\"代理了\",{\"1\":{\"12\":1}}],[\"代理我们的静态资源\",{\"1\":{\"12\":1}}],[\"代理我的静态资源怎么办\",{\"1\":{\"11\":1}}],[\"参数是后台启动\",{\"1\":{\"26\":1}}],[\"参数是指定镜像的名称\",{\"1\":{\"18\":1}}],[\"参数或指令\",{\"1\":{\"26\":1}}],[\"参数\",{\"1\":{\"25\":1}}],[\"参数非常相似\",{\"1\":{\"25\":1}}],[\"参数来指定数据卷\",{\"1\":{\"13\":1}}],[\"开发工具\",{\"2\":{\"44\":1}}],[\"开始构建\",{\"1\":{\"18\":1}}],[\"开头\",{\"1\":{\"14\":1}}],[\"构建镜像\",{\"0\":{\"18\":1},\"1\":{\"18\":1}}],[\"只要有这个文件夹就能查看到自己的云盘内容\",{\"1\":{\"47\":1}}],[\"只要我们将静态资源放入宿主机对应目录\",{\"1\":{\"12\":1}}],[\"只需要将上面的命令\",{\"1\":{\"38\":1}}],[\"只有上面的\",{\"1\":{\"17\":1}}],[\"他们都需要\",{\"1\":{\"17\":1}}],[\"同学们思考一下\",{\"1\":{\"17\":1}}],[\"入口\",{\"1\":{\"17\":2}}],[\">=\",{\"1\":{\"53\":1}}],[\">18080\",{\"1\":{\"26\":2}}],[\">3306\",{\"1\":{\"19\":2,\"26\":2}}],[\">8090\",{\"1\":{\"19\":1}}],[\">8080\",{\"1\":{\"19\":1,\"26\":2}}],[\">\",{\"1\":{\"17\":2,\"29\":1}}],[\"设定时区\",{\"1\":{\"17\":2}}],[\"设置加密字段\",{\"1\":{\"53\":1}}],[\"设置环境变量\",{\"1\":{\"17\":1}}],[\"设置镜像名称\",{\"1\":{\"3\":1}}],[\"设置端口映射\",{\"1\":{\"3\":1}}],[\"$redo<cr>\",{\"1\":{\"43\":1}}],[\"$remote\",{\"1\":{\"38\":1}}],[\"$proxy\",{\"1\":{\"38\":1}}],[\"$http\",{\"1\":{\"38\":1}}],[\"$server\",{\"1\":{\"38\":1}}],[\"$\",{\"1\":{\"26\":1,\"29\":3,\"43\":2}}],[\"$tz\",{\"1\":{\"17\":4}}],[\"$java\",{\"1\":{\"17\":3}}],[\"$catalina\",{\"1\":{\"17\":1}}],[\"guide\",{\"1\":{\"47\":1}}],[\"gv\",{\"1\":{\"43\":1}}],[\"gl\",{\"1\":{\"43\":1}}],[\"global\",{\"1\":{\"8\":1}}],[\"gd可以替代这个\",{\"1\":{\"43\":1}}],[\"getbytes\",{\"1\":{\"53\":1}}],[\"get\",{\"1\":{\"53\":3}}],[\"getid\",{\"1\":{\"53\":1}}],[\"getargs\",{\"1\":{\"53\":1}}],[\"getmapping\",{\"1\":{\"29\":3}}],[\"generate<cr>\",{\"1\":{\"43\":1}}],[\"gototest<cr>\",{\"1\":{\"43\":1}}],[\"gotosupermethod<cr>\",{\"1\":{\"43\":1}}],[\"gotosymbol<cr>\",{\"1\":{\"43\":1}}],[\"gotoimplementation<cr>\",{\"1\":{\"43\":1}}],[\"gotodeclaration<cr>\",{\"1\":{\"43\":1}}],[\"gotoclass<cr>\",{\"1\":{\"43\":1}}],[\"gotopreviouserror<cr>\",{\"1\":{\"43\":2}}],[\"gotonexterror<cr>\",{\"1\":{\"43\":2}}],[\"gotoaction<cr>\",{\"1\":{\"43\":2}}],[\"gotofile<cr>\",{\"1\":{\"43\":2}}],[\"git\",{\"1\":{\"43\":1}}],[\"github\",{\"1\":{\"29\":1,\"32\":2}}],[\"g\",{\"1\":{\"43\":4}}],[\"ggvg\",{\"1\":{\"43\":1}}],[\"gb18030\",{\"1\":{\"43\":1}}],[\"gbk\",{\"1\":{\"43\":1}}],[\"gb2312\",{\"1\":{\"43\":1}}],[\"groupid>\",{\"1\":{\"29\":1}}],[\"gz\",{\"1\":{\"17\":2,\"43\":1}}],[\"gcc\",{\"1\":{\"17\":1}}],[\"执行命令\",{\"1\":{\"18\":1}}],[\"执行命令使别名生效\",{\"1\":{\"8\":1}}],[\"执行\",{\"1\":{\"17\":1}}],[\"且会自动处理url和解压tar压缩包\",{\"1\":{\"17\":1}}],[\"终端默认登录进来的工作目录\",{\"1\":{\"17\":1}}],[\"指定\",{\"1\":{\"26\":2}}],[\"指定别名为db\",{\"1\":{\"22\":1}}],[\"指定项目监听的端口\",{\"1\":{\"17\":1}}],[\"指定容器启动后要干的事情\",{\"1\":{\"17\":1}}],[\"指定容器运行时监听的端口\",{\"1\":{\"17\":1}}],[\"指定该镜像以用户去执行\",{\"1\":{\"17\":1}}],[\"指定在创建容器后\",{\"1\":{\"17\":1}}],[\"指定基础镜像\",{\"1\":{\"17\":2}}],[\"指令\",{\"1\":{\"17\":1,\"25\":1}}],[\"非必须\",{\"1\":{\"17\":1}}],[\"非常的方便\",{\"1\":{\"3\":1}}],[\"示例\",{\"1\":{\"17\":1}}],[\"示例中就是将宿主机的\",{\"1\":{\"3\":1}}],[\"去掉搜索高亮\",{\"1\":{\"43\":1}}],[\"去执行即可\",{\"1\":{\"17\":1}}],[\"去dockerhub查看nginx镜像仓库及相关信息\",{\"1\":{\"7\":1}}],[\"交给\",{\"1\":{\"17\":1}}],[\"比较常见的有\",{\"1\":{\"26\":1}}],[\"比较常见的命令有\",{\"1\":{\"6\":1}}],[\"比较常用的有\",{\"1\":{\"17\":1}}],[\"比较复杂\",{\"1\":{\"17\":1}}],[\"最后一串就是\",{\"1\":{\"47\":1}}],[\"最后重启\",{\"1\":{\"38\":1}}],[\"最后\",{\"0\":{\"37\":1}}],[\"最后的点是指构建时\",{\"1\":{\"18\":1}}],[\"最终整个\",{\"1\":{\"16\":1}}],[\"最好是找到\",{\"1\":{\"12\":1}}],[\"最好是放到\",{\"1\":{\"12\":1}}],[\"直接指定\",{\"0\":{\"19\":1}}],[\"直接使用\",{\"1\":{\"16\":1}}],[\"直接去\",{\"1\":{\"2\":1}}],[\"通用性就很强\",{\"1\":{\"16\":1}}],[\"通过mybatis拦截器\",{\"0\":{\"52\":1}}],[\"通过ping命令测试网络\",{\"1\":{\"20\":1}}],[\"通过命令可以实现开机自启\",{\"1\":{\"6\":1}}],[\"通过任意客户端工具即可连接到\",{\"1\":{\"2\":1}}],[\"层不同\",{\"1\":{\"17\":1}}],[\"层\",{\"1\":{\"16\":1}}],[\"称为\",{\"1\":{\"16\":1}}],[\"函数库\",{\"1\":{\"16\":1}}],[\"拷贝到虚拟机的\",{\"1\":{\"18\":1}}],[\"拷贝jar包\",{\"1\":{\"17\":1}}],[\"拷贝jdk和java项目的包\",{\"1\":{\"17\":1}}],[\"拷贝本地文件到镜像的指定目录\",{\"1\":{\"17\":1}}],[\"拷贝\",{\"1\":{\"16\":1}}],[\"仅仅是基础运行环境即可\",{\"1\":{\"16\":1}}],[\"仅仅需要一步即可\",{\"1\":{\"2\":1}}],[\"准备\",{\"0\":{\"33\":1},\"1\":{\"16\":1}}],[\"准备一个\",{\"1\":{\"16\":1}}],[\"包括生成的pem文件\",{\"1\":{\"38\":1}}],[\"包以及\",{\"1\":{\"18\":1}}],[\"包不同\",{\"1\":{\"17\":1}}],[\"包\",{\"1\":{\"16\":3}}],[\"jetbrains\",{\"2\":{\"44\":1}}],[\"jk\",{\"1\":{\"43\":1}}],[\"j\",{\"1\":{\"43\":1}}],[\"j>\",{\"1\":{\"43\":3}}],[\"jre\",{\"1\":{\"17\":1,\"26\":2}}],[\"ja\",{\"1\":{\"17\":1}}],[\"jar\",{\"1\":{\"16\":3,\"17\":12,\"18\":1,\"26\":4}}],[\"javax\",{\"1\":{\"53\":1}}],[\"java调用\",{\"0\":{\"29\":1}}],[\"java项目的启动命令\",{\"1\":{\"17\":1}}],[\"java8\",{\"1\":{\"17\":2}}],[\"java\",{\"1\":{\"15\":1,\"16\":4,\"17\":9,\"20\":2,\"24\":2,\"26\":1,\"53\":1,\"54\":2},\"2\":{\"44\":1,\"55\":1}}],[\"jdk1\",{\"1\":{\"17\":1}}],[\"jdk8\",{\"1\":{\"17\":2}}],[\"jdk的安装目录\",{\"1\":{\"17\":1}}],[\"jdk\",{\"1\":{\"16\":2,\"17\":3}}],[\"均可\",{\"1\":{\"16\":1}}],[\"服务\",{\"1\":{\"16\":1}}],[\"应用\",{\"1\":{\"16\":1,\"17\":1}}],[\"应用本身\",{\"1\":{\"16\":1}}],[\"依赖\",{\"1\":{\"16\":2}}],[\"之前我们说过\",{\"1\":{\"16\":1}}],[\"必须先了解镜像的结构\",{\"1\":{\"16\":1}}],[\"必须手动解决安装包不同\",{\"1\":{\"2\":1}}],[\"把它打包为一个镜像该怎么做呢\",{\"1\":{\"15\":1}}],[\"项目往往需要访问其它各种中间件\",{\"1\":{\"20\":1}}],[\"项目的容器\",{\"1\":{\"20\":1}}],[\"项目的镜像结构如图所示\",{\"1\":{\"16\":1}}],[\"项目及对应的\",{\"1\":{\"18\":1}}],[\"项目需要打包为镜像\",{\"1\":{\"17\":1}}],[\"项目并不需要完整的操作系统\",{\"1\":{\"16\":1}}],[\"项目\",{\"1\":{\"15\":1,\"24\":2}}],[\"那因此\",{\"1\":{\"16\":1}}],[\"那如果我要部署一个\",{\"1\":{\"15\":1}}],[\"那么数据岂不是跟着被销毁了\",{\"1\":{\"11\":1}}],[\"那么问题来了\",{\"1\":{\"2\":1}}],[\"前面我们一直在使用别人准备好的镜像\",{\"1\":{\"15\":1}}],[\"李晓龙\",{\"1\":{\"14\":1}}],[\"李佳星\",{\"1\":{\"14\":1}}],[\"李佳红\",{\"1\":{\"14\":1}}],[\"李佳诚\",{\"1\":{\"14\":1}}],[\"永春武馆\",{\"1\":{\"14\":1}}],[\"永春\",{\"1\":{\"14\":1}}],[\"佛山\",{\"1\":{\"14\":1}}],[\"广东\",{\"1\":{\"14\":1}}],[\"航头镇航头路\",{\"1\":{\"14\":1}}],[\"浦东新区\",{\"1\":{\"14\":1}}],[\"修正大厦\",{\"1\":{\"14\":1}}],[\"修改\",{\"1\":{\"8\":1}}],[\"金燕龙办公楼\",{\"1\":{\"14\":1}}],[\"朝阳区\",{\"1\":{\"14\":2}}],[\"北京\",{\"1\":{\"14\":4}}],[\"o\",{\"1\":{\"53\":3}}],[\"override\",{\"1\":{\"53\":1}}],[\"object>\",{\"1\":{\"53\":2}}],[\"object\",{\"1\":{\"53\":5}}],[\"objectutils\",{\"1\":{\"53\":2}}],[\"o<esc>\",{\"1\":{\"43\":1}}],[\"o>\",{\"1\":{\"43\":2}}],[\"o>^\",{\"1\":{\"43\":1}}],[\"o>$\",{\"1\":{\"43\":1}}],[\"org\",{\"1\":{\"29\":8,\"53\":10,\"54\":3}}],[\"order\",{\"1\":{\"14\":4}}],[\"on\",{\"1\":{\"25\":2,\"36\":1,\"38\":1}}],[\"ok\",{\"1\":{\"22\":1}}],[\"offset\",{\"1\":{\"53\":2}}],[\"of\",{\"1\":{\"20\":1,\"22\":2,\"53\":1}}],[\"options\",{\"1\":{\"13\":1,\"26\":3}}],[\"openfeign\",{\"1\":{\"29\":1}}],[\"openfeign<\",{\"1\":{\"29\":1}}],[\"openjdk\",{\"1\":{\"17\":1,\"26\":2}}],[\"open\",{\"1\":{\"9\":1,\"47\":1}}],[\"切换到hmall数据库\",{\"1\":{\"14\":1}}],[\"block\",{\"1\":{\"53\":4}}],[\"boolean\",{\"1\":{\"53\":1}}],[\"boundsql\",{\"1\":{\"53\":2}}],[\"break\",{\"1\":{\"53\":1}}],[\"bridge\",{\"1\":{\"20\":1,\"22\":3}}],[\"bean\",{\"1\":{\"53\":1,\"54\":3}}],[\"b\",{\"1\":{\"43\":1}}],[\"b>\",{\"1\":{\"43\":1}}],[\"baomidou\",{\"1\":{\"54\":3}}],[\"back<cr>\",{\"1\":{\"43\":1}}],[\"bashrc\",{\"1\":{\"8\":5}}],[\"bashrc文件\",{\"1\":{\"8\":1}}],[\"bash\",{\"1\":{\"7\":1,\"13\":1,\"20\":1,\"22\":1}}],[\"bytes\",{\"1\":{\"20\":4,\"22\":6}}],[\"but\",{\"1\":{\"43\":1}}],[\"building\",{\"1\":{\"26\":1}}],[\"build\",{\"1\":{\"18\":2,\"19\":1,\"25\":1,\"26\":2}}],[\"builder\",{\"1\":{\"17\":1}}],[\"buster\",{\"1\":{\"17\":1,\"26\":2}}],[\"bind\",{\"1\":{\"29\":4}}],[\"bin\",{\"1\":{\"17\":1}}],[\"binary\",{\"1\":{\"14\":1}}],[\"||\",{\"1\":{\"53\":5}}],[\"|\",{\"1\":{\"14\":112}}],[\"+\",{\"1\":{\"14\":54,\"26\":2,\"53\":2}}],[\"发现可以互联\",{\"1\":{\"20\":1}}],[\"发现编码是utf8mb4没有问题\",{\"1\":{\"14\":1}}],[\"发现无法删除\",{\"1\":{\"7\":1}}],[\"xhxk\",{\"1\":{\"54\":1}}],[\"xiaoya\",{\"0\":{\"47\":1},\"1\":{\"45\":1,\"48\":2,\"49\":1}}],[\"xiaoyaliu\",{\"1\":{\"45\":1,\"46\":1,\"48\":1}}],[\"xmap\",{\"1\":{\"43\":4}}],[\"xf\",{\"1\":{\"17\":1}}],[\"xf233\",{\"1\":{\"17\":1}}],[\"xx\",{\"1\":{\"17\":2}}],[\"x\",{\"1\":{\"14\":3,\"38\":3}}],[\"xr\",{\"1\":{\"14\":3}}],[\"~\",{\"1\":{\"14\":1,\"43\":2}}],[\"则是后面我们要用到的黑马商城项目的初始化\",{\"1\":{\"14\":1}}],[\"则是让容器以后台进程运行\",{\"1\":{\"3\":1}}],[\"改为\",{\"1\":{\"14\":1,\"38\":1}}],[\"主要是配置了\",{\"1\":{\"14\":1}}],[\"脚本\",{\"1\":{\"14\":1}}],[\"脚本和配置文件\",{\"1\":{\"14\":1}}],[\"脚本目录\",{\"1\":{\"14\":1}}],[\"初始化的\",{\"1\":{\"14\":1}}],[\"到容器内的\",{\"1\":{\"14\":3}}],[\"或远程文件\",{\"1\":{\"17\":1}}],[\"或\",{\"1\":{\"14\":1,\"16\":1}}],[\"或者\",{\"1\":{\"7\":1,\"16\":1}}],[\"本机ip加端口号5678\",{\"0\":{\"50\":1}}],[\"本质上来说\",{\"1\":{\"32\":1}}],[\"本地文件\",{\"1\":{\"14\":1}}],[\"本地目录或文件必须以\",{\"1\":{\"14\":1}}],[\"本地目录\",{\"1\":{\"14\":1}}],[\"本身\",{\"1\":{\"2\":1}}],[\"对比如下\",{\"1\":{\"25\":1}}],[\"对应的页面\",{\"1\":{\"13\":1}}],[\"对于创建好的容器\",{\"1\":{\"13\":1}}],[\"每一个应用容器被称为一个服务\",{\"1\":{\"25\":1}}],[\"每一个不同的镜像\",{\"1\":{\"13\":1}}],[\"每一层要做的事情用固定的语法写下来\",{\"1\":{\"17\":1}}],[\"每一层形成的文件都会单独打包并标记一个唯一\",{\"1\":{\"16\":1}}],[\"每次重启虚拟机我们都需要手动启动\",{\"1\":{\"6\":1}}],[\"其它都是默认的网络\",{\"1\":{\"22\":1}}],[\"其值并不固定与某一个容器绑定\",{\"1\":{\"20\":1}}],[\"其实是一个虚拟的\",{\"1\":{\"20\":1}}],[\"其\",{\"1\":{\"17\":1}}],[\"其对应的语法可以参考官方文档\",{\"1\":{\"17\":1}}],[\"其使用方式与普通数据卷没有差别\",{\"1\":{\"13\":1}}],[\"其中还会有各种各样的其它中间件\",{\"1\":{\"24\":1}}],[\"其中包含\",{\"1\":{\"24\":1}}],[\"其中的语法比较多\",{\"1\":{\"17\":1}}],[\"其中有几个关键属性\",{\"1\":{\"13\":1}}],[\"其中\",{\"1\":{\"3\":1,\"6\":1,\"14\":1,\"22\":1,\"26\":1}}],[\"于是在宿主机中就有了\",{\"1\":{\"13\":1}}],[\"挂载后重启\",{\"1\":{\"38\":1}}],[\"挂载本地文件\",{\"1\":{\"14\":1}}],[\"挂载本地目录\",{\"1\":{\"14\":2}}],[\"挂载本地目录或文件\",{\"0\":{\"14\":1}}],[\"挂载语法与数据卷类似\",{\"1\":{\"14\":1}}],[\"挂载\",{\"1\":{\"13\":1,\"14\":3}}],[\"与数据卷\",{\"1\":{\"13\":1}}],[\"与宿主机的\",{\"1\":{\"12\":1}}],[\"上节课我们创建了一个\",{\"1\":{\"20\":1}}],[\"上述步骤中的每一次操作其实都是在生产一些文件\",{\"1\":{\"16\":1}}],[\"上述配置是将容器内的\",{\"1\":{\"13\":1}}],[\"上传\",{\"1\":{\"16\":1}}],[\"上传至\",{\"1\":{\"2\":1}}],[\"上海\",{\"1\":{\"14\":2}}],[\"宿主机目录\",{\"1\":{\"13\":1}}],[\"宿主机端口\",{\"1\":{\"3\":1}}],[\"值\",{\"1\":{\"13\":1}}],[\"hutool\",{\"1\":{\"53\":1}}],[\"h\",{\"1\":{\"43\":1}}],[\"hlsearch\",{\"1\":{\"43\":1}}],[\"hideallwindows<cr>\",{\"1\":{\"43\":2}}],[\"hideactivewindow<cr>\",{\"1\":{\"43\":1}}],[\"history=100000\",{\"1\":{\"43\":1}}],[\"highlighted\",{\"1\":{\"43\":1}}],[\"highlightedyank\",{\"1\":{\"43\":1}}],[\"high\",{\"1\":{\"38\":1}}],[\"h>\",{\"1\":{\"43\":4}}],[\"header\",{\"1\":{\"38\":3}}],[\"hello\",{\"1\":{\"17\":1,\"19\":1}}],[\"host\",{\"1\":{\"22\":2,\"38\":2}}],[\"hours\",{\"1\":{\"19\":1}}],[\"home=$java\",{\"1\":{\"17\":1}}],[\"home\",{\"1\":{\"17\":2,\"38\":7}}],[\"homeenv\",{\"1\":{\"17\":1}}],[\"hmall是黑马商城数据库\",{\"1\":{\"14\":1}}],[\"hmall\",{\"1\":{\"14\":4,\"22\":8,\"25\":6,\"26\":9}}],[\"hm\",{\"1\":{\"14\":1,\"25\":4,\"26\":1}}],[\"hashset<>\",{\"1\":{\"54\":1}}],[\"hashset\",{\"1\":{\"54\":1}}],[\"hash\",{\"1\":{\"13\":1}}],[\"htm\",{\"1\":{\"38\":1}}],[\"html目录内的文件是否变化\",{\"1\":{\"13\":1}}],[\"html内容\",{\"1\":{\"13\":1}}],[\"html\",{\"1\":{\"12\":10,\"13\":13,\"25\":2,\"38\":9,\"47\":1}}],[\"https\",{\"1\":{\"17\":1,\"20\":1,\"29\":1,\"32\":1,\"38\":1,\"45\":2,\"47\":3},\"2\":{\"40\":1}}],[\"http\",{\"1\":{\"7\":1,\"26\":1,\"29\":2,\"47\":1}}],[\"一串\",{\"1\":{\"13\":1}}],[\"一般不修改该配置\",{\"1\":{\"17\":1}}],[\"一般是安装过程的命令\",{\"1\":{\"17\":1}}],[\"一般使用\",{\"1\":{\"9\":1}}],[\"一般与容器内保持一致\",{\"1\":{\"3\":1}}],[\"一般我们都会使用第三方仓库提供的镜像加速功能\",{\"1\":{\"2\":1}}],[\"由于\",{\"1\":{\"25\":1}}],[\"由于我们进入了\",{\"1\":{\"18\":1}}],[\"由于制作镜像的过程中\",{\"1\":{\"17\":1}}],[\"由于定义容器未设置容器名\",{\"1\":{\"13\":1}}],[\"由于大家的操作系统各不相同\",{\"1\":{\"1\":1}}],[\"需要部署的东西远不止\",{\"1\":{\"24\":1}}],[\"需要逐层处理和打包\",{\"1\":{\"17\":1}}],[\"需要挂载数据卷\",{\"1\":{\"13\":1}}],[\"需要销毁旧容器\",{\"1\":{\"11\":1}}],[\"略\",{\"1\":{\"13\":2}}],[\"部分\",{\"1\":{\"13\":2}}],[\"部署一个\",{\"1\":{\"16\":1}}],[\"部署\",{\"0\":{\"2\":1},\"1\":{\"25\":1}}],[\"78a000447b49\",{\"1\":{\"19\":1}}],[\"7\",{\"1\":{\"13\":1,\"14\":1,\"26\":1}}],[\"并且打包而成\",{\"1\":{\"16\":1}}],[\"并完成本地目录挂载\",{\"1\":{\"14\":1}}],[\"并随意修改index\",{\"1\":{\"13\":1}}],[\"并对外开放了镜像上传\",{\"1\":{\"2\":1}}],[\"69404af849504fa5bcf9f2dd5ecaa75f\",{\"1\":{\"45\":1}}],[\"640xxxxxxxxxxxxxxxxxxxca8a\",{\"1\":{\"47\":1}}],[\"64\",{\"1\":{\"20\":3,\"22\":4}}],[\"639bc44d0a87\",{\"1\":{\"22\":1}}],[\"63\",{\"1\":{\"14\":1}}],[\"61\",{\"1\":{\"14\":1}}],[\"615\",{\"1\":{\"13\":1}}],[\"60\",{\"1\":{\"14\":1}}],[\"605c77e624dd\",{\"1\":{\"7\":1,\"19\":1,\"26\":1}}],[\"6\",{\"1\":{\"13\":1,\"14\":5,\"17\":1,\"26\":1}}],[\"总结\",{\"0\":{\"23\":1}}],[\"总用量\",{\"1\":{\"13\":1,\"14\":1}}],[\"总之\",{\"1\":{\"2\":1}}],[\"结果\",{\"1\":{\"13\":2,\"14\":4,\"19\":4,\"20\":1,\"22\":3,\"26\":3,\"29\":2}}],[\"结果如下\",{\"1\":{\"7\":1,\"13\":1}}],[\"教学演示\",{\"0\":{\"22\":1},\"1\":{\"14\":1,\"26\":1}}],[\"教学演示环节\",{\"1\":{\"13\":2}}],[\"教学环节说明\",{\"1\":{\"7\":1}}],[\"创建temp\",{\"1\":{\"47\":1}}],[\"创建myopentoken\",{\"1\":{\"47\":1}}],[\"创建mytoken\",{\"1\":{\"47\":1}}],[\"创建一个存放配置文件的本地文件夹如d\",{\"0\":{\"47\":1}}],[\"创建一个网络\",{\"1\":{\"21\":1}}],[\"创建数据卷\",{\"1\":{\"13\":1}}],[\"创建并启动所有\",{\"1\":{\"26\":1}}],[\"创建并允许nginx容器\",{\"1\":{\"7\":1}}],[\"创建并运行新mysql容器\",{\"1\":{\"14\":1}}],[\"创建并运行容器\",{\"1\":{\"6\":1,\"19\":1}}],[\"创建并运行一个容器\",{\"1\":{\"3\":1}}],[\"此时\",{\"1\":{\"12\":1}}],[\"分别指向了宿主机的\",{\"1\":{\"12\":1}}],[\"如有报错\",{\"0\":{\"49\":1}}],[\"如\",{\"1\":{\"47\":1}}],[\"如图\",{\"1\":{\"12\":1}}],[\"如果用\",{\"1\":{\"25\":1}}],[\"如果还像之前那样手动的逐一部署\",{\"1\":{\"24\":1}}],[\"如果每次制作\",{\"1\":{\"17\":1}}],[\"如果不指定\",{\"1\":{\"17\":1}}],[\"如果直接以名字开头\",{\"1\":{\"14\":1}}],[\"如果我们在开发时写死某个\",{\"1\":{\"20\":1}}],[\"如果我们构建时用到的某些层其他人已经制作过\",{\"1\":{\"16\":1}}],[\"如果我们去操作数据卷目录会不太方便\",{\"1\":{\"14\":1}}],[\"如果我们要修改\",{\"1\":{\"12\":1}}],[\"如果我们要让\",{\"1\":{\"12\":1}}],[\"如果我们要安装其它软件\",{\"1\":{\"3\":1}}],[\"如果我要修改其中的某些配置该怎么办\",{\"1\":{\"11\":1}}],[\"如果要升级\",{\"1\":{\"11\":1}}],[\"如果要开启\",{\"1\":{\"9\":1}}],[\"如果是手动安装\",{\"1\":{\"2\":1}}],[\"如果是利用传统方式部署\",{\"1\":{\"2\":1}}],[\"方便我们操作\",{\"1\":{\"12\":1}}],[\"方便我们访问\",{\"1\":{\"8\":1}}],[\"所在路径\",{\"1\":{\"18\":1}}],[\"所以使用docker逐步构建\",{\"1\":{\"45\":1}}],[\"所以必须要加leader\",{\"1\":{\"43\":1}}],[\"所以指定的是\",{\"1\":{\"18\":1}}],[\"所以\",{\"1\":{\"16\":1,\"17\":2,\"20\":1}}],[\"所以镜像就是一堆文件的集合\",{\"1\":{\"16\":1}}],[\"所以我们必须利用数据卷将两个目录与宿主机目录关联\",{\"1\":{\"12\":1}}],[\"所有的文件都在容器内部\",{\"1\":{\"12\":1}}],[\"但需要注意的是\",{\"1\":{\"16\":1}}],[\"但遗憾的是\",{\"1\":{\"12\":1}}],[\"但是\",{\"1\":{\"20\":1}}],[\"但是数据卷未定义\",{\"1\":{\"13\":1}}],[\"但是程序运行产生的数据\",{\"1\":{\"11\":1}}],[\"但是可以将宿主机端口\",{\"1\":{\"3\":1}}],[\"文件中设置的多个\",{\"1\":{\"26\":1}}],[\"文件中可以定义多个相互关联的应用容器\",{\"1\":{\"25\":1}}],[\"文件的路径和名称\",{\"1\":{\"26\":1}}],[\"文件的基本语法可以参考官方文档\",{\"1\":{\"25\":1}}],[\"文件应该难不倒大家\",{\"1\":{\"25\":1}}],[\"文件来定义\",{\"1\":{\"25\":1}}],[\"文件写好以后\",{\"1\":{\"18\":1}}],[\"文件\",{\"1\":{\"12\":1,\"13\":1,\"26\":1}}],[\"文档地址\",{\"1\":{\"6\":1,\"13\":1,\"21\":1}}],[\"放置配置文件\",{\"1\":{\"12\":1}}],[\"放置一些静态资源\",{\"1\":{\"12\":1}}],[\"以后我们会有很多很多\",{\"1\":{\"17\":1}}],[\"以及对应的初始化\",{\"1\":{\"14\":1}}],[\"以\",{\"1\":{\"12\":1}}],[\"目录下有效期少于\",{\"1\":{\"38\":1}}],[\"目录下\",{\"1\":{\"14\":1}}],[\"目录上传至虚拟机的\",{\"1\":{\"14\":1}}],[\"目录挂载\",{\"1\":{\"13\":1}}],[\"目录挂载的情况被默认为不安全的行为\",{\"1\":{\"9\":1}}],[\"目录关联起来\",{\"1\":{\"12\":1}}],[\"目录就\",{\"1\":{\"12\":1}}],[\"目录分别与两个数据卷关联\",{\"1\":{\"12\":1}}],[\"目录和\",{\"1\":{\"12\":2,\"14\":1}}],[\"目录\",{\"0\":{\"19\":1},\"1\":{\"12\":3,\"14\":4,\"18\":3}}],[\"目录之间映射的桥梁\",{\"1\":{\"12\":1}}],[\"什么是数据卷\",{\"0\":{\"12\":1}}],[\"程序运行依赖的配置都应该与容器\",{\"1\":{\"11\":1}}],[\"我想要让\",{\"1\":{\"11\":1}}],[\"我们部署一个简单的\",{\"1\":{\"24\":1}}],[\"我们必须借助于\",{\"1\":{\"20\":1}}],[\"我们查看下\",{\"1\":{\"20\":1}}],[\"我们来测试一下\",{\"1\":{\"20\":1}}],[\"我们的容器之间能否互相访问呢\",{\"1\":{\"20\":1}}],[\"我们将课前资料提供的\",{\"1\":{\"18\":1}}],[\"我们准备好了一个\",{\"1\":{\"18\":1}}],[\"我们在此基础上制作\",{\"1\":{\"17\":1}}],[\"我们在制作\",{\"1\":{\"16\":1}}],[\"我们只需要将打包的过程\",{\"1\":{\"17\":1}}],[\"我们打包镜像也是分成这么几步\",{\"1\":{\"16\":1}}],[\"我们要从\",{\"1\":{\"16\":1}}],[\"我们要读写容器内的文件非常不方便\",{\"1\":{\"11\":1}}],[\"我们演示本地目录挂载\",{\"1\":{\"14\":1}}],[\"我们直接将整个\",{\"1\":{\"14\":1}}],[\"我们会直接将容器目录与宿主机指定目录挂载\",{\"1\":{\"14\":1}}],[\"我们再看结果中的\",{\"1\":{\"13\":1}}],[\"我们关注两部分内容\",{\"1\":{\"13\":1}}],[\"我们操作宿主机的\",{\"1\":{\"12\":1}}],[\"我们称为挂载\",{\"1\":{\"12\":1}}],[\"我们创建了两个数据卷\",{\"1\":{\"12\":1}}],[\"我们知道\",{\"1\":{\"12\":1}}],[\"我们以\",{\"1\":{\"7\":1}}],[\"我们一起来学习\",{\"1\":{\"4\":1}}],[\"我们也可以自己搭建私有的镜像仓库\",{\"1\":{\"2\":1}}],[\"我们甚至可以自己制作镜像上传上去\",{\"1\":{\"2\":1}}],[\"我们完全不用插手\",{\"1\":{\"2\":1}}],[\"我们利用\",{\"1\":{\"2\":1}}],[\"我们统一在\",{\"1\":{\"1\":1}}],[\"版本\",{\"1\":{\"11\":1}}],[\"将内容填入文件\",{\"1\":{\"47\":1}}],[\"将宿主机目录下\",{\"1\":{\"17\":1}}],[\"将来创建容器后内部有哪些目录可以挂载\",{\"1\":{\"13\":1}}],[\"将打上tag的镜像上传到dockerhub\",{\"1\":{\"10\":1}}],[\"将新的镜像推送到dockerhub\",{\"0\":{\"10\":1}}],[\"将容器生成新的镜像\",{\"0\":{\"9\":1}}],[\"5k\",{\"1\":{\"43\":1}}],[\"5j\",{\"1\":{\"43\":1}}],[\"50zl\",{\"1\":{\"43\":1}}],[\"50zh\",{\"1\":{\"43\":1}}],[\"504\",{\"1\":{\"38\":1}}],[\"503\",{\"1\":{\"38\":1}}],[\"502\",{\"1\":{\"38\":1}}],[\"5000\",{\"1\":{\"43\":1}}],[\"500\",{\"1\":{\"38\":1}}],[\"50x\",{\"1\":{\"13\":1,\"38\":2}}],[\"5m\",{\"1\":{\"38\":1}}],[\"53\",{\"1\":{\"26\":1}}],[\"52\",{\"1\":{\"26\":2}}],[\"54\",{\"1\":{\"26\":3}}],[\"5s\",{\"1\":{\"26\":3}}],[\"5678\",{\"1\":{\"47\":1,\"48\":1}}],[\"56\",{\"1\":{\"20\":1,\"22\":2}}],[\"59\",{\"1\":{\"14\":1}}],[\"5月\",{\"1\":{\"14\":3}}],[\"57\",{\"1\":{\"13\":1}}],[\"5\",{\"0\":{\"10\":1,\"38\":1,\"50\":1},\"1\":{\"13\":1,\"14\":5,\"26\":1}}],[\"516mb\",{\"1\":{\"7\":1,\"19\":1,\"26\":1}}],[\"否则容器内的root只是外部的一个普通用户权限\",{\"1\":{\"9\":1}}],[\"扩大容器的权限解决挂载没有权限的问题\",{\"1\":{\"9\":1}}],[\"解耦\",{\"1\":{\"11\":1}}],[\"解决方案\",{\"1\":{\"9\":1}}],[\"解读\",{\"1\":{\"3\":1}}],[\"可在后面指令使用\",{\"1\":{\"17\":1}}],[\"可能会出现报错\",{\"1\":{\"9\":1}}],[\"可以添加多个目标\",{\"1\":{\"54\":1}}],[\"可以写本电脑ip加容器运行的端口\",{\"1\":{\"47\":1}}],[\"可以查询所有的命令\",{\"1\":{\"43\":1}}],[\"可以查看该目录下的\",{\"1\":{\"13\":1}}],[\"可以通过别名互相访问\",{\"1\":{\"23\":1}}],[\"可以给容器起多个别名\",{\"1\":{\"23\":1}}],[\"可以参考\",{\"1\":{\"13\":1}}],[\"可以参考官方文档\",{\"1\":{\"5\":1}}],[\"可以发现~\",{\"1\":{\"14\":1}}],[\"可以发现\",{\"1\":{\"13\":1,\"14\":1}}],[\"可以发现这个容器声明了一个本地目录\",{\"1\":{\"13\":1}}],[\"可以看到与nginx的html目录内容一样\",{\"1\":{\"13\":1}}],[\"可以在里面执行一些命令操作\",{\"1\":{\"9\":1}}],[\"可以进入mysql\",{\"1\":{\"7\":1}}],[\"可以理解为镜像名\",{\"1\":{\"3\":1}}],[\"可以翻译为镜像仓库\",{\"1\":{\"2\":1}}],[\"作者\",{\"1\":{\"9\":1}}],[\"提交的描述信息\",{\"1\":{\"9\":1}}],[\"提高下载速度\",{\"1\":{\"2\":1}}],[\"启动所有\",{\"1\":{\"26\":1}}],[\"启动容器\",{\"0\":{\"48\":1},\"1\":{\"26\":1}}],[\"启动一个镜像容器后\",{\"1\":{\"9\":1}}],[\"启动指定容器\",{\"1\":{\"6\":1}}],[\"443\",{\"1\":{\"38\":3}}],[\"4s\",{\"1\":{\"26\":1}}],[\"403f16ec62a2\",{\"1\":{\"22\":1}}],[\"4096\",{\"1\":{\"14\":1}}],[\"497\",{\"1\":{\"13\":1}}],[\"4\",{\"0\":{\"9\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"36\":1,\"49\":1},\"1\":{\"13\":1,\"14\":4,\"22\":4,\"26\":3}}],[\"试试看新的命令吧\",{\"1\":{\"8\":1}}],[\"内容如下\",{\"1\":{\"8\":1,\"17\":1}}],[\"void\",{\"1\":{\"53\":1}}],[\"volumes部分和\",{\"1\":{\"13\":1}}],[\"volumes\",{\"1\":{\"12\":3,\"13\":9,\"25\":4}}],[\"volume\",{\"1\":{\"12\":1,\"13\":11}}],[\"vercel\",{\"1\":{\"47\":1}}],[\"version\",{\"1\":{\"25\":2}}],[\"vcs\",{\"1\":{\"43\":1}}],[\"vs\",{\"1\":{\"43\":7}}],[\"vsp<cr>\",{\"1\":{\"43\":1}}],[\"vnoremap\",{\"1\":{\"43\":22}}],[\"vmap\",{\"1\":{\"43\":4}}],[\"v\",{\"1\":{\"13\":2,\"14\":7,\"25\":4,\"34\":2,\"38\":5,\"43\":3,\"48\":1}}],[\"variable\",{\"1\":{\"14\":1}}],[\"variables\",{\"1\":{\"14\":1}}],[\"var\",{\"1\":{\"12\":3,\"13\":10,\"14\":4,\"25\":3,\"34\":2,\"38\":1,\"43\":1}}],[\"valueof\",{\"1\":{\"53\":3}}],[\"value\",{\"1\":{\"3\":1,\"14\":1,\"17\":1,\"29\":10,\"53\":4}}],[\"viewbreakpoints<cr>\",{\"1\":{\"43\":1}}],[\"vir\",{\"1\":{\"43\":1}}],[\"viw\",{\"1\":{\"43\":1}}],[\"vimwindowprev<cr>\",{\"1\":{\"43\":1}}],[\"vimwindownext<cr>\",{\"1\":{\"43\":1}}],[\"vimwindowleft<cr>\",{\"1\":{\"43\":1}}],[\"vimwindowright<cr>\",{\"1\":{\"43\":1}}],[\"vimwindowup<cr>\",{\"1\":{\"43\":1}}],[\"vimwindowdown<cr>\",{\"1\":{\"43\":1}}],[\"vimwindowsplitvertical<cr>\",{\"1\":{\"43\":1}}],[\"vimwindowsplithorizontal<cr>\",{\"1\":{\"43\":1}}],[\"vimwindowonly<cr>\",{\"1\":{\"43\":1}}],[\"vim\",{\"1\":{\"43\":3},\"2\":{\"44\":1}}],[\"vi\",{\"1\":{\"8\":1,\"13\":1}}],[\"给本地的镜像打上tag\",{\"1\":{\"10\":1}}],[\"给常用\",{\"1\":{\"8\":1}}],[\"给容器起个名字叫\",{\"1\":{\"3\":1}}],[\"folder\",{\"1\":{\"47\":1}}],[\"forward<cr>\",{\"1\":{\"43\":1}}],[\"forwarded\",{\"1\":{\"38\":2}}],[\"form\",{\"1\":{\"29\":4}}],[\"formatelement<cr>\",{\"1\":{\"43\":1}}],[\"format=\",{\"1\":{\"20\":1}}],[\"format\",{\"1\":{\"7\":3,\"8\":1}}],[\"for\",{\"1\":{\"26\":1,\"38\":2,\"53\":4}}],[\"f>\",{\"1\":{\"43\":1}}],[\"fullchain\",{\"1\":{\"38\":1}}],[\"functions\",{\"1\":{\"8\":1}}],[\"flashdiko\",{\"1\":{\"38\":2}}],[\"flask服务\",{\"1\":{\"29\":1}}],[\"flask服务注册到nacos\",{\"0\":{\"28\":1}}],[\"feign\",{\"1\":{\"29\":3}}],[\"feignclient\",{\"1\":{\"29\":3}}],[\"f63cfead8502\",{\"1\":{\"19\":1}}],[\"from\",{\"1\":{\"17\":4,\"20\":3,\"22\":4,\"26\":2}}],[\"findinpath<cr>\",{\"1\":{\"43\":1}}],[\"findusages<cr>\",{\"1\":{\"43\":1}}],[\"findprevious\",{\"1\":{\"43\":1}}],[\"findnext<cr>\",{\"1\":{\"43\":2}}],[\"finished\",{\"1\":{\"26\":1}}],[\"filestructurepopup<cr>\",{\"1\":{\"43\":2}}],[\"filesystem\",{\"1\":{\"14\":1}}],[\"file\",{\"1\":{\"29\":6,\"43\":1,\"47\":1}}],[\"fi\",{\"1\":{\"8\":1}}],[\"f\",{\"1\":{\"7\":1,\"8\":1,\"14\":1,\"26\":2,\"49\":1}}],[\"强制删除容器\",{\"1\":{\"7\":1}}],[\"因为本电脑使用curl命令拉取脚本无效\",{\"1\":{\"45\":1}}],[\"因为\",{\"1\":{\"17\":1}}],[\"因为容器运行中\",{\"1\":{\"7\":1}}],[\"因此与\",{\"1\":{\"25\":1}}],[\"因此\",{\"1\":{\"11\":1,\"16\":1}}],[\"因此容器内端口一定是\",{\"1\":{\"3\":1}}],[\"因此它在运行时就有自己独立的环境\",{\"1\":{\"2\":1}}],[\"再次查看容器\",{\"1\":{\"7\":1}}],[\"再次启动nginx容器\",{\"1\":{\"7\":1}}],[\"apache\",{\"1\":{\"53\":10}}],[\"append\",{\"1\":{\"53\":2}}],[\"app\",{\"1\":{\"17\":5,\"26\":2,\"47\":1}}],[\"arraylist\",{\"1\":{\"53\":3}}],[\"arraylist<>\",{\"1\":{\"53\":1}}],[\"arg1\",{\"1\":{\"53\":3}}],[\"args\",{\"1\":{\"53\":1}}],[\"argtextobj\",{\"1\":{\"43\":1}}],[\"artifactid>\",{\"1\":{\"29\":1}}],[\"a>\",{\"1\":{\"43\":1}}],[\"acelineaction<cr>\",{\"1\":{\"43\":1}}],[\"acetargetaction<cr>\",{\"1\":{\"43\":1}}],[\"aceaction<cr>\",{\"1\":{\"43\":1}}],[\"acejump集成\",{\"1\":{\"43\":1}}],[\"acejump\",{\"1\":{\"42\":1}}],[\"activateprojecttoolwindow<cr>\",{\"1\":{\"43\":1}}],[\"activateversioncontroltoolwindow<cr>\",{\"1\":{\"43\":1}}],[\"activatetodotoolwindow<cr>\",{\"1\":{\"43\":1}}],[\"activateterminaltoolwindow<cr>\",{\"1\":{\"43\":1}}],[\"activateruntoolwindow<cr>\",{\"1\":{\"43\":1}}],[\"activatedebugtoolwindow<cr>\",{\"1\":{\"43\":1}}],[\"action\",{\"1\":{\"43\":126}}],[\"actionlist\",{\"1\":{\"43\":1}}],[\"acme\",{\"1\":{\"32\":2}}],[\"ali\",{\"1\":{\"47\":1}}],[\"aliyundrive\",{\"1\":{\"47\":2}}],[\"aliyuntoken\",{\"1\":{\"47\":1}}],[\"alist\",{\"0\":{\"47\":1},\"1\":{\"45\":1,\"46\":1,\"47\":1,\"48\":2},\"2\":{\"51\":1}}],[\"alist官网\",{\"1\":{\"45\":1}}],[\"alias给容器起别名\",{\"1\":{\"22\":1}}],[\"alias\",{\"1\":{\"8\":5,\"22\":1}}],[\"aliases\",{\"1\":{\"8\":1}}],[\"all\",{\"1\":{\"43\":1}}],[\"always\",{\"1\":{\"38\":2}}],[\"at\",{\"1\":{\"36\":2}}],[\"ajaxresult\",{\"1\":{\"29\":5}}],[\"aipredictfeignclient\",{\"1\":{\"29\":1}}],[\"ai\",{\"1\":{\"29\":2}}],[\"ai预测远程调用\",{\"1\":{\"29\":1}}],[\"author\",{\"1\":{\"29\":1,\"53\":1,\"54\":1}}],[\"anull\",{\"1\":{\"38\":1}}],[\"annotation\",{\"1\":{\"29\":4,\"53\":1,\"54\":4}}],[\"and\",{\"1\":{\"8\":1,\"43\":1}}],[\"asia\",{\"1\":{\"25\":2,\"26\":1}}],[\"addinnerinterceptor\",{\"1\":{\"54\":1}}],[\"addr\",{\"1\":{\"38\":1}}],[\"address\",{\"1\":{\"14\":1,\"29\":1,\"47\":1}}],[\"add\",{\"1\":{\"17\":1,\"38\":1,\"53\":9,\"54\":1}}],[\"admin\",{\"1\":{\"17\":1}}],[\"a=\",{\"1\":{\"9\":1}}],[\"a\",{\"1\":{\"7\":1,\"53\":1}}],[\"ago\",{\"1\":{\"7\":2,\"19\":3,\"26\":3}}],[\"停止并移除所有容器\",{\"1\":{\"26\":1}}],[\"停止容器\",{\"1\":{\"7\":1,\"26\":1}}],[\"停止指定容器\",{\"1\":{\"6\":1}}],[\"虚拟机地址\",{\"1\":{\"7\":1}}],[\"地址也可以实现容器互联了\",{\"1\":{\"22\":1}}],[\"地址\",{\"1\":{\"7\":1,\"20\":1,\"32\":1}}],[\"30\",{\"1\":{\"38\":1}}],[\"362mb\",{\"1\":{\"26\":1}}],[\"3546a17e6fb4ff4fa681c3\",{\"1\":{\"26\":1}}],[\"358b\",{\"1\":{\"26\":1}}],[\"32eebee16acd\",{\"1\":{\"26\":1}}],[\"32eebee16acde22550232f2eb80c69d2ce813ed099640e4cfed2193f71\",{\"1\":{\"26\":1}}],[\"327mb\",{\"1\":{\"19\":1}}],[\"3218b38490ce\",{\"1\":{\"7\":1,\"19\":1,\"26\":1}}],[\"3\",{\"0\":{\"8\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":2,\"19\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"35\":1,\"48\":1},\"1\":{\"13\":1,\"14\":3,\"17\":1,\"19\":1,\"20\":1,\"22\":4,\"24\":2,\"25\":2,\"26\":5,\"29\":1,\"47\":1}}],[\"33060\",{\"1\":{\"19\":1,\"26\":1}}],[\"3306\",{\"1\":{\"2\":2,\"3\":8,\"14\":2,\"19\":2,\"25\":6,\"26\":2}}],[\"拉取xiaoya镜像\",{\"0\":{\"46\":1}}],[\"拉取nginx镜像\",{\"1\":{\"7\":1}}],[\"拉取镜像\",{\"1\":{\"6\":1}}],[\"第一步中需要的\",{\"1\":{\"16\":1}}],[\"第一是\",{\"1\":{\"13\":1}}],[\"第13步\",{\"1\":{\"7\":1}}],[\"第12步\",{\"1\":{\"7\":1}}],[\"第11步\",{\"1\":{\"7\":1}}],[\"第10步\",{\"1\":{\"7\":1}}],[\"第1步\",{\"1\":{\"7\":1}}],[\"第9步\",{\"1\":{\"7\":1}}],[\"第8步\",{\"1\":{\"7\":1}}],[\"第7步\",{\"1\":{\"7\":1}}],[\"第6步\",{\"1\":{\"7\":1}}],[\"第5步\",{\"1\":{\"7\":1}}],[\"第4步\",{\"1\":{\"7\":1}}],[\"第3步\",{\"1\":{\"7\":1}}],[\"第2步\",{\"1\":{\"7\":1}}],[\"nn\",{\"1\":{\"45\":1,\"47\":1}}],[\"nnoremp\",{\"1\":{\"43\":1}}],[\"nnoremap\",{\"1\":{\"43\":164}}],[\"nmap\",{\"1\":{\"43\":23}}],[\"nas\",{\"2\":{\"51\":1}}],[\"nacos\",{\"1\":{\"29\":1},\"2\":{\"30\":1}}],[\"naming\",{\"1\":{\"26\":1}}],[\"name$1\",{\"1\":{\"38\":1}}],[\"names\",{\"1\":{\"7\":3,\"8\":1,\"19\":1}}],[\"name\",{\"1\":{\"2\":1,\"3\":2,\"7\":1,\"13\":5,\"14\":2,\"19\":1,\"22\":1,\"25\":9,\"26\":1,\"29\":1,\"34\":1,\"38\":5,\"48\":1,\"53\":6}}],[\"nu\",{\"1\":{\"43\":1}}],[\"numfuturepoints\",{\"1\":{\"29\":4}}],[\"null\",{\"1\":{\"13\":2,\"14\":4,\"22\":1,\"53\":2}}],[\"nextdouble\",{\"1\":{\"53\":1}}],[\"nexttab<cr>\",{\"1\":{\"43\":1}}],[\"nerdtree\",{\"1\":{\"43\":1}}],[\"net\",{\"1\":{\"25\":4}}],[\"network\",{\"1\":{\"20\":1,\"21\":10,\"22\":5,\"25\":2,\"26\":1}}],[\"networks\",{\"1\":{\"20\":1,\"25\":7}}],[\"networksettings\",{\"1\":{\"20\":1}}],[\"new\",{\"1\":{\"25\":2,\"53\":3,\"54\":4}}],[\"noremap\",{\"1\":{\"43\":11}}],[\"normal\",{\"1\":{\"43\":1}}],[\"nohlsearch<cr>\",{\"1\":{\"43\":1}}],[\"nohls<cr>\",{\"1\":{\"43\":1}}],[\"nohl<cr>\",{\"1\":{\"43\":1}}],[\"notion\",{\"1\":{\"45\":1}}],[\"notimeout\",{\"1\":{\"43\":1}}],[\"notes\",{\"1\":{\"14\":1}}],[\"none\",{\"1\":{\"22\":1}}],[\"nginx\",{\"1\":{\"7\":11,\"11\":2,\"12\":9,\"13\":6,\"19\":1,\"24\":1,\"25\":9,\"26\":6,\"38\":27}}],[\"演示一下\",{\"1\":{\"13\":2}}],[\"演示\",{\"0\":{\"7\":1}}],[\"unified\",{\"1\":{\"53\":2}}],[\"unicodeblock\",{\"1\":{\"53\":5}}],[\"unselectpreviousoccurrence<cr>\",{\"1\":{\"43\":2}}],[\"util\",{\"1\":{\"53\":1,\"54\":2}}],[\"utils\",{\"1\":{\"53\":1}}],[\"utf8mb3\",{\"1\":{\"14\":1}}],[\"utf8mb4\",{\"1\":{\"14\":6}}],[\"u\",{\"1\":{\"43\":1}}],[\"url\",{\"1\":{\"29\":5}}],[\"uroot\",{\"1\":{\"7\":1,\"14\":1}}],[\"uploader\",{\"1\":{\"29\":2}}],[\"up\",{\"1\":{\"19\":2,\"26\":5,\"43\":1}}],[\"update\",{\"1\":{\"6\":1}}],[\"use\",{\"1\":{\"14\":1}}],[\"username\",{\"1\":{\"10\":2}}],[\"user\",{\"1\":{\"8\":1,\"14\":2,\"17\":1,\"53\":1}}],[\"usr\",{\"1\":{\"12\":1,\"13\":2,\"14\":1,\"17\":4,\"25\":1,\"26\":1,\"38\":4}}],[\"ubuntu\",{\"1\":{\"2\":1,\"16\":2,\"17\":2}}],[\"补充\",{\"1\":{\"6\":1}}],[\"i++\",{\"1\":{\"53\":1}}],[\"ibatis\",{\"1\":{\"53\":10}}],[\"i>\",{\"1\":{\"43\":1}}],[\"i<cr><esc>k$\",{\"1\":{\"43\":1}}],[\"i<cr><esc>\",{\"1\":{\"43\":1}}],[\"ignorecase\",{\"1\":{\"43\":1}}],[\"implements\",{\"1\":{\"53\":1}}],[\"import\",{\"1\":{\"29\":8,\"53\":14,\"54\":8}}],[\"images\",{\"1\":{\"6\":2,\"7\":1,\"8\":1,\"19\":1,\"26\":1}}],[\"image\",{\"1\":{\"2\":1,\"7\":4,\"8\":1,\"10\":1,\"19\":2,\"25\":3,\"26\":4}}],[\"icmp\",{\"1\":{\"20\":3,\"22\":4}}],[\"ipaddress\",{\"1\":{\"20\":1}}],[\"ipaddress属性\",{\"1\":{\"20\":1}}],[\"ip\",{\"1\":{\"20\":5,\"22\":1,\"38\":1}}],[\"io\",{\"1\":{\"17\":1,\"26\":3}}],[\"isempty\",{\"1\":{\"53\":2}}],[\"ischinesecharacter\",{\"1\":{\"53\":2}}],[\"is\",{\"1\":{\"14\":1,\"36\":2}}],[\"inner\",{\"1\":{\"54\":1}}],[\"input\",{\"1\":{\"53\":8}}],[\"invocation\",{\"1\":{\"53\":6}}],[\"int\",{\"1\":{\"53\":4}}],[\"introduceparameter<cr>\",{\"1\":{\"43\":1}}],[\"introducevariable<cr>\",{\"1\":{\"43\":2}}],[\"integer\",{\"1\":{\"29\":4}}],[\"intercept\",{\"1\":{\"53\":1}}],[\"intercepts\",{\"1\":{\"53\":2}}],[\"interceptor\",{\"1\":{\"53\":2,\"54\":3}}],[\"interface\",{\"1\":{\"29\":1}}],[\"internal\",{\"1\":{\"26\":4}}],[\"inline<cr>\",{\"1\":{\"43\":2}}],[\"incremental\",{\"1\":{\"43\":1}}],[\"incsearch\",{\"1\":{\"43\":1}}],[\"inoremap\",{\"1\":{\"43\":13}}],[\"instanceof\",{\"1\":{\"53\":3}}],[\"install\",{\"1\":{\"17\":1}}],[\"inspect\",{\"1\":{\"6\":2,\"7\":1,\"13\":3,\"20\":2,\"21\":2}}],[\"in\",{\"1\":{\"14\":3}}],[\"information\",{\"1\":{\"14\":1}}],[\"initdb\",{\"1\":{\"14\":2,\"25\":2}}],[\"init\",{\"1\":{\"14\":4,\"25\":2,\"53\":1}}],[\"index\",{\"1\":{\"13\":2,\"38\":3}}],[\"if\",{\"1\":{\"8\":1,\"53\":10}}],[\"i\",{\"1\":{\"8\":3,\"53\":7}}],[\"itd\",{\"1\":{\"48\":1}}],[\"item\",{\"1\":{\"14\":1}}],[\"it\",{\"1\":{\"7\":2,\"13\":1,\"14\":1,\"20\":1,\"22\":1,\"34\":1}}],[\"ideographs\",{\"1\":{\"53\":3}}],[\"idea\",{\"2\":{\"44\":1}}],[\"ideajoinset\",{\"1\":{\"43\":1}}],[\"ideajoin\",{\"1\":{\"43\":1}}],[\"ideavimrc<cr>\",{\"1\":{\"43\":2}}],[\"ideavimrc\",{\"0\":{\"43\":1}}],[\"ideavim配置文件\",{\"0\":{\"43\":1}}],[\"ideavimextension\",{\"1\":{\"42\":1}}],[\"ideavim\",{\"1\":{\"42\":3,\"43\":1}}],[\"id>\",{\"1\":{\"10\":1}}],[\"id\",{\"1\":{\"7\":4,\"8\":1,\"14\":2,\"16\":1,\"19\":2,\"22\":1,\"26\":1,\"47\":1,\"53\":3,\"54\":2}}],[\"进入nginx容器\",{\"1\":{\"38\":1}}],[\"进入dd容器\",{\"1\":{\"22\":1}}],[\"进入镜像目录\",{\"1\":{\"18\":1}}],[\"进入mysql\",{\"1\":{\"14\":1}}],[\"进入root目录\",{\"1\":{\"14\":1,\"26\":1}}],[\"进入该目录\",{\"1\":{\"13\":1}}],[\"进入容器内部\",{\"1\":{\"13\":1}}],[\"进入容器\",{\"1\":{\"6\":1,\"7\":1,\"22\":1}}],[\"进程默认端口是\",{\"1\":{\"3\":1}}],[\"删除\",{\"1\":{\"43\":2}}],[\"删除行\",{\"1\":{\"43\":4}}],[\"删除不剪切\",{\"1\":{\"43\":2}}],[\"删除hmall镜像\",{\"1\":{\"26\":1}}],[\"删除旧容器\",{\"1\":{\"26\":1}}],[\"删除原来的mysql容器\",{\"1\":{\"14\":1}}],[\"删除并重新创建\",{\"1\":{\"14\":1}}],[\"删除指定网络\",{\"1\":{\"21\":1}}],[\"删除指定数据卷\",{\"1\":{\"13\":1}}],[\"删除指定容器\",{\"1\":{\"6\":1}}],[\"删除容器\",{\"1\":{\"7\":1}}],[\"删除本地镜像\",{\"1\":{\"6\":1}}],[\"推送镜像到\",{\"1\":{\"6\":1}}],[\"登录dockerhub\",{\"1\":{\"6\":1,\"10\":1}}],[\"sb\",{\"1\":{\"53\":4}}],[\"signature\",{\"1\":{\"53\":2}}],[\"site\",{\"1\":{\"45\":1}}],[\"size\",{\"1\":{\"7\":1,\"19\":1,\"26\":1}}],[\"smartsplit<cr>\",{\"1\":{\"43\":1}}],[\"smartcase\",{\"1\":{\"43\":1}}],[\"sliceforward<cr>\",{\"1\":{\"43\":1}}],[\"slicebackward<cr>\",{\"1\":{\"43\":1}}],[\"s>\",{\"1\":{\"43\":2}}],[\"sneak\",{\"1\":{\"42\":1,\"43\":1}}],[\"snf\",{\"1\":{\"17\":2,\"26\":1}}],[\"ssl\",{\"1\":{\"38\":10},\"2\":{\"39\":1,\"40\":1}}],[\"substring\",{\"1\":{\"53\":1}}],[\"surroundwithlivetemplate<cr>\",{\"1\":{\"43\":1}}],[\"surroundwith<cr>\",{\"1\":{\"43\":1}}],[\"surround\",{\"1\":{\"43\":1}}],[\"successfully\",{\"1\":{\"36\":1}}],[\"sufeng\",{\"1\":{\"17\":1}}],[\"spring\",{\"2\":{\"55\":1}}],[\"springframework\",{\"1\":{\"29\":9,\"54\":3}}],[\"sp<cr>\",{\"1\":{\"43\":1}}],[\"specific\",{\"1\":{\"8\":1}}],[\"s\",{\"1\":{\"26\":1,\"32\":1}}],[\"sys\",{\"1\":{\"14\":1}}],[\"system\",{\"1\":{\"14\":1}}],[\"systemctl\",{\"1\":{\"6\":1}}],[\"scrolloff=3\",{\"1\":{\"43\":1}}],[\"schema\",{\"1\":{\"14\":2}}],[\"scope\",{\"1\":{\"13\":1,\"22\":1}}],[\"selectnextoccurrence<cr>\",{\"1\":{\"43\":2}}],[\"selectalloccurrences<cr>\",{\"1\":{\"43\":2}}],[\"selectalloccurrences\",{\"1\":{\"43\":2}}],[\"session\",{\"1\":{\"38\":2,\"53\":2}}],[\"services\",{\"1\":{\"25\":2}}],[\"service\",{\"1\":{\"25\":2,\"26\":4,\"29\":1}}],[\"server\",{\"1\":{\"14\":1,\"29\":1,\"38\":5}}],[\"seq=3\",{\"1\":{\"20\":1}}],[\"seq=2\",{\"1\":{\"20\":1,\"22\":2}}],[\"seq=1\",{\"1\":{\"20\":1,\"22\":2}}],[\"seconds\",{\"1\":{\"19\":1,\"26\":6}}],[\"sec\",{\"1\":{\"14\":2}}],[\"set<string>\",{\"1\":{\"53\":2,\"54\":1}}],[\"sets\",{\"1\":{\"14\":1}}],[\"set\",{\"1\":{\"14\":9,\"38\":3,\"43\":36,\"54\":1}}],[\"searching\",{\"1\":{\"43\":1}}],[\"search\",{\"1\":{\"6\":2,\"43\":1}}],[\"shelvedchangestoolbar<cr>\",{\"1\":{\"43\":1}}],[\"shell\",{\"1\":{\"17\":1,\"32\":1}}],[\"showintentionactions<cr>\",{\"1\":{\"43\":2}}],[\"showusages<cr>\",{\"1\":{\"43\":1}}],[\"showbookmarks<cr>\",{\"1\":{\"43\":1}}],[\"shownavbar<cr>\",{\"1\":{\"43\":1}}],[\"showmode\",{\"1\":{\"43\":1}}],[\"showpopupmenu\",{\"1\":{\"43\":1}}],[\"showerrordescription\",{\"1\":{\"43\":1}}],[\"showvimactions\",{\"1\":{\"43\":1}}],[\"showcmd\",{\"1\":{\"43\":1}}],[\"show\",{\"1\":{\"14\":3,\"47\":1}}],[\"sha256\",{\"1\":{\"26\":2}}],[\"shared\",{\"1\":{\"38\":1}}],[\"share\",{\"1\":{\"12\":1,\"13\":2,\"14\":1,\"17\":2,\"25\":1,\"26\":1,\"38\":4}}],[\"shanghai\",{\"1\":{\"2\":1,\"3\":3,\"14\":1,\"17\":2,\"25\":3,\"26\":1}}],[\"sql\",{\"1\":{\"14\":4,\"54\":1}}],[\"source\",{\"1\":{\"8\":2,\"13\":2,\"43\":1}}],[\"saved\",{\"1\":{\"36\":2}}],[\"save\",{\"1\":{\"6\":2}}],[\"stringbuilder\",{\"1\":{\"53\":2}}],[\"string\",{\"1\":{\"29\":10,\"53\":6}}],[\"street\",{\"1\":{\"14\":1}}],[\"static\",{\"1\":{\"53\":3}}],[\"status\",{\"1\":{\"7\":3,\"8\":1,\"19\":1,\"26\":1}}],[\"starter\",{\"1\":{\"29\":1}}],[\"started\",{\"1\":{\"26\":3}}],[\"start\",{\"1\":{\"6\":2,\"7\":1,\"26\":1}}],[\"stop\",{\"1\":{\"6\":2,\"7\":1,\"26\":1}}],[\"命令说明\",{\"1\":{\"18\":1}}],[\"命令起别名\",{\"1\":{\"8\":1}}],[\"命令别名\",{\"0\":{\"8\":1}}],[\"命令\",{\"1\":{\"6\":1,\"13\":1,\"17\":1,\"21\":1}}],[\"命令介绍\",{\"0\":{\"6\":1}}],[\"命令解读\",{\"0\":{\"3\":1}}],[\"中有两个关键的目录\",{\"1\":{\"12\":1}}],[\"中的容器\",{\"1\":{\"6\":1}}],[\"中的常见命令\",{\"1\":{\"5\":1}}],[\"中寻找对应的镜像名称和版本\",{\"1\":{\"3\":1}}],[\"中寻找\",{\"1\":{\"3\":1}}],[\"为例\",{\"1\":{\"12\":1}}],[\"为例给大家演示上述命令\",{\"1\":{\"7\":1}}],[\"为将来部署项目打下基础\",{\"1\":{\"4\":1}}],[\"为了便于大家学习\",{\"1\":{\"1\":1}}],[\"接下来\",{\"1\":{\"4\":1,\"8\":1,\"13\":1,\"14\":1}}],[\"阅读相关配置即可\",{\"1\":{\"3\":1}}],[\"l>\",{\"1\":{\"43\":5}}],[\"length\",{\"1\":{\"53\":2}}],[\"letsencrypt\",{\"1\":{\"34\":4,\"38\":1}}],[\"let\",{\"1\":{\"32\":1,\"43\":2}}],[\"lei1024\",{\"1\":{\"29\":1}}],[\"leijiahao\",{\"1\":{\"29\":1,\"53\":1}}],[\"ln\",{\"1\":{\"17\":2,\"26\":1}}],[\"l\",{\"1\":{\"13\":1,\"14\":2,\"43\":2}}],[\"ll\",{\"1\":{\"13\":1}}],[\"lat\",{\"1\":{\"53\":1}}],[\"latest\",{\"1\":{\"3\":1,\"7\":2,\"10\":2,\"19\":2,\"26\":3}}],[\"lastindex\",{\"1\":{\"53\":4}}],[\"layers\",{\"1\":{\"26\":1}}],[\"layer\",{\"1\":{\"16\":1}}],[\"labels\",{\"1\":{\"13\":1}}],[\"ls\",{\"1\":{\"13\":3,\"14\":2,\"21\":1,\"22\":1}}],[\"live\",{\"1\":{\"38\":1}}],[\"list<string>\",{\"1\":{\"53\":1}}],[\"listen\",{\"1\":{\"38\":3}}],[\"list\",{\"1\":{\"29\":2}}],[\"like\",{\"1\":{\"14\":1}}],[\"library\",{\"1\":{\"26\":3}}],[\"lib\",{\"1\":{\"12\":3,\"13\":10,\"14\":4,\"25\":3,\"34\":2}}],[\"linux\",{\"1\":{\"2\":1,\"16\":4,\"17\":2}}],[\"lon\",{\"1\":{\"53\":1}}],[\"location\",{\"1\":{\"38\":2}}],[\"localhost\",{\"1\":{\"19\":1}}],[\"localtime\",{\"1\":{\"17\":2,\"26\":1}}],[\"local\",{\"1\":{\"13\":5,\"17\":2,\"22\":4}}],[\"load\",{\"1\":{\"6\":2,\"26\":4}}],[\"log\",{\"1\":{\"38\":1}}],[\"logistics\",{\"1\":{\"14\":1}}],[\"login\",{\"1\":{\"6\":2,\"10\":1}}],[\"logs\",{\"1\":{\"6\":2,\"26\":1,\"38\":1,\"49\":1}}],[\"也即使用该参数\",{\"1\":{\"9\":1}}],[\"也可以使用format过滤结果\",{\"1\":{\"20\":1}}],[\"也可以直接指定\",{\"1\":{\"18\":1}}],[\"也可以加格式化方式访问\",{\"1\":{\"7\":1}}],[\"也可以到\",{\"1\":{\"3\":1}}],[\"也就是我们的java项目\",{\"1\":{\"22\":1}}],[\"也就是\",{\"1\":{\"3\":1}}],[\"也不需要手动再次配置环境了\",{\"1\":{\"2\":1}}],[\"默认的别名是容器名本身\",{\"1\":{\"23\":1}}],[\"默认是root\",{\"1\":{\"17\":1}}],[\"默认是最新版本\",{\"1\":{\"3\":1}}],[\"默认情况下\",{\"1\":{\"6\":1}}],[\"默认密码\",{\"1\":{\"3\":1}}],[\"08\",{\"1\":{\"53\":1}}],[\"08+08\",{\"1\":{\"13\":1}}],[\"07\",{\"1\":{\"53\":1}}],[\"070\",{\"1\":{\"22\":1}}],[\"03\",{\"1\":{\"36\":1}}],[\"0s\",{\"1\":{\"26\":13}}],[\"0dc0f72a0fbb\",{\"1\":{\"22\":1}}],[\"044\",{\"1\":{\"22\":1}}],[\"04\",{\"1\":{\"17\":1}}],[\"0001\",{\"1\":{\"53\":2}}],[\"00\",{\"1\":{\"13\":1,\"14\":2}}],[\"054\",{\"1\":{\"22\":1}}],[\"056\",{\"1\":{\"22\":1}}],[\"058\",{\"1\":{\"20\":1}}],[\"059\",{\"1\":{\"20\":1}}],[\"053\",{\"1\":{\"20\":1}}],[\"05\",{\"1\":{\"13\":1}}],[\"0\",{\"1\":{\"3\":1,\"14\":6,\"16\":1,\"17\":2,\"18\":2,\"19\":12,\"20\":7,\"22\":6,\"26\":30,\"53\":6}}],[\"84\",{\"1\":{\"20\":1,\"22\":2}}],[\"8090\",{\"1\":{\"19\":3}}],[\"8080\",{\"1\":{\"17\":2,\"19\":2,\"25\":2,\"26\":3}}],[\"80\",{\"1\":{\"7\":2,\"13\":2,\"26\":1,\"34\":2,\"38\":8,\"48\":1}}],[\"8\",{\"1\":{\"3\":1,\"13\":1,\"14\":1,\"17\":1,\"25\":2,\"26\":2,\"43\":2}}],[\"txt\",{\"1\":{\"47\":2}}],[\"txt必要的\",{\"1\":{\"47\":3}}],[\"textobj\",{\"1\":{\"43\":1}}],[\"terminalopeninterminal<cr>\",{\"1\":{\"43\":1}}],[\"term\",{\"1\":{\"43\":1}}],[\"true\",{\"1\":{\"43\":1,\"54\":1}}],[\"transaction\",{\"1\":{\"54\":1}}],[\"transfer\",{\"1\":{\"47\":1}}],[\"transferring\",{\"1\":{\"26\":3}}],[\"train\",{\"1\":{\"29\":1}}],[\"throwable\",{\"1\":{\"53\":1}}],[\"throws\",{\"1\":{\"53\":1}}],[\"the\",{\"1\":{\"43\":1}}],[\"then\",{\"1\":{\"8\":1}}],[\"this\",{\"1\":{\"36\":1,\"43\":1,\"53\":1}}],[\"tz\",{\"1\":{\"25\":2}}],[\"tz=asia\",{\"1\":{\"2\":1,\"3\":3,\"14\":1,\"17\":2,\"25\":1}}],[\"timeoutlen\",{\"1\":{\"43\":1}}],[\"timeout\",{\"1\":{\"38\":1}}],[\"time=0\",{\"1\":{\"20\":3,\"22\":4}}],[\"timezone\",{\"1\":{\"17\":2}}],[\"ttl=64\",{\"1\":{\"20\":3,\"22\":4}}],[\"tcp\",{\"1\":{\"19\":5,\"26\":8}}],[\"tmp\",{\"1\":{\"17\":2}}],[\"todo\",{\"1\":{\"53\":1}}],[\"tostring\",{\"1\":{\"53\":1}}],[\"togglelinebreakpoint<cr>\",{\"1\":{\"43\":1}}],[\"togglefullscreen<cr>\",{\"1\":{\"43\":1}}],[\"toggledistractionfreemode<cr>\",{\"1\":{\"43\":1}}],[\"to\",{\"1\":{\"26\":2}}],[\"top\",{\"1\":{\"26\":1,\"38\":2}}],[\"tomcat\",{\"1\":{\"17\":1}}],[\"town\",{\"1\":{\"14\":1}}],[\"typehierarchy<cr>\",{\"1\":{\"43\":2}}],[\"type\",{\"1\":{\"13\":1,\"53\":1}}],[\"t\",{\"1\":{\"7\":12,\"8\":4,\"18\":3,\"19\":1}}],[\"targetmappers\",{\"1\":{\"53\":5,\"54\":3}}],[\"tar\",{\"1\":{\"17\":3}}],[\"tables\",{\"1\":{\"14\":2}}],[\"table\",{\"1\":{\"7\":3,\"8\":1}}],[\"tag\",{\"1\":{\"3\":3,\"7\":1,\"9\":1,\"10\":1,\"18\":1,\"19\":1,\"26\":1}}],[\"案例中\",{\"1\":{\"3\":1}}],[\"都是可选参数\",{\"1\":{\"26\":1}}],[\"都由容器内进程决定\",{\"1\":{\"3\":1}}],[\"都可以使用这条命令来安装\",{\"1\":{\"2\":1}}],[\"和\",{\"1\":{\"3\":1,\"6\":1,\"12\":3,\"18\":1,\"26\":1}}],[\"端口映射\",{\"1\":{\"25\":1}}],[\"端口\",{\"1\":{\"3\":1}}],[\"映射到容器内的\",{\"1\":{\"3\":1}}],[\"映射容器内到端口\",{\"1\":{\"3\":1}}],[\"格式会更加清爽\",{\"1\":{\"7\":1}}],[\"格式\",{\"1\":{\"3\":3,\"24\":1}}],[\"例如\",{\"1\":{\"3\":2,\"14\":1,\"16\":1,\"17\":1,\"20\":1}}],[\"当\",{\"1\":{\"18\":1}}],[\"当访问宿主机指定端口时\",{\"1\":{\"3\":1}}],[\"当我们执行命令后\",{\"1\":{\"2\":1}}],[\"外界不可访问\",{\"1\":{\"3\":1}}],[\"你可以叫别的\",{\"1\":{\"3\":1}}],[\"不含换行符\",{\"1\":{\"43\":10}}],[\"不用leader的话g没有任何意义\",{\"1\":{\"43\":1}}],[\"不安全的会先禁止\",{\"1\":{\"9\":1}}],[\"不能重复创建\",{\"1\":{\"6\":1}}],[\"不过我们执行的命令到底是什么意思呢\",{\"1\":{\"3\":1}}],[\"不同操作系统下其安装包\",{\"1\":{\"2\":1}}],[\"快速跳转行首与行尾\",{\"1\":{\"43\":2}}],[\"快速的安装了\",{\"1\":{\"3\":1}}],[\"快速入门\",{\"0\":{\"1\":1}}],[\"利用\",{\"1\":{\"3\":1}}],[\"21\",{\"1\":{\"36\":1}}],[\"2s\",{\"1\":{\"26\":1}}],[\"2b\",{\"1\":{\"26\":1}}],[\"27\",{\"1\":{\"19\":1}}],[\"23\",{\"1\":{\"14\":1}}],[\"20\",{\"1\":{\"14\":1}}],[\"2023\",{\"1\":{\"29\":1,\"53\":2}}],[\"2021\",{\"1\":{\"13\":2}}],[\"2024\",{\"1\":{\"13\":1,\"36\":1}}],[\"28\",{\"1\":{\"13\":2}}],[\"29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f\",{\"1\":{\"13\":6}}],[\"2\",{\"0\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":2,\"8\":1,\"9\":1,\"10\":1,\"11\":2,\"12\":2,\"13\":3,\"14\":2,\"15\":1,\"16\":1,\"17\":2,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":2,\"23\":1,\"26\":1,\"34\":1,\"43\":1,\"47\":1,\"54\":1},\"1\":{\"13\":1,\"14\":5,\"19\":3,\"20\":8,\"22\":9,\"26\":2,\"29\":1,\"53\":2}}],[\"基于docker环境下给nginx进行配置\",{\"0\":{\"38\":1}}],[\"基于官方基础镜像自己制作\",{\"1\":{\"2\":1}}],[\"基本语法如下\",{\"1\":{\"26\":1}}],[\"基本语法\",{\"0\":{\"25\":1}}],[\"基本上我们常用的各种软件都能在这个网站上找到\",{\"1\":{\"2\":1}}],[\"基础命令\",{\"0\":{\"26\":1}}],[\"基础镜像\",{\"1\":{\"17\":1}}],[\"基础\",{\"0\":{\"4\":1}}],[\"往往会采用私有镜像仓库\",{\"1\":{\"2\":1}}],[\"华为云会提供一些第三方仓库\",{\"1\":{\"2\":1}}],[\"阿里云\",{\"1\":{\"2\":1}}],[\"被称为\",{\"1\":{\"2\":1}}],[\"管理\",{\"1\":{\"2\":1}}],[\"像这种提供存储\",{\"1\":{\"2\":1}}],[\"全部都存放在这个网站\",{\"1\":{\"2\":1}}],[\"制作了自家软件的镜像\",{\"1\":{\"2\":1}}],[\"然后浏览器打开目录\",{\"1\":{\"47\":1}}],[\"然后查看网络\",{\"1\":{\"22\":1}}],[\"然后查看数据卷\",{\"1\":{\"13\":1}}],[\"然后通过命令进入dd容器\",{\"1\":{\"20\":1}}],[\"然后尝试运行该镜像\",{\"1\":{\"19\":1}}],[\"然后再搭建其它层即可\",{\"1\":{\"16\":1}}],[\"然后使用docker\",{\"1\":{\"9\":1,\"38\":1}}],[\"然后\",{\"1\":{\"8\":1,\"13\":1,\"18\":1}}],[\"然后各大软件公司又在基础镜像基础上\",{\"1\":{\"2\":1}}],[\"然后会自动运行\",{\"1\":{\"2\":1}}],[\"它允许用户通过一个单独的\",{\"1\":{\"24\":1}}],[\"它是去哪里搜索和下载镜像的呢\",{\"1\":{\"2\":1}}],[\"它不仅仅在\",{\"1\":{\"2\":1}}],[\"会发生变化\",{\"1\":{\"20\":1}}],[\"会发现里面有大量数据库数据\",{\"1\":{\"14\":1}}],[\"会被识别为当前目录下的mysql目录\",{\"1\":{\"14\":1}}],[\"会被识别为一个数据卷叫mysql\",{\"1\":{\"14\":1}}],[\"会被识别为数据卷名而非本地目录名\",{\"1\":{\"14\":1}}],[\"会根据这个名字搜索并下载镜像\",{\"1\":{\"3\":1}}],[\"会根据命令中的镜像名称自动搜索并下载镜像\",{\"1\":{\"2\":1}}],[\"会自动搜索并下载\",{\"1\":{\"2\":1}}],[\"容器的快速部署\",{\"1\":{\"24\":1}}],[\"容器的\",{\"1\":{\"20\":1}}],[\"容器的网络\",{\"1\":{\"20\":1}}],[\"容器的详细信息\",{\"1\":{\"20\":1}}],[\"容器与数据卷的挂载要在创建容器时配置\",{\"1\":{\"13\":1}}],[\"容器运行时调用\",{\"1\":{\"17\":1}}],[\"容器运行的\",{\"1\":{\"12\":1}}],[\"容器运行后\",{\"1\":{\"11\":1}}],[\"容器提供程序的运行环境\",{\"1\":{\"11\":1}}],[\"容器内时区\",{\"1\":{\"17\":1}}],[\"容器内文件\",{\"1\":{\"14\":1}}],[\"容器内目录\",{\"1\":{\"14\":1}}],[\"容器内的目录\",{\"1\":{\"13\":1}}],[\"容器内的\",{\"1\":{\"12\":1}}],[\"容器内的root才拥有真正的root权限\",{\"1\":{\"9\":1}}],[\"容器内部的\",{\"1\":{\"12\":1}}],[\"容器内程序的文件\",{\"1\":{\"11\":1}}],[\"容器内端口\",{\"1\":{\"3\":1}}],[\"容器内端口往往是由容器内的进程决定\",{\"1\":{\"3\":1}}],[\"容器id\",{\"1\":{\"6\":1,\"9\":1}}],[\"容器名称\",{\"1\":{\"25\":1}}],[\"容器名\",{\"1\":{\"6\":1}}],[\"容器和宿主机文件拷贝\",{\"1\":{\"6\":1}}],[\"容器是隔离环境\",{\"1\":{\"3\":1,\"11\":1}}],[\"容器\",{\"1\":{\"2\":1,\"14\":1,\"26\":1}}],[\"英文是\",{\"1\":{\"2\":2}}],[\"镜像都重复制作前两层镜像\",{\"1\":{\"17\":1}}],[\"镜像来构建一个\",{\"1\":{\"17\":1}}],[\"镜像中应用的启动命令\",{\"1\":{\"17\":1}}],[\"镜像中不仅包含了\",{\"1\":{\"2\":1}}],[\"镜像维护者的姓名和邮箱地址\",{\"1\":{\"17\":1}}],[\"镜像作为基础镜像\",{\"1\":{\"16\":1}}],[\"镜像时\",{\"1\":{\"16\":1}}],[\"镜像文件不是随意堆放的\",{\"1\":{\"16\":1}}],[\"镜像之所以能让我们快速跨操作系统部署应用而忽略其运行环境\",{\"1\":{\"16\":1}}],[\"镜像结构\",{\"0\":{\"16\":1}}],[\"镜像运行时的配置也不是随意的\",{\"1\":{\"3\":1}}],[\"镜像的名称不是随意的\",{\"1\":{\"3\":1}}],[\"镜像的来源有两种\",{\"1\":{\"2\":1}}],[\"镜像的服务器\",{\"1\":{\"2\":1}}],[\"镜像交流的社区\",{\"1\":{\"2\":1}}],[\"镜像\",{\"0\":{\"15\":1},\"1\":{\"2\":1,\"17\":1,\"18\":1}}],[\"说明数据库完成了初始化\",{\"1\":{\"14\":1}}],[\"说明\",{\"1\":{\"2\":1,\"6\":1,\"13\":1,\"17\":1,\"21\":1,\"25\":1,\"26\":1}}],[\"就太麻烦了\",{\"1\":{\"24\":1}}],[\"就有人提供了基础的系统加\",{\"1\":{\"17\":1}}],[\"就提供了自动打包镜像的功能\",{\"1\":{\"17\":1}}],[\"就无需重复制作\",{\"1\":{\"16\":1}}],[\"就可以部署项目了\",{\"1\":{\"26\":1}}],[\"就可以帮助我们实现多个相互关联的\",{\"1\":{\"24\":1}}],[\"就可以利用命令来构建镜像了\",{\"1\":{\"18\":1}}],[\"就可以省去\",{\"1\":{\"17\":1}}],[\"就可以直接拷贝使用这些层\",{\"1\":{\"16\":1}}],[\"就可以被\",{\"1\":{\"12\":1}}],[\"就可以跨系统运行\",{\"1\":{\"2\":1}}],[\"就是一个\",{\"1\":{\"32\":1}}],[\"就是当前\",{\"1\":{\"26\":1}}],[\"就是这样\",{\"1\":{\"25\":1}}],[\"就是构建一个\",{\"1\":{\"18\":1}}],[\"就是在定义某个应用的运行时参数\",{\"1\":{\"25\":1}}],[\"就是在操作容器内的\",{\"1\":{\"12\":1}}],[\"就是在访问容器内的端口了\",{\"1\":{\"3\":1}}],[\"就是因为镜像中包含了程序运行需要的系统函数库\",{\"1\":{\"16\":1}}],[\"就是因为\",{\"1\":{\"2\":1}}],[\"配置tvbox使用\",{\"1\":{\"47\":1}}],[\"配置环境变量\",{\"1\":{\"17\":2}}],[\"配置最终都是磁盘文件\",{\"1\":{\"16\":1}}],[\"配置启动脚本\",{\"1\":{\"16\":1}}],[\"配置文件目录\",{\"1\":{\"14\":1}}],[\"配置容器内进程运行时的一些参数\",{\"1\":{\"3\":1}}],[\"配置\",{\"1\":{\"2\":1,\"11\":1,\"16\":2}}],[\"配置不同的问题\",{\"1\":{\"2\":1}}],[\"还包含了其运行所需要的环境\",{\"1\":{\"2\":1}}],[\"这也是\",{\"1\":{\"32\":1}}],[\"这是您第1次访问<h5>\",{\"1\":{\"19\":1}}],[\"这样该网络内的其它容器可以用别名互相访问\",{\"1\":{\"22\":1}}],[\"这样逐层搭建\",{\"1\":{\"16\":1}}],[\"这样\",{\"1\":{\"16\":1}}],[\"这样以来\",{\"1\":{\"12\":1}}],[\"这就是匿名数据卷对应的目录\",{\"1\":{\"13\":1}}],[\"这就是匿名卷\",{\"1\":{\"13\":1}}],[\"这个是\",{\"1\":{\"14\":1}}],[\"这个目录\",{\"1\":{\"13\":2}}],[\"这个网站就成了\",{\"1\":{\"2\":1}}],[\"这里的就是匿名卷自动生成的名字\",{\"1\":{\"13\":1}}],[\"这里下载的不是安装包\",{\"1\":{\"2\":1}}],[\"这些在\",{\"1\":{\"3\":1}}],[\"这些镜像又是谁制作的呢\",{\"1\":{\"2\":1}}],[\"这些完全不用考虑\",{\"1\":{\"2\":1}}],[\"这套独立运行的隔离环境我们称为容器\",{\"1\":{\"2\":1}}],[\"这种安装方式你完全不用考虑运行的操作系统环境\",{\"1\":{\"2\":1}}],[\"运行相关\",{\"1\":{\"43\":1}}],[\"运行命令后按照提示操作\",{\"0\":{\"35\":1}}],[\"运行环境的镜像\",{\"1\":{\"16\":1}}],[\"运行环境\",{\"1\":{\"16\":2}}],[\"运行环境是都不相同的\",{\"1\":{\"2\":1}}],[\"运行\",{\"1\":{\"16\":1}}],[\"运行配置等文件\",{\"1\":{\"16\":1}}],[\"运行时如果不存在会创建目录\",{\"1\":{\"14\":1}}],[\"运行时会自动创建这个数据卷\",{\"1\":{\"14\":1}}],[\"运行时产生的容器都在容器内部\",{\"1\":{\"11\":1}}],[\"运行效果如图\",{\"1\":{\"2\":1}}],[\"要基于\",{\"1\":{\"17\":1}}],[\"要想自己构建镜像\",{\"1\":{\"16\":1}}],[\"要想让\",{\"1\":{\"1\":1}}],[\"要创建的目标镜像名\",{\"1\":{\"9\":1}}],[\"要参考镜像的帮助文档\",{\"1\":{\"3\":1}}],[\"要知道\",{\"1\":{\"2\":1}}],[\"下的\",{\"1\":{\"12\":1}}],[\"下载\",{\"1\":{\"2\":1}}],[\"下载速度较慢\",{\"1\":{\"2\":1}}],[\"下载的权利\",{\"1\":{\"2\":1}}],[\"下\",{\"1\":{\"2\":1}}],[\"win10\",{\"2\":{\"51\":1}}],[\"windows\",{\"1\":{\"2\":1}}],[\"w>\",{\"1\":{\"43\":1}}],[\"w>l\",{\"1\":{\"43\":1}}],[\"w>k\",{\"1\":{\"43\":1}}],[\"w>j\",{\"1\":{\"43\":1}}],[\"w>h\",{\"1\":{\"43\":1}}],[\"whichkey\",{\"1\":{\"43\":1}}],[\"which\",{\"1\":{\"42\":1,\"43\":2}}],[\"www\",{\"1\":{\"38\":2,\"47\":1}}],[\"web\",{\"1\":{\"29\":5}}],[\"writing\",{\"1\":{\"26\":1}}],[\"world\",{\"1\":{\"17\":1}}],[\"workdir\",{\"1\":{\"17\":2}}],[\"wsl\",{\"1\":{\"2\":1}}],[\"的集合\",{\"1\":{\"26\":1,\"53\":1}}],[\"的命令如下\",{\"1\":{\"25\":1}}],[\"的网络功能来解决这个问题\",{\"1\":{\"20\":1}}],[\"的文件拷贝进镜像\",{\"1\":{\"17\":1}}],[\"的默认编码\",{\"1\":{\"14\":1}}],[\"的匿名数据卷\",{\"1\":{\"13\":1}}],[\"的配置了\",{\"1\":{\"17\":1}}],[\"的配置\",{\"1\":{\"12\":1}}],[\"的情况下\",{\"1\":{\"3\":1}}],[\"的\",{\"1\":{\"2\":1,\"13\":2,\"14\":1,\"17\":1,\"54\":1}}],[\"的虚拟机中安装\",{\"1\":{\"1\":1}}],[\"甚至是装了\",{\"1\":{\"2\":1}}],[\"m>\",{\"1\":{\"43\":6}}],[\"multiple\",{\"1\":{\"43\":1}}],[\"multipartfile\",{\"1\":{\"29\":4}}],[\"multipart\",{\"1\":{\"29\":5}}],[\"md5hex\",{\"1\":{\"53\":1}}],[\"md5加密\",{\"1\":{\"53\":1}}],[\"md5\",{\"1\":{\"38\":1}}],[\"method\",{\"1\":{\"43\":1,\"53\":1}}],[\"methoddown<cr>\",{\"1\":{\"43\":1}}],[\"methodup<cr>\",{\"1\":{\"43\":1}}],[\"metadata\",{\"1\":{\"26\":1}}],[\"mediatype\",{\"1\":{\"29\":5}}],[\"ms\",{\"1\":{\"20\":3,\"22\":4}}],[\"minutes\",{\"1\":{\"19\":1}}],[\"masklonlat\",{\"1\":{\"53\":2}}],[\"maskchinesestring\",{\"1\":{\"53\":2}}],[\"maven\",{\"1\":{\"43\":1}}],[\"matchit\",{\"1\":{\"43\":1}}],[\"map<string\",{\"1\":{\"53\":2}}],[\"mapper\",{\"1\":{\"53\":1,\"54\":3}}],[\"mappedstatement\",{\"1\":{\"53\":4}}],[\"mapping\",{\"1\":{\"53\":2}}],[\"map\",{\"1\":{\"43\":2,\"53\":1}}],[\"mapleader=\",{\"1\":{\"43\":1}}],[\"maintainer\",{\"1\":{\"17\":2}}],[\"macos\",{\"1\":{\"2\":1}}],[\"move<cr>\",{\"1\":{\"43\":1}}],[\"movestatementup<cr>\",{\"1\":{\"43\":1}}],[\"movestatementup<cr>i\",{\"1\":{\"43\":1}}],[\"movestatementdown<cr>\",{\"1\":{\"43\":1}}],[\"movestatementdown<cr>i\",{\"1\":{\"43\":1}}],[\"move\",{\"1\":{\"43\":1}}],[\"motion\",{\"1\":{\"43\":1}}],[\"modelpath\",{\"1\":{\"29\":4}}],[\"modelname\",{\"1\":{\"29\":4}}],[\"modellist\",{\"1\":{\"29\":1}}],[\"model\",{\"1\":{\"29\":1}}],[\"mobile\",{\"1\":{\"14\":1}}],[\"mounts\",{\"1\":{\"13\":2}}],[\"mounts部分\",{\"1\":{\"13\":1}}],[\"mountpoint\",{\"1\":{\"13\":1}}],[\"months\",{\"1\":{\"7\":2,\"19\":2}}],[\"mybatis\",{\"2\":{\"55\":1}}],[\"mybatis支持\",{\"1\":{\"54\":1}}],[\"mybatisplusconfig\",{\"1\":{\"54\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"54\":5}}],[\"mybatisplus\",{\"1\":{\"54\":3}}],[\"my\",{\"1\":{\"10\":2,\"47\":1}}],[\"mysql容器\",{\"1\":{\"22\":1}}],[\"mysql\",{\"0\":{\"2\":1},\"1\":{\"2\":13,\"3\":12,\"7\":3,\"11\":2,\"13\":6,\"14\":29,\"19\":3,\"20\":5,\"22\":7,\"24\":1,\"25\":27,\"26\":7}}],[\"m=\",{\"1\":{\"9\":1}}],[\"mv\",{\"1\":{\"8\":1,\"17\":1}}],[\"mv=\",{\"1\":{\"8\":1}}],[\"系统环境\",{\"1\":{\"17\":1}}],[\"系统运行环境\",{\"1\":{\"16\":1}}],[\"系统级函数库\",{\"1\":{\"2\":1}}],[\"系统\",{\"1\":{\"2\":2}}],[\"系统是这样\",{\"1\":{\"2\":1}}],[\"在阿里云盘中的资源库中创建一个文件夹\",{\"1\":{\"47\":1}}],[\"在win10上使用dockerdesktop部署xiaoyaalist\",{\"0\":{\"45\":1}}],[\"在状态栏显示正在输入的命令\",{\"1\":{\"43\":1}}],[\"在jetbrains全家桶中使用ideavim\",{\"0\":{\"41\":1}}],[\"在过期之后我们还需要对其进行更新\",{\"1\":{\"38\":1}}],[\"在外部编写好default\",{\"1\":{\"38\":1}}],[\"在指定的运行中容器中执行命令\",{\"1\":{\"26\":1}}],[\"在同一个自定义网络中的容器\",{\"1\":{\"23\":1}}],[\"在自定义网络中\",{\"1\":{\"23\":1}}],[\"在加入网络时可以通过\",{\"1\":{\"22\":1}}],[\"在容器内\",{\"1\":{\"20\":1}}],[\"在课前资料中\",{\"1\":{\"18\":1}}],[\"在课前资料中已经准备好了\",{\"1\":{\"14\":1}}],[\"在很多情况下\",{\"1\":{\"14\":1}}],[\"在上图中\",{\"1\":{\"12\":1}}],[\"在selinux里面挂载目录被禁止掉了\",{\"1\":{\"9\":1}}],[\"在命令中加入参数\",{\"1\":{\"9\":1}}],[\"在命令行输入下面的命令\",{\"1\":{\"2\":1}}],[\"在未指定\",{\"1\":{\"3\":1}}],[\"在\",{\"1\":{\"2\":1}}],[\"而稍微复杂的项目\",{\"1\":{\"24\":1}}],[\"而在部署时很可能\",{\"1\":{\"20\":1}}],[\"而这种记录镜像结构的文件就称为\",{\"1\":{\"17\":1}}],[\"而不用重复制作\",{\"1\":{\"16\":1}}],[\"而\",{\"1\":{\"14\":1,\"20\":1,\"24\":1}}],[\"而数据卷\",{\"1\":{\"12\":1}}],[\"而是按照操作的步骤分层叠加而成\",{\"1\":{\"16\":1}}],[\"而是要到\",{\"1\":{\"3\":1}}],[\"而是镜像\",{\"1\":{\"2\":1}}],[\"而宿主机端口则可以任意指定\",{\"1\":{\"3\":1}}],[\"而企业内部的机密项目\",{\"1\":{\"2\":1}}],[\"而且创建容器的过程中\",{\"1\":{\"13\":1}}],[\"而且\",{\"1\":{\"2\":1}}],[\"而使用\",{\"1\":{\"2\":2}}],[\"是逻辑概念\",{\"1\":{\"26\":1}}],[\"是给镜像使用者看的\",{\"1\":{\"17\":1}}],[\"是不是简单多了\",{\"1\":{\"17\":1}}],[\"是不是很麻烦\",{\"1\":{\"17\":1}}],[\"是不是非常方便\",{\"1\":{\"2\":1}}],[\"是不能设置数据卷的\",{\"1\":{\"13\":1}}],[\"是容器内目录与宿主机\",{\"1\":{\"12\":1}}],[\"是一个虚拟目录\",{\"1\":{\"12\":1}}],[\"是版本号\",{\"1\":{\"3\":1}}],[\"是设置\",{\"1\":{\"3\":1}}],[\"是设置时区\",{\"1\":{\"3\":1}}],[\"是去自动搜索并下载了\",{\"1\":{\"2\":1}}],[\"做的第一件事情\",{\"1\":{\"2\":1}}],[\"random\",{\"1\":{\"53\":4}}],[\"range\",{\"1\":{\"20\":1}}],[\"r>\",{\"1\":{\"43\":1}}],[\"rnu\",{\"1\":{\"43\":1}}],[\"rf\",{\"1\":{\"26\":1}}],[\"rowbounds\",{\"1\":{\"53\":2}}],[\"rows\",{\"1\":{\"14\":2}}],[\"root\",{\"1\":{\"2\":1,\"3\":2,\"8\":3,\"13\":4,\"14\":10,\"18\":2,\"19\":1,\"25\":3,\"26\":4,\"38\":2}}],[\"r\",{\"1\":{\"13\":4,\"43\":1}}],[\"rw\",{\"1\":{\"13\":2}}],[\"rm=\",{\"1\":{\"8\":1}}],[\"rm\",{\"1\":{\"6\":1,\"7\":2,\"8\":1,\"13\":1,\"14\":1,\"21\":1,\"26\":2,\"34\":1}}],[\"rmi\",{\"1\":{\"6\":2,\"26\":1}}],[\"reimport<cr>\",{\"1\":{\"43\":1}}],[\"renameelement<cr>\",{\"1\":{\"43\":2}}],[\"rename\",{\"1\":{\"43\":1}}],[\"renew\",{\"1\":{\"38\":2}}],[\"recentprojectlistgroup<cr>\",{\"1\":{\"43\":1}}],[\"recentfiles<cr>\",{\"1\":{\"43\":1}}],[\"recentchangedfiles<cr>\",{\"1\":{\"43\":1}}],[\"received\",{\"1\":{\"36\":1}}],[\"rerunfailedtests<cr>\",{\"1\":{\"43\":1}}],[\"reload<cr>\",{\"1\":{\"43\":1}}],[\"reloadvimrc\",{\"1\":{\"43\":1}}],[\"relativenumber\",{\"1\":{\"43\":2}}],[\"refactor\",{\"1\":{\"43\":1}}],[\"refactorings\",{\"1\":{\"43\":2}}],[\"reformatcode<cr>\",{\"1\":{\"43\":3}}],[\"reference\",{\"1\":{\"17\":1,\"20\":1}}],[\"replacewithregister\",{\"1\":{\"43\":1}}],[\"repo\",{\"1\":{\"10\":2}}],[\"repository\",{\"1\":{\"3\":2,\"7\":1,\"18\":1,\"19\":1,\"26\":1}}],[\"real\",{\"1\":{\"38\":1}}],[\"rewrite\",{\"1\":{\"38\":1}}],[\"return\",{\"1\":{\"29\":2,\"53\":7,\"54\":2}}],[\"requestpart\",{\"1\":{\"29\":18}}],[\"requestbody\",{\"1\":{\"29\":2}}],[\"redis\",{\"1\":{\"20\":1}}],[\"resource\",{\"1\":{\"47\":1}}],[\"resultmap\",{\"1\":{\"53\":8}}],[\"resulthandler\",{\"1\":{\"53\":2}}],[\"resultpath\",{\"1\":{\"29\":4}}],[\"resultlist\",{\"1\":{\"29\":1,\"53\":2}}],[\"result\",{\"1\":{\"29\":1,\"43\":1,\"53\":4}}],[\"results\",{\"1\":{\"14\":1}}],[\"responseentity<byte\",{\"1\":{\"29\":1}}],[\"responseentity\",{\"1\":{\"29\":1}}],[\"restart=always\",{\"1\":{\"6\":1,\"38\":1,\"48\":1}}],[\"restart\",{\"1\":{\"6\":2,\"26\":1,\"38\":3}}],[\"run<cr>\",{\"1\":{\"43\":1}}],[\"runclass<cr>\",{\"1\":{\"43\":2}}],[\"runanything<cr>\",{\"1\":{\"43\":1}}],[\"running\",{\"1\":{\"26\":1}}],[\"run\",{\"1\":{\"2\":1,\"3\":2,\"6\":2,\"7\":1,\"13\":1,\"14\":1,\"17\":5,\"19\":1,\"25\":4,\"26\":1,\"34\":1,\"38\":3,\"48\":1}}],[\"else\",{\"1\":{\"53\":3}}],[\"equals\",{\"1\":{\"53\":1}}],[\"editorcontextinfo<cr>\",{\"1\":{\"43\":1}}],[\"editorcompletestatement<cr>\",{\"1\":{\"43\":1}}],[\"editorunselectword\",{\"1\":{\"43\":1}}],[\"editorselectword\",{\"1\":{\"43\":1}}],[\"e>\",{\"1\":{\"43\":1}}],[\"easymotion\",{\"1\":{\"42\":1,\"43\":3}}],[\"error\",{\"1\":{\"38\":1}}],[\"echo\",{\"1\":{\"17\":3,\"26\":1}}],[\"extension\",{\"1\":{\"53\":1,\"54\":2}}],[\"extractclass<cr>\",{\"1\":{\"43\":1}}],[\"extractmethod<cr>\",{\"1\":{\"43\":4}}],[\"extract\",{\"1\":{\"43\":1}}],[\"exchange\",{\"1\":{\"43\":1}}],[\"expires\",{\"1\":{\"36\":1}}],[\"exporting\",{\"1\":{\"26\":2}}],[\"expose\",{\"1\":{\"17\":3}}],[\"executor\",{\"1\":{\"53\":3}}],[\"exec\",{\"1\":{\"6\":2,\"7\":2,\"13\":1,\"14\":1,\"20\":1,\"22\":1,\"26\":1}}],[\"enodeb\",{\"1\":{\"53\":1}}],[\"enb\",{\"1\":{\"53\":2}}],[\"entire\",{\"1\":{\"43\":1}}],[\"entrypoint\",{\"1\":{\"14\":2,\"17\":4,\"25\":2,\"26\":2}}],[\"encoding=prc\",{\"1\":{\"43\":1}}],[\"encoding=utf\",{\"1\":{\"43\":1}}],[\"encodings=utf\",{\"1\":{\"43\":1}}],[\"encryptionlist\",{\"1\":{\"53\":13}}],[\"encrypt\",{\"1\":{\"32\":1}}],[\"endswith\",{\"1\":{\"53\":3}}],[\"end\",{\"1\":{\"20\":1}}],[\"environment\",{\"1\":{\"25\":3}}],[\"env\",{\"1\":{\"17\":7}}],[\"engine\",{\"1\":{\"17\":1,\"20\":1}}],[\"enabletransactionmanagement\",{\"1\":{\"54\":2}}],[\"enable\",{\"1\":{\"6\":1}}],[\"etc\",{\"1\":{\"8\":2,\"14\":2,\"17\":4,\"25\":4,\"26\":1,\"34\":2,\"38\":4}}],[\"e\",{\"1\":{\"2\":2,\"3\":4,\"14\":2,\"25\":3,\"43\":1}}],[\"plugin\",{\"1\":{\"53\":4}}],[\"plugins\",{\"1\":{\"43\":1,\"54\":2}}],[\"plug\",{\"1\":{\"43\":1}}],[\"pem\",{\"1\":{\"38\":2}}],[\"permanent\",{\"1\":{\"38\":1}}],[\"performance\",{\"1\":{\"14\":1}}],[\"perission\",{\"1\":{\"9\":1}}],[\"python代码\",{\"1\":{\"29\":1}}],[\"python\",{\"1\":{\"29\":2},\"2\":{\"30\":1}}],[\"ping\",{\"1\":{\"20\":2,\"22\":4}}],[\"paginationinnerinterceptor\",{\"1\":{\"54\":2}}],[\"page\",{\"1\":{\"38\":1}}],[\"parsedouble\",{\"1\":{\"53\":1}}],[\"paragraph\",{\"1\":{\"43\":1}}],[\"package\",{\"1\":{\"53\":1,\"54\":1}}],[\"password\",{\"1\":{\"25\":2}}],[\"password=123\",{\"1\":{\"2\":1,\"3\":2,\"14\":1,\"25\":1}}],[\"path=$path\",{\"1\":{\"17\":1}}],[\"pay\",{\"1\":{\"14\":1}}],[\"p123\",{\"1\":{\"14\":1}}],[\"posts\",{\"0\":{\"56\":1}}],[\"postgre\",{\"1\":{\"54\":1}}],[\"postconstruct\",{\"1\":{\"53\":2}}],[\"postmapping\",{\"1\":{\"29\":5}}],[\"polkitd\",{\"1\":{\"14\":1}}],[\"ports\",{\"1\":{\"7\":3,\"8\":1,\"19\":1,\"25\":5,\"26\":1}}],[\"previoustab<cr>\",{\"1\":{\"43\":1}}],[\"prefer\",{\"1\":{\"38\":1}}],[\"predictionreq\",{\"1\":{\"29\":2}}],[\"predict\",{\"1\":{\"29\":6}}],[\"proceed\",{\"1\":{\"53\":2}}],[\"proxytargetclass\",{\"1\":{\"54\":1}}],[\"proxy\",{\"1\":{\"38\":3}}],[\"projectid\",{\"1\":{\"29\":4}}],[\"project\",{\"1\":{\"26\":2,\"53\":2}}],[\"province\",{\"1\":{\"14\":1}}],[\"private\",{\"1\":{\"53\":2}}],[\"privkey\",{\"1\":{\"38\":1}}],[\"privileged=true\",{\"1\":{\"9\":2}}],[\"println\",{\"1\":{\"20\":1}}],[\"prune\",{\"1\":{\"13\":2,\"21\":1}}],[\"ps\",{\"1\":{\"6\":2,\"7\":4,\"8\":1,\"26\":3}}],[\"put\",{\"1\":{\"53\":3}}],[\"public\",{\"1\":{\"29\":1,\"53\":7,\"54\":3}}],[\"push\",{\"1\":{\"6\":2,\"10\":1}}],[\"pull<cr>\",{\"1\":{\"43\":1}}],[\"pull\",{\"1\":{\"6\":2,\"7\":1,\"46\":1}}],[\"p\",{\"1\":{\"2\":1,\"3\":3,\"7\":2,\"13\":1,\"14\":1,\"19\":1,\"25\":2,\"26\":1,\"34\":1,\"38\":4,\"43\":3,\"48\":1}}],[\"dar\",{\"1\":{\"43\":1}}],[\"da<\",{\"1\":{\"43\":2}}],[\"da\",{\"1\":{\"43\":10}}],[\"daw\",{\"1\":{\"43\":2}}],[\"date\",{\"1\":{\"29\":1,\"53\":1}}],[\"datamasinterceptor\",{\"1\":{\"53\":2,\"54\":3}}],[\"datasource\",{\"1\":{\"53\":1,\"54\":1}}],[\"datasavepath\",{\"1\":{\"29\":4}}],[\"dataindex\",{\"1\":{\"29\":4}}],[\"databases\",{\"1\":{\"14\":1}}],[\"database\",{\"1\":{\"14\":2}}],[\"data目录已经自动创建好了\",{\"1\":{\"14\":1}}],[\"data目录\",{\"1\":{\"13\":1}}],[\"data\",{\"1\":{\"12\":4,\"13\":7,\"14\":4,\"20\":1,\"22\":2,\"25\":3,\"26\":1,\"29\":4,\"48\":1}}],[\"dw\",{\"1\":{\"43\":1}}],[\"dp\",{\"1\":{\"43\":3}}],[\"dps\",{\"1\":{\"19\":1}}],[\"dps=\",{\"1\":{\"8\":1}}],[\"d$\",{\"1\":{\"43\":1}}],[\"double\",{\"1\":{\"53\":4}}],[\"do\",{\"1\":{\"43\":1}}],[\"domain\",{\"1\":{\"32\":1}}],[\"down\",{\"1\":{\"26\":1,\"43\":1}}],[\"docs\",{\"1\":{\"6\":1,\"13\":3,\"17\":1,\"20\":1,\"21\":4}}],[\"docker安装nginx\",{\"1\":{\"38\":1}}],[\"dockerignore\",{\"1\":{\"26\":1}}],[\"dockercompose\",{\"0\":{\"24\":1}}],[\"dockerfile\",{\"0\":{\"17\":1,\"19\":1},\"1\":{\"17\":2,\"18\":5,\"25\":2,\"26\":2}}],[\"docker挂载主机目录\",{\"1\":{\"9\":1}}],[\"docker容器开机自启\",{\"1\":{\"6\":1}}],[\"docker开机自启\",{\"1\":{\"6\":1}}],[\"dockerhub\",{\"1\":{\"2\":1,\"3\":1,\"10\":2,\"13\":1}}],[\"dockerregistry\",{\"1\":{\"2\":2,\"3\":2,\"6\":1}}],[\"docker\",{\"0\":{\"4\":1},\"1\":{\"1\":3,\"2\":11,\"3\":4,\"4\":2,\"5\":1,\"6\":40,\"7\":14,\"8\":3,\"9\":2,\"10\":3,\"12\":3,\"13\":22,\"14\":5,\"16\":2,\"17\":5,\"18\":6,\"19\":7,\"20\":5,\"21\":14,\"22\":5,\"24\":3,\"25\":11,\"26\":13,\"34\":1,\"38\":5,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1},\"2\":{\"27\":1,\"51\":1}}],[\"docker笔记\",{\"0\":{\"0\":1}}],[\"dbtype\",{\"1\":{\"54\":2}}],[\"db容器\",{\"1\":{\"22\":1}}],[\"db\",{\"1\":{\"22\":3}}],[\"ddo<cr>i\",{\"1\":{\"43\":1}}],[\"dd映射两个命令\",{\"1\":{\"43\":1}}],[\"dd\",{\"1\":{\"19\":2,\"20\":1,\"22\":2,\"43\":5}}],[\"d6ab0b9e64b9\",{\"1\":{\"19\":1}}],[\"drive\",{\"1\":{\"47\":1}}],[\"drivers\",{\"1\":{\"47\":1}}],[\"driver\",{\"1\":{\"13\":3,\"22\":1}}],[\"drwxr\",{\"1\":{\"14\":3}}],[\"debugclass<cr>\",{\"1\":{\"43\":1}}],[\"debug<cr>\",{\"1\":{\"43\":1}}],[\"dependency>\",{\"1\":{\"29\":1}}],[\"depends\",{\"1\":{\"25\":2}}],[\"demo\",{\"1\":{\"17\":2,\"18\":7,\"19\":5}}],[\"definition\",{\"1\":{\"26\":1}}],[\"definitions\",{\"1\":{\"8\":1}}],[\"default\",{\"1\":{\"14\":1,\"38\":1}}],[\"detail\",{\"1\":{\"14\":1}}],[\"destination\",{\"1\":{\"13\":2}}],[\"denied\",{\"1\":{\"9\":1}}],[\"digestutil\",{\"1\":{\"53\":2}}],[\"digest\",{\"1\":{\"53\":1}}],[\"di<\",{\"1\":{\"43\":2}}],[\"di\",{\"1\":{\"43\":10}}],[\"diw\",{\"1\":{\"43\":2}}],[\"disconnect\",{\"1\":{\"21\":2}}],[\"dis=\",{\"1\":{\"8\":1}}],[\"dir=\",{\"1\":{\"17\":1}}],[\"dir\",{\"1\":{\"14\":1,\"17\":3,\"43\":1}}],[\"directory\",{\"1\":{\"9\":1}}],[\"d\",{\"1\":{\"2\":1,\"3\":3,\"7\":1,\"13\":1,\"14\":5,\"19\":1,\"25\":6,\"26\":2,\"38\":4,\"43\":15,\"48\":1}}],[\"cgi\",{\"1\":{\"53\":1}}],[\"cjk\",{\"1\":{\"53\":3}}],[\"crypto\",{\"1\":{\"53\":1}}],[\"create\",{\"1\":{\"13\":2,\"21\":2,\"22\":1}}],[\"createdat\",{\"1\":{\"13\":1}}],[\"created\",{\"1\":{\"7\":1,\"19\":1,\"26\":2}}],[\"cmcc\",{\"1\":{\"53\":2,\"54\":1}}],[\"cmd\",{\"1\":{\"17\":2}}],[\"cn\",{\"1\":{\"53\":3,\"54\":1}}],[\"cnf\",{\"1\":{\"14\":1}}],[\"cc\",{\"1\":{\"43\":6}}],[\"choosedebugconfiguration<cr>\",{\"1\":{\"43\":1}}],[\"chooserunconfiguration<cr>\",{\"1\":{\"43\":2}}],[\"charat\",{\"1\":{\"53\":1}}],[\"character\",{\"1\":{\"14\":8,\"53\":5}}],[\"charsets\",{\"1\":{\"14\":1}}],[\"char\",{\"1\":{\"14\":1,\"53\":2}}],[\"c命令\",{\"1\":{\"43\":1}}],[\"c\",{\"1\":{\"43\":16,\"53\":4}}],[\"cursors\",{\"1\":{\"43\":1}}],[\"cursorline\",{\"1\":{\"43\":1}}],[\"curl\",{\"1\":{\"19\":1}}],[\"cir\",{\"1\":{\"43\":1}}],[\"ci<\",{\"1\":{\"43\":2}}],[\"ci\",{\"1\":{\"43\":10,\"45\":1,\"47\":1}}],[\"ciw\",{\"1\":{\"43\":2}}],[\"ciphers\",{\"1\":{\"38\":2}}],[\"city\",{\"1\":{\"14\":1}}],[\"cell\",{\"1\":{\"53\":2}}],[\"certificate\",{\"1\":{\"36\":3,\"38\":2}}],[\"certonly\",{\"1\":{\"34\":1,\"38\":1}}],[\"certbot\",{\"0\":{\"32\":1},\"1\":{\"32\":3,\"34\":3}}],[\"centos7安全模块比之前系统版本加强\",{\"1\":{\"9\":1}}],[\"centos\",{\"1\":{\"1\":1,\"2\":1,\"16\":2,\"17\":1}}],[\"class\",{\"1\":{\"53\":8,\"54\":1}}],[\"close\",{\"1\":{\"43\":1}}],[\"closeeditor<cr>\",{\"1\":{\"43\":1}}],[\"closealleditorsbutactive<cr>\",{\"1\":{\"43\":1}}],[\"closealleditors<cr>\",{\"1\":{\"43\":1}}],[\"closeallunmodifiededitors<cr>\",{\"1\":{\"43\":1}}],[\"cloud\",{\"1\":{\"29\":2}}],[\"cloud<\",{\"1\":{\"29\":1}}],[\"clear\",{\"1\":{\"43\":1}}],[\"clipboard+=ideaput\",{\"1\":{\"43\":1}}],[\"clipboard+=ideaputset\",{\"1\":{\"43\":1}}],[\"clipboard=unnamed\",{\"1\":{\"43\":1}}],[\"client\",{\"1\":{\"14\":1,\"29\":3,\"32\":1}}],[\"car\",{\"1\":{\"43\":1}}],[\"cart\",{\"1\":{\"14\":1}}],[\"ca<\",{\"1\":{\"43\":2}}],[\"ca\",{\"1\":{\"43\":10}}],[\"caw\",{\"1\":{\"43\":2}}],[\"cachekey\",{\"1\":{\"53\":2}}],[\"cache\",{\"1\":{\"38\":1,\"53\":1}}],[\"cached\",{\"1\":{\"26\":2}}],[\"catalina\",{\"1\":{\"17\":1}}],[\"cannot\",{\"1\":{\"9\":1}}],[\"cd8d3e8df47b\",{\"1\":{\"22\":1}}],[\"cd\",{\"1\":{\"13\":1,\"14\":1,\"17\":1,\"18\":1,\"26\":1}}],[\"cp命令拷贝到nginx容器中\",{\"1\":{\"38\":1}}],[\"cp=\",{\"1\":{\"8\":1}}],[\"cp\",{\"1\":{\"6\":2,\"8\":1,\"38\":1}}],[\"code代码修改相关\",{\"1\":{\"43\":1}}],[\"code\",{\"1\":{\"43\":1}}],[\"count++\",{\"1\":{\"53\":1}}],[\"count\",{\"1\":{\"19\":1,\"53\":2}}],[\"copy\",{\"1\":{\"17\":5,\"26\":1}}],[\"consumes\",{\"1\":{\"29\":4}}],[\"contextrun<cr>\",{\"1\":{\"43\":2}}],[\"context\",{\"1\":{\"25\":1,\"26\":3,\"54\":2}}],[\"containskey\",{\"1\":{\"53\":1}}],[\"contains\",{\"1\":{\"53\":1}}],[\"container\",{\"1\":{\"2\":1,\"19\":1,\"25\":5,\"26\":4}}],[\"contact\",{\"1\":{\"14\":1}}],[\"connect\",{\"1\":{\"21\":1,\"22\":2}}],[\"connection\",{\"1\":{\"14\":1}}],[\"conf后copy到容器内\",{\"1\":{\"38\":1}}],[\"configuration\",{\"1\":{\"54\":2}}],[\"config\",{\"1\":{\"13\":3,\"53\":1,\"54\":1}}],[\"conf\",{\"1\":{\"12\":9,\"14\":6,\"25\":8,\"38\":8}}],[\"compatibility\",{\"1\":{\"53\":1}}],[\"compile\",{\"1\":{\"43\":1}}],[\"compiledirty<cr>\",{\"1\":{\"43\":1}}],[\"compose\",{\"1\":{\"24\":2,\"25\":5,\"26\":7}}],[\"common\",{\"1\":{\"53\":2,\"54\":1}}],[\"commentary\",{\"1\":{\"43\":1}}],[\"commands\",{\"1\":{\"26\":1}}],[\"command\",{\"1\":{\"26\":3}}],[\"commandline\",{\"1\":{\"20\":1}}],[\"commit\",{\"1\":{\"9\":1}}],[\"commit将新的这个容器快照生成一个镜像\",{\"1\":{\"9\":1}}],[\"com\",{\"1\":{\"6\":1,\"13\":3,\"17\":1,\"20\":1,\"21\":4,\"29\":1,\"32\":1,\"47\":1,\"54\":3}}],[\"cv\",{\"1\":{\"2\":1}}],[\"环境变量\",{\"1\":{\"25\":1}}],[\"环境这两层\",{\"1\":{\"17\":1}}],[\"环境不同的\",{\"1\":{\"2\":1}}],[\"环境\",{\"1\":{\"2\":1,\"16\":1,\"17\":1}}],[\"大概流程是这样\",{\"1\":{\"16\":1}}],[\"大概的步骤有\",{\"1\":{\"2\":1}}],[\"大家思考几个问题\",{\"1\":{\"11\":1}}],[\"大家可以看到\",{\"1\":{\"24\":1}}],[\"大家可以发现\",{\"1\":{\"2\":1}}],[\"大家可以对比一下之前传统的安装方式\",{\"1\":{\"2\":1}}],[\"大法\",{\"1\":{\"2\":1}}],[\"看看哪个效率更高一些\",{\"1\":{\"2\":1}}],[\"软件\",{\"1\":{\"2\":1}}],[\"首先通过命令创建一个网络\",{\"1\":{\"22\":1}}],[\"首先创建容器并指定数据卷\",{\"1\":{\"13\":1}}],[\"首先我们来学习\",{\"1\":{\"5\":1}}],[\"首先\",{\"1\":{\"2\":1,\"18\":1,\"20\":1}}],[\"统一学习环境\",{\"1\":{\"1\":1}}],[\"肯定要保证你的机器上有\",{\"1\":{\"1\":1}}],[\"帮我们安装和部署软件\",{\"1\":{\"1\":1}}],[\"1m\",{\"1\":{\"38\":1}}],[\"10\",{\"1\":{\"29\":1}}],[\"123\",{\"1\":{\"25\":2}}],[\"12月\",{\"1\":{\"13\":2}}],[\"18081\",{\"1\":{\"25\":2,\"26\":4}}],[\"18080\",{\"1\":{\"25\":2,\"26\":2}}],[\"18\",{\"1\":{\"22\":6}}],[\"144\",{\"1\":{\"17\":1}}],[\"141mb\",{\"1\":{\"7\":1,\"19\":1,\"26\":1}}],[\"13301212233\",{\"1\":{\"14\":2}}],[\"13700221122\",{\"1\":{\"14\":1}}],[\"13900112222\",{\"1\":{\"14\":1}}],[\"11\",{\"1\":{\"14\":3,\"17\":1,\"26\":2,\"53\":2}}],[\"15\",{\"1\":{\"14\":3,\"26\":2}}],[\"192\",{\"1\":{\"47\":1}}],[\"19\",{\"1\":{\"14\":3,\"29\":1}}],[\"172\",{\"1\":{\"20\":7,\"22\":6}}],[\"17t19\",{\"1\":{\"13\":1}}],[\"17\",{\"1\":{\"7\":1,\"19\":1,\"20\":7}}],[\"168\",{\"1\":{\"47\":1}}],[\"16\",{\"1\":{\"7\":1,\"17\":1,\"19\":1}}],[\"1\",{\"0\":{\"1\":1,\"2\":2,\"3\":1,\"5\":1,\"6\":2,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"12\":1,\"16\":1,\"21\":1,\"25\":1,\"33\":1,\"42\":1,\"46\":1,\"53\":1},\"1\":{\"13\":4,\"14\":8,\"18\":2,\"19\":5,\"20\":1,\"22\":3,\"26\":3,\"29\":1,\"47\":1,\"53\":2}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
