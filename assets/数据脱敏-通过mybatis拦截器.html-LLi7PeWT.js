const n=JSON.parse('{"key":"v-06795f94","path":"/posts/%E6%95%B0%E6%8D%AE%E8%84%B1%E6%95%8F-%E9%80%9A%E8%BF%87mybatis%E6%8B%A6%E6%88%AA%E5%99%A8.html","title":"数据脱敏-通过mybatis拦截器","lang":"zh-CN","frontmatter":{"description":"通过sql拦截器实现前端显示假脱敏","aside":false,"date":"2023-11-10T00:00:00.000Z","tag":["Java","Mybatis","Spring","安全"],"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E6%95%B0%E6%8D%AE%E8%84%B1%E6%95%8F-%E9%80%9A%E8%BF%87mybatis%E6%8B%A6%E6%88%AA%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"首页"}],["meta",{"property":"og:title","content":"数据脱敏-通过mybatis拦截器"}],["meta",{"property":"og:description","content":"通过sql拦截器实现前端显示假脱敏"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-25T09:00:52.000Z"}],["meta",{"property":"article:author","content":"狸猫不会跑"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Mybatis"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"安全"}],["meta",{"property":"article:published_time","content":"2023-11-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-25T09:00:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据脱敏-通过mybatis拦截器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-25T09:00:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"狸猫不会跑\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"1. 添加脱敏拦截器","slug":"_1-添加脱敏拦截器","link":"#_1-添加脱敏拦截器","children":[]},{"level":3,"title":"2.注册拦截器Bean到MybatisPlus的配置类中","slug":"_2-注册拦截器bean到mybatisplus的配置类中","link":"#_2-注册拦截器bean到mybatisplus的配置类中","children":[]}],"git":{"createdTime":1703494852000,"updatedTime":1703494852000,"contributors":[{"name":"limaoKL","email":"enjiahao98@qq.com","commits":1}]},"readingTime":{"minutes":1.72,"words":515},"filePathRelative":"posts/数据脱敏-通过mybatis拦截器.md","localizedDate":"2023年11月10日","excerpt":"<h1> 数据脱敏-通过mybatis拦截器</h1>\\n<h3> 1. 添加脱敏拦截器</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> <span class=\\"token namespace\\">cn<span class=\\"token punctuation\\">.</span>cmcc<span class=\\"token punctuation\\">.</span>common<span class=\\"token punctuation\\">.</span>datasource<span class=\\"token punctuation\\">.</span>config</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">cn<span class=\\"token punctuation\\">.</span>cmcc<span class=\\"token punctuation\\">.</span>common<span class=\\"token punctuation\\">.</span>utils<span class=\\"token punctuation\\">.</span>bean<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">ObjectUtils</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">cn<span class=\\"token punctuation\\">.</span>hutool<span class=\\"token punctuation\\">.</span>crypto<span class=\\"token punctuation\\">.</span>digest<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">DigestUtil</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>cache<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">CacheKey</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>executor<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Executor</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>mapping<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">BoundSql</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>mapping<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">MappedStatement</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Interceptor</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Intercepts</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Invocation</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>plugin<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Signature</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>session<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">ResultHandler</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>session<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">RowBounds</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">javax<span class=\\"token punctuation\\">.</span>annotation<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">PostConstruct</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token operator\\">*</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token doc-comment comment\\">/**\\n * <span class=\\"token keyword\\">@author</span> leijiahao\\n * <span class=\\"token keyword\\">@date</span> 2023-11-07\\n */</span>\\n<span class=\\"token annotation punctuation\\">@Intercepts</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span><span class=\\"token annotation punctuation\\">@Signature</span><span class=\\"token punctuation\\">(</span>type <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Executor</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> method <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"query\\"</span><span class=\\"token punctuation\\">,</span> args <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token class-name\\">MappedStatement</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">RowBounds</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">ResultHandler</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">CacheKey</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">BoundSql</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">DataMasInterceptor</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">Interceptor</span> <span class=\\"token punctuation\\">{</span>\\n\\n\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> encryptionList<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Set</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> targetMappers<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 存储目标 Mapper 的集合</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">DataMasInterceptor</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Set</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> targetMappers<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>targetMappers <span class=\\"token operator\\">=</span> targetMappers<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">maskChineseString</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> input<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>input <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">||</span> input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">length</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">||</span> <span class=\\"token string\\">\\"null\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> input<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// 查找倒数两个汉字的索引</span>\\n        <span class=\\"token keyword\\">int</span> lastIndex <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">length</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">char</span> c <span class=\\"token operator\\">=</span> input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charAt</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isChineseCharacter</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                count<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>count <span class=\\"token operator\\">==</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    lastIndex <span class=\\"token operator\\">=</span> i<span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token keyword\\">break</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// 使用 * 号替换前面的部分</span>\\n        <span class=\\"token class-name\\">StringBuilder</span> sb <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">StringBuilder</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> lastIndex<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\n            sb<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">append</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"*\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// 保留倒数两个汉字及后面的部分</span>\\n        sb<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">append</span><span class=\\"token punctuation\\">(</span>input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">substring</span><span class=\\"token punctuation\\">(</span>lastIndex<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> sb<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isChineseCharacter</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">char</span> c<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Character<span class=\\"token punctuation\\">.</span>UnicodeBlock</span> block <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Character<span class=\\"token punctuation\\">.</span>UnicodeBlock</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">of</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> block <span class=\\"token operator\\">==</span> <span class=\\"token class-name\\">Character<span class=\\"token punctuation\\">.</span>UnicodeBlock</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">CJK_UNIFIED_IDEOGRAPHS</span> <span class=\\"token operator\\">||</span> block <span class=\\"token operator\\">==</span> <span class=\\"token class-name\\">Character<span class=\\"token punctuation\\">.</span>UnicodeBlock</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">CJK_COMPATIBILITY_IDEOGRAPHS</span> <span class=\\"token operator\\">||</span> block <span class=\\"token operator\\">==</span> <span class=\\"token class-name\\">Character<span class=\\"token punctuation\\">.</span>UnicodeBlock</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">double</span> <span class=\\"token function\\">maskLonLat</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span> value<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ObjectUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> value<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token class-name\\">Random</span> random <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">double</span> offset <span class=\\"token operator\\">=</span> random<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nextDouble</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">0.0001</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">0.0001</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> value <span class=\\"token operator\\">+</span> offset<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PostConstruct</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        encryptionList <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// TODO: 2023-11-08 设置加密字段</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"cgi\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"enb_id\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"enb_name\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"enodeb_name\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"cell_name\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"cell_id\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"project_name\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"project_id\\");</span>\\n<span class=\\"token comment\\">//        encryptionList.add(\\"user_name\\");</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Object</span> <span class=\\"token function\\">intercept</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Invocation</span> invocation<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">Throwable</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">Object</span> arg1 <span class=\\"token operator\\">=</span> invocation<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getArgs</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 拦截通用查询,加密字段</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>arg1 <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">MappedStatement</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">//                &amp;&amp; targetMappers.contains(((MappedStatement) arg1).getId())</span>\\n                <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token operator\\">!</span>encryptionList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">Object</span> result <span class=\\"token operator\\">=</span> invocation<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">proceed</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>result <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token class-name\\">ArrayList</span> resultList <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ArrayList</span><span class=\\"token punctuation\\">)</span> result<span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> o <span class=\\"token operator\\">:</span> resultList<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>o <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Map</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token class-name\\">Map</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span></span> resultMap <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Map</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">)</span> o<span class=\\"token punctuation\\">;</span>\\n                        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> key <span class=\\"token operator\\">:</span> encryptionList<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">containsKey</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                                <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">endsWith</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                                    resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">maskChineseString</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">valueOf</span><span class=\\"token punctuation\\">(</span>resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                                <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">endsWith</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"lon\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">||</span> key<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">endsWith</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"lat\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                                    resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">maskLonLat</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Double</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseDouble</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">valueOf</span><span class=\\"token punctuation\\">(</span>resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                                <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n                                    <span class=\\"token comment\\">//MD5加密</span>\\n                                    resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">put</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">DigestUtil</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">md5Hex</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">valueOf</span><span class=\\"token punctuation\\">(</span>resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                                                                               <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBytes</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                                <span class=\\"token punctuation\\">}</span>\\n                            <span class=\\"token punctuation\\">}</span>\\n                        <span class=\\"token punctuation\\">}</span>\\n                    <span class=\\"token punctuation\\">}</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token keyword\\">return</span> result<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> invocation<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">proceed</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
